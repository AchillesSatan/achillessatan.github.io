<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>【Hexo】Part 3. How to Customize Your NexT</title>
    <url>/posts/54115/</url>
    <content><![CDATA[<h3 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h3><p>According to the <a href="https://theme-next.org/docs/advanced-settings" target="_blank" rel="noopener">official document</a> of <code>NexT</code>, we can implement the customization of <code>NexT</code> by <code>theme_inject</code>. This blog will talk about how to customize your <code>NexT</code> with the config and create your own inject step by step as well.</p>
<h3 id="Using-Injects"><a href="#Using-Injects" class="headerlink" title="Using Injects"></a>Using Injects</h3><h4 id="custom-file-path"><a href="#custom-file-path" class="headerlink" title="custom_file_path"></a><code>custom_file_path</code></h4><p>First, uncomment the code in the <code>themes/next/_config.yml</code>( If you are using the submodule and CI tool metioned in the previous blog, please remember to change the <code>deploy/_config.yml</code> as well). <code>NexT</code> has already created the 10 injection points as following. Of cause, you can change the path here to your own customized path.</p>
<a id="more"></a>

<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="attr">head:</span> <span class="string">source/_data/head.swig</span></span><br><span class="line">  <span class="attr">header:</span> <span class="string">source/_data/header.swig</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="string">source/_data/sidebar.swig</span></span><br><span class="line">  <span class="attr">postMeta:</span> <span class="string">source/_data/post-meta.swig</span></span><br><span class="line">  <span class="attr">postBodyEnd:</span> <span class="string">source/_data/post-body-end.swig</span></span><br><span class="line">  <span class="attr">footer:</span> <span class="string">source/_data/footer.swig</span></span><br><span class="line">  <span class="attr">bodyEnd:</span> <span class="string">source/_data/body-end.swig</span></span><br><span class="line">  <span class="attr">variable:</span> <span class="string">source/_data/variables.styl</span></span><br><span class="line">  <span class="attr">mixin:</span> <span class="string">source/_data/mixins.styl</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure>

<p>Then, create the file with the path set in the config file and add your own code there.</p>
<h4 id="Insert-Your-Own-Injecttion"><a href="#Insert-Your-Own-Injecttion" class="headerlink" title="Insert Your Own Injecttion"></a>Insert Your Own Injecttion</h4><p>First, create a new <code>js</code> file under the <code>scripts</code> folder. All the <code>js</code> files will be excuted when <code>Hexo</code> server has been started.</p>
<p><code>scripts/gitter.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">hexo.extend.filter.register(<span class="string">'theme_inject'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">injects</span>) </span>&#123;</span><br><span class="line">  injects.head.file(<span class="string">'gitter'</span>, <span class="string">'views/gitter.swig'</span>, &#123;&#125;, &#123;<span class="attr">cache</span>: <span class="literal">true</span>&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>Then create the view file with the path above:</p>
<p><code>views/gitter.swig</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  ((<span class="built_in">window</span>.gitter = &#123;&#125;).chat = &#123;&#125;).options = &#123;</span><br><span class="line">    room: <span class="string">'your-room-name'</span></span><br><span class="line">  &#125;&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script src="https:/</span><span class="regexp">/sidecar.gitter.im/</span>dist/sidecar.v1.js<span class="string">" async defer&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>

<p>Start the server, now you can see the <code>gitter</code> right bottom. In addition, you can also inject the style of <code>gitter</code> as well.</p>
<p><code>scripts/gitter.js</code></p>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">hexo.extend.filter.register('theme_inject', function(injects) &#123;</span><br><span class="line">   injects.head.file('gitter', 'views/gitter.swig', &#123;&#125;, &#123;cache: true&#125;);</span><br><span class="line"><span class="addition">+  injects.style.push('styles/gitter.styl'); // Injection of style</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p><code>styles/gitter.styl</code></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.gitter-open-chat-button</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: slateblue;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: .<span class="number">8rem</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">1rem</span>;</span><br><span class="line">  <span class="attribute">padding</span>: .<span class="number">4rem</span> .<span class="number">8rem</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: .<span class="number">6rem</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> .<span class="number">4rem</span> <span class="number">#111</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: .<span class="number">9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.gitter-open-chat-button</span><span class="selector-pseudo">:focus</span>,<span class="selector-class">.gitter-open-chat-button</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: slateblue;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">0.8rem</span> <span class="number">#111</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.gitter-open-chat-button</span><span class="selector-class">.is-collapsed</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">150%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar-toggle</span> &#123;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Example-Add-Google-Adsense-in-Your-Blog"><a href="#Example-Add-Google-Adsense-in-Your-Blog" class="headerlink" title="Example: Add Google Adsense in Your Blog"></a>Example: Add Google Adsense in Your Blog</h3><p>I recommend to use the automatic adv of <code>Google Adsense</code>. It has no need to think about where to put the advertisement and easier to import. Just one line in <code>source/_data/header.swig</code>.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">data-ad-client</span>=<span class="string">"&#123;CLIENT-ID&#125;"</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Example-Customize-the-Header-Image-of-Your-Blog"><a href="#Example-Customize-the-Header-Image-of-Your-Blog" class="headerlink" title="Example: Customize the Header Image of Your Blog"></a>Example: Customize the Header Image of Your Blog</h3><p><code>NexT</code> is a Minimalism theme. That’s why we choose it. Since it has been more and more popular, sometimes we’d like to change something in our blog to make it look a little different with others.</p>
<p><img src="/images/20200315-how-to-customize-next-theme.jpg" alt="My Blog"></p>
<p>I have added the header image and changed the style of web title and menus. In addition, to avoid the footer being overlapped with the <code>Addthis</code> plugin on mobile, I expanded the <code>padding-bottom</code> of <code>footer</code>.</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(../images/header_background.jpg);</span><br><span class="line">    <span class="attribute">background-size</span>: cover;</span><br><span class="line">    <span class="attribute">background-position</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header-inner</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">100px</span> <span class="number">0</span> <span class="number">70px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.site-subtitle</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#f5f5f5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.site-nav-toggle</span> <span class="selector-class">.toggle-line</span><span class="selector-class">.toggle-line</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#f5f5f5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.menu</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.65</span>);</span><br><span class="line">    <span class="attribute">margin-left</span>: auto;</span><br><span class="line">    <span class="attribute">margin-right</span>: auto;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: initial;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.menu</span> <span class="selector-class">.menu-item</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">text-transform</span>: capitalize;</span><br><span class="line">    <span class="attribute">line-height</span>: inherit;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid transparent;</span><br><span class="line">    <span class="attribute">transition-property</span>: border-color;</span><br><span class="line">    <span class="attribute">transition-duration</span>: <span class="number">0.2s</span>;</span><br><span class="line">    <span class="attribute">transition-timing-function</span>: ease-in-out;</span><br><span class="line">    <span class="attribute">transition-delay</span>: <span class="number">0s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">footer</span><span class="selector-class">.footer</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">0</span> <span class="number">50px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width:</span> <span class="number">767px</span>) &#123;</span><br><span class="line">    <span class="selector-class">.menu</span> &#123;</span><br><span class="line">        <span class="attribute">text-align</span>: left;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.menu</span> <span class="selector-class">.menu-item</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: block;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">        <span class="attribute">vertical-align</span>: top;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.menu</span> <span class="selector-class">.menu-item</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Development</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>Google Adsense</tag>
      </tags>
  </entry>
  <entry>
    <title>【Hexo】Part 2. How to Deploy Hexo Project with Github Actions</title>
    <url>/posts/16107/</url>
    <content><![CDATA[<h3 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h3><p>In the last blog <a href="https://achillessatan.github.io/posts/54991/">【Hexo】Part 1. How to Setup Blog with Hexo and NexT on GitHub Pages</a>, we learned how to setup up a blog web with Hexo and deploy it from local to GitHub Pages.</p>
<p>In this blog, it will talk about how to deploy you blog automatically with the CI tool <code>Github Action</code>.</p>
<h3 id="Prepare-the-Config-File-of-the-Theme"><a href="#Prepare-the-Config-File-of-the-Theme" class="headerlink" title="Prepare the Config File of the Theme"></a>Prepare the Config File of the Theme</h3><p>As metioned in the last blog, we are now using the <code>github submodule</code> to manage the theme <code>NexT</code>. The submodule can be initialized on Github Action with command <code>git submodule update --init</code>. However, we will lose the changes we have made in the config file  <code>themes/next/_config.yml</code>. There are several ways to resolve this:</p>
<ul>
<li>Fork the <code>NexT</code> in our repository and commit the changes of the config. But we will need to do something more when <code>NexT</code> is updated.</li>
<li>Copy all the things into the main config file <code>_config.yml</code>. This will make the <code>_config.yml</code> a little confusing.</li>
<li>Backup the config file in the main repository and overwrite the original one in the Github Action.</li>
</ul>
<a id="more"></a>

<h3 id="Set-DEPLOY-KEY"><a href="#Set-DEPLOY-KEY" class="headerlink" title="Set DEPLOY_KEY"></a>Set <code>DEPLOY_KEY</code></h3><p>Copy the SSH key to <code>DEPLOY_KEY</code> in secrects of Github Repository</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure>

<p><img src="/images/20200314-how-to-deploy-hexo-with-github-action-1.jpg" alt="GitHub"></p>
<h3 id="Workflow-Config-File"><a href="#Workflow-Config-File" class="headerlink" title="Workflow Config File"></a>Workflow Config File</h3><p><code>.github/workflows/deploy.yml</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Hexo</span> <span class="string">Deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="number">12</span></span><br><span class="line">          <span class="attr">registry-url:</span> <span class="string">https://registry.npmjs.org/</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">mkdir</span> <span class="string">-p</span> <span class="string">~/.ssh/</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">echo</span> <span class="string">"$<span class="template-variable">&#123;&#123;secrets.DEPLOY_KEY&#125;&#125;</span>"</span> <span class="string">&gt;</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">chmod</span> <span class="number">600</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">ssh-keyscan</span> <span class="string">github.com</span> <span class="string">&gt;&gt;</span> <span class="string">~/.ssh/known_hosts</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.name</span> <span class="string">'&#123;USERNAME&#125;'</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.email</span> <span class="string">'&#123;EMAIL&#125;'</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">npm</span> <span class="string">ci</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">npm</span> <span class="string">i</span> <span class="string">-g</span> <span class="string">hexo-cli</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">git</span> <span class="string">submodule</span> <span class="string">update</span> <span class="string">--init</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">cp</span> <span class="string">deploy/_config.yml</span> <span class="string">themes/next/_config.yml</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">hexo</span> <span class="string">deploy</span> <span class="string">-g</span></span><br></pre></td></tr></table></figure>

<h3 id="Check-the-Result-of-Deployment"><a href="#Check-the-Result-of-Deployment" class="headerlink" title="Check the Result of Deployment"></a>Check the Result of Deployment</h3><p>The action will be triggered when <code>master</code> branch was pushed. After that, we can check the result of the action in the <code>Action</code> tab of the repository.</p>
<p><img src="/images/20200314-how-to-deploy-hexo-with-github-action-2.jpg" alt="GitHub"><br><img src="/images/20200314-how-to-deploy-hexo-with-github-action-3.jpg" alt="GitHub"></p>
]]></content>
      <categories>
        <category>Development</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>GitHub Action</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>【Hexo】Part 1. How to Setup Blog with Hexo and NexT on GitHub Pages</title>
    <url>/posts/54991/</url>
    <content><![CDATA[<h3 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h3><p>This article simply talks about how to setup blog with Hexo and NexT and deploy it to GitHub Pages.</p>
<h3 id="Install-Node-js-amp-npm-with-Homebrew"><a href="#Install-Node-js-amp-npm-with-Homebrew" class="headerlink" title="Install Node.js &amp; npm with Homebrew"></a>Install Node.js &amp; npm with Homebrew</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure>

<h3 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="Create-New-Project"><a href="#Create-New-Project" class="headerlink" title="Create New Project"></a>Create New Project</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init blog</span><br><span class="line">INFO  Copying data to ~/Documents/blog</span><br><span class="line">INFO  You are almost <span class="keyword">done</span>! Don<span class="string">'t forget to run '</span>npm install<span class="string">' before you start blogging with Hexo!</span></span><br></pre></td></tr></table></figure>

<p>Following the instruction，run <code>npm install</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<h3 id="Setup-Theme-NexT"><a href="#Setup-Theme-NexT" class="headerlink" title="Setup Theme - NexT"></a>Setup Theme - <a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">NexT</a></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">git submodule add https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<p>It is a little different from official document. It will be helpful in the next step(<a href="https://achillessatan.github.io/posts/16107/">【Hexo】2. How to Deploy Hexo Project with Github Actions</a>).</p>
<p>Change the <code>theme</code> in <code>./config.yml</code> to <code>next</code>.</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>

<h3 id="Start-Server-on-Local"><a href="#Start-Server-on-Local" class="headerlink" title="Start Server on Local"></a>Start Server on Local</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>

<h3 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h3><p>Create a repository on GitHub with the name of <code>{USERNAME}.github.io</code>:</p>
<p><img src="/images/20200314-how-to-setup-hexo-blog.jpg" alt="GitHub"></p>
<p>Install the plugin of deployment:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>Add the config of deployment in <code>./_config.yml</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: http://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">github</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:xxxx/xxxx.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<p>Excute the command of deployment：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo deploy -g</span><br></pre></td></tr></table></figure>

<p>Now you can access to your own blog by <code>https://{USERNAME}.github.io</code>.</p>
<h3 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h3><h4 id="Plugins-Recommended"><a href="#Plugins-Recommended" class="headerlink" title="Plugins Recommended"></a>Plugins Recommended</h4><ul>
<li><a href="https://github.com/rozbo/hexo-abbrlink" target="_blank" rel="noopener">Abbrlink</a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure>

<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">Plugins:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hexo-abbrlink</span></span><br></pre></td></tr></table></figure>

<ul>
<li>Sitemap</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>

<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="attr">Plugins:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hexo-generator-sitemap</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hexo-generator-baidu-sitemap</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#sitemap</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br><span class="line"><span class="attr">baidusitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidusitemap.xml</span></span><br></pre></td></tr></table></figure>

<ul>
<li>Feed</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>

<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="attr">Plugins:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo-generator-feed</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure>

<h4 id="Add-robots-txt-in-source-folder"><a href="#Add-robots-txt-in-source-folder" class="headerlink" title="Add robots.txt in source folder"></a>Add <code>robots.txt</code> in <code>source</code> folder</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># hexo robots.txt</span><br><span class="line">User-agent: *</span><br><span class="line">Allow: &#x2F;</span><br><span class="line">Allow: &#x2F;archives&#x2F;</span><br><span class="line"></span><br><span class="line">Disallow: &#x2F;vendors&#x2F;</span><br><span class="line">Disallow: &#x2F;js&#x2F;</span><br><span class="line">Disallow: &#x2F;css&#x2F;</span><br><span class="line">Disallow: &#x2F;fonts&#x2F;</span><br><span class="line">Disallow: &#x2F;vendors&#x2F;</span><br><span class="line">Disallow: &#x2F;fancybox&#x2F;</span><br><span class="line"></span><br><span class="line">Sitemap: https:&#x2F;&#x2F;&#123;USERNAME&#125;.github.io&#x2F;sitemap.xml</span><br><span class="line">Sitemap: https:&#x2F;&#x2F;&#123;USERNAME&#125;.github.io&#x2F;baidusitemap.xml</span><br></pre></td></tr></table></figure>

<h4 id="Comman-commands"><a href="#Comman-commands" class="headerlink" title="Comman commands"></a>Comman commands</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">"postName"</span> <span class="comment"># Next Post</span></span><br><span class="line">hexo new page <span class="string">"pageName"</span> <span class="comment">#New Page</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Development</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>【Leetcode】88. Merge Sorted Array</title>
    <url>/posts/55608/</url>
    <content><![CDATA[<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p><a href="https://leetcode.com/problems/merge-sorted-array/" target="_blank" rel="noopener">https://leetcode.com/problems/merge-sorted-array/</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.</span><br><span class="line"></span><br><span class="line">Note:</span><br><span class="line"></span><br><span class="line">The number of elements initialized in nums1 and nums2 are m and n respectively.</span><br><span class="line">You may assume that nums1 has enough space (size that is greater or equal to m + n) to hold additional elements from nums2.</span><br><span class="line">Example:</span><br><span class="line"></span><br><span class="line">Input:</span><br><span class="line">nums1 &#x3D; [1,2,3,0,0,0], m &#x3D; 3</span><br><span class="line">nums2 &#x3D; [2,5,6],       n &#x3D; 3</span><br><span class="line"></span><br><span class="line">Output: [1,2,2,3,5,6]</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># <span class="doctag">@param</span> &#123;Integer[]&#125; nums1</span></span><br><span class="line"><span class="comment"># <span class="doctag">@param</span> &#123;Integer&#125; m</span></span><br><span class="line"><span class="comment"># <span class="doctag">@param</span> &#123;Integer[]&#125; nums2</span></span><br><span class="line"><span class="comment"># <span class="doctag">@param</span> &#123;Integer&#125; n</span></span><br><span class="line"><span class="comment"># <span class="doctag">@return</span> &#123;Void&#125; Do not return anything, modify nums1 in-place instead.</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">merge</span><span class="params">(nums1, m, nums2, n)</span></span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">if</span> n == <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> <span class="number">1</span>..nums1.size</span><br><span class="line">        <span class="keyword">if</span> m &gt;= <span class="number">1</span> &amp;&amp; nums1[m - <span class="number">1</span>] &gt; nums2[n - <span class="number">1</span>]</span><br><span class="line">            nums1[nums1.size - f] = nums1[m - <span class="number">1</span>]</span><br><span class="line">            m -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">elsif</span>  n &gt;= <span class="number">1</span></span><br><span class="line">            nums1[nums1.size - f] = nums2[n - <span class="number">1</span>]</span><br><span class="line">            n -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
        <tag>算法</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>【Leetcode】21. Merge Two Sorted Lists</title>
    <url>/posts/13064/</url>
    <content><![CDATA[<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p><a href="https://leetcode.com/problems/merge-two-sorted-lists/" target="_blank" rel="noopener">https://leetcode.com/problems/merge-two-sorted-lists/</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.</span><br><span class="line"></span><br><span class="line">Example:</span><br><span class="line"></span><br><span class="line">Input: 1-&gt;2-&gt;4, 1-&gt;3-&gt;4</span><br><span class="line">Output: 1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"># class ListNode</span></span><br><span class="line"><span class="comment">#     attr_accessor :val, :next</span></span><br><span class="line"><span class="comment">#     def initialize(val)</span></span><br><span class="line"><span class="comment">#         <span class="doctag">@val</span> = val</span></span><br><span class="line"><span class="comment">#         <span class="doctag">@next</span> = nil</span></span><br><span class="line"><span class="comment">#     end</span></span><br><span class="line"><span class="comment"># end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># <span class="doctag">@param</span> &#123;ListNode&#125; l1</span></span><br><span class="line"><span class="comment"># <span class="doctag">@param</span> &#123;ListNode&#125; l2</span></span><br><span class="line"><span class="comment"># <span class="doctag">@return</span> &#123;ListNode&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">merge_two_lists</span><span class="params">(l1, l2)</span></span></span><br><span class="line">    head = ListNode.new(<span class="literal">nil</span>)</span><br><span class="line">    current_node = head</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> !l1.<span class="literal">nil</span>? &amp;&amp; !l2.<span class="literal">nil</span>? <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> l1.val &lt;= l2.val</span><br><span class="line">            current_node.<span class="keyword">next</span> = l1</span><br><span class="line">            l1 = l1.<span class="keyword">next</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            current_node.<span class="keyword">next</span> = l2</span><br><span class="line">            l2 = l2.<span class="keyword">next</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        current_node = current_node.<span class="keyword">next</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> !l1.<span class="literal">nil</span>?</span><br><span class="line">        current_node.<span class="keyword">next</span> = l1</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> !l2.<span class="literal">nil</span>?</span><br><span class="line">        current_node.<span class="keyword">next</span> = l2</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    head.<span class="keyword">next</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
        <tag>算法</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>【Leetcode】36. Valid Sudoku</title>
    <url>/posts/17861/</url>
    <content><![CDATA[<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p><a href="https://leetcode.com/problems/valid-sudoku/" target="_blank" rel="noopener">https://leetcode.com/problems/valid-sudoku/</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Determine if a 9x9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:</span><br><span class="line"></span><br><span class="line">Each row must contain the digits 1-9 without repetition.</span><br><span class="line">Each column must contain the digits 1-9 without repetition.</span><br><span class="line">Each of the 9 3x3 sub-boxes of the grid must contain the digits 1-9 without repetition.</span><br><span class="line"></span><br><span class="line">A partially filled sudoku which is valid.</span><br><span class="line"></span><br><span class="line">The Sudoku board could be partially filled, where empty cells are filled with the character &#39;.&#39;.</span><br><span class="line"></span><br><span class="line">Example 1:</span><br><span class="line"></span><br><span class="line">Input:</span><br><span class="line">[</span><br><span class="line">  [&quot;5&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],</span><br><span class="line">  [&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;,&quot;9&quot;,&quot;5&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],</span><br><span class="line">  [&quot;.&quot;,&quot;9&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;],</span><br><span class="line">  [&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;3&quot;],</span><br><span class="line">  [&quot;4&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;],</span><br><span class="line">  [&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;],</span><br><span class="line">  [&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;8&quot;,&quot;.&quot;],</span><br><span class="line">  [&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;4&quot;,&quot;1&quot;,&quot;9&quot;,&quot;.&quot;,&quot;.&quot;,&quot;5&quot;],</span><br><span class="line">  [&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;9&quot;]</span><br><span class="line">]</span><br><span class="line">Output: true</span><br><span class="line">Example 2:</span><br><span class="line"></span><br><span class="line">Input:</span><br><span class="line">[</span><br><span class="line">  [&quot;8&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],</span><br><span class="line">  [&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;,&quot;9&quot;,&quot;5&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],</span><br><span class="line">  [&quot;.&quot;,&quot;9&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;],</span><br><span class="line">  [&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;3&quot;],</span><br><span class="line">  [&quot;4&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;],</span><br><span class="line">  [&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;],</span><br><span class="line">  [&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;8&quot;,&quot;.&quot;],</span><br><span class="line">  [&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;4&quot;,&quot;1&quot;,&quot;9&quot;,&quot;.&quot;,&quot;.&quot;,&quot;5&quot;],</span><br><span class="line">  [&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;9&quot;]</span><br><span class="line">]</span><br><span class="line">Output: false</span><br><span class="line">Explanation: Same as Example 1, except with the 5 in the top left corner being</span><br><span class="line">    modified to 8. Since there are two 8&#39;s in the top left 3x3 sub-box, it is invalid.</span><br><span class="line">Note:</span><br><span class="line"></span><br><span class="line">A Sudoku board (partially filled) could be valid but is not necessarily solvable.</span><br><span class="line">Only the filled cells need to be validated according to the mentioned rules.</span><br><span class="line">The given board contain only digits 1-9 and the character &#39;.&#39;.</span><br><span class="line">The given board size is always 9x9.</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># <span class="doctag">@param</span> &#123;Character[][]&#125; board</span></span><br><span class="line"><span class="comment"># <span class="doctag">@return</span> &#123;Boolean&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_valid_sudoku</span><span class="params">(board)</span></span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..<span class="number">8</span> <span class="keyword">do</span></span><br><span class="line">        arr1 = []</span><br><span class="line">        arr2 = []</span><br><span class="line">        arr3 = []</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..<span class="number">8</span> <span class="keyword">do</span></span><br><span class="line">            arr1 &lt;&lt; board[i][j] <span class="keyword">unless</span> board[i][j] == <span class="string">"."</span></span><br><span class="line">            arr2 &lt;&lt; board[j][i] <span class="keyword">unless</span> board[j][i] == <span class="string">"."</span></span><br><span class="line">            arr3 &lt;&lt; board[i/<span class="number">3</span> * <span class="number">3</span> + j/<span class="number">3</span>][i%<span class="number">3</span> * <span class="number">3</span> + j%<span class="number">3</span>] <span class="keyword">unless</span> board[i/<span class="number">3</span> * <span class="number">3</span> + j/<span class="number">3</span>][i%<span class="number">3</span> * <span class="number">3</span> + j%<span class="number">3</span>]  == <span class="string">"."</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span> <span class="keyword">unless</span> arr1.size == arr1.uniq.size &amp;&amp; arr2.size == arr2.uniq.size &amp;&amp; arr3.size == arr3.uniq.size</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="literal">true</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
        <tag>算法</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>【Leetcode】29. Divide Two Integers</title>
    <url>/posts/31032/</url>
    <content><![CDATA[<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Given two integers dividend and divisor, divide two integers without using multiplication, division and mod operator.</span><br><span class="line"></span><br><span class="line">Return the quotient after dividing dividend by divisor.</span><br><span class="line"></span><br><span class="line">The integer division should truncate toward zero.</span><br><span class="line"></span><br><span class="line">Example 1:</span><br><span class="line"></span><br><span class="line">Input: dividend &#x3D; 10, divisor &#x3D; 3</span><br><span class="line">Output: 3</span><br><span class="line">Example 2:</span><br><span class="line"></span><br><span class="line">Input: dividend &#x3D; 7, divisor &#x3D; -3</span><br><span class="line">Output: -2</span><br><span class="line">Note:</span><br><span class="line"></span><br><span class="line">Both dividend and divisor will be 32-bit signed integers.</span><br><span class="line">The divisor will never be 0.</span><br><span class="line">Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231,  231 − 1]. For the purpose of this problem, assume that your function returns 231 − 1 when the division result overflows.</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># <span class="doctag">@param</span> &#123;Integer&#125; dividend</span></span><br><span class="line"><span class="comment"># <span class="doctag">@param</span> &#123;Integer&#125; divisor</span></span><br><span class="line"><span class="comment"># <span class="doctag">@return</span> &#123;Integer&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">divide</span><span class="params">(dividend, divisor)</span></span></span><br><span class="line">    sign = (dividend.negative? == divisor.negative?) ? <span class="number">1</span> : -<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    num1 = dividend.abs</span><br><span class="line">    num2 = divisor.abs</span><br><span class="line"></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    mid    = <span class="number">31</span></span><br><span class="line">    <span class="keyword">while</span> num1 &gt;= num2 <span class="keyword">do</span></span><br><span class="line">        i, j = <span class="number">0</span>, mid</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j <span class="keyword">do</span></span><br><span class="line">            mid = (i + j)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">break</span> <span class="keyword">if</span> num2 &lt;&lt; mid &lt;= num1 &amp;&amp; num2 &lt;&lt; (mid + <span class="number">1</span>) &gt; num1</span><br><span class="line">            num2 &lt;&lt; mid &gt; num1 ? j = mid - <span class="number">1</span> : i = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sign &gt; <span class="number">0</span> ? (<span class="number">2</span>**<span class="number">31</span> - <span class="number">1</span>) : ~(<span class="number">2</span>**<span class="number">31</span> - <span class="number">1</span>)  <span class="keyword">if</span> mid &gt; <span class="number">30</span></span><br><span class="line"></span><br><span class="line">        num1 -= num2 &lt;&lt; mid</span><br><span class="line">        result += <span class="number">2</span> ** mid</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    result * sign</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
        <tag>算法</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>【Leetcode】43. Multiply Strings</title>
    <url>/posts/44535/</url>
    <content><![CDATA[<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2, also represented as a string.</span><br><span class="line"></span><br><span class="line">Example 1:</span><br><span class="line"></span><br><span class="line">Input: num1 &#x3D; &quot;2&quot;, num2 &#x3D; &quot;3&quot;</span><br><span class="line">Output: &quot;6&quot;</span><br><span class="line">Example 2:</span><br><span class="line"></span><br><span class="line">Input: num1 &#x3D; &quot;123&quot;, num2 &#x3D; &quot;456&quot;</span><br><span class="line">Output: &quot;56088&quot;</span><br><span class="line">Note:</span><br><span class="line"></span><br><span class="line">The length of both num1 and num2 is &lt; 110.</span><br><span class="line">Both num1 and num2 contain only digits 0-9.</span><br><span class="line">Both num1 and num2 do not contain any leading zero, except the number 0 itself.</span><br><span class="line">You must not use any built-in BigInteger library or convert the inputs to integer directly.</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># <span class="doctag">@param</span> &#123;String&#125; num1</span></span><br><span class="line"><span class="comment"># <span class="doctag">@param</span> &#123;String&#125; num2</span></span><br><span class="line"><span class="comment"># <span class="doctag">@return</span> &#123;String&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">multiply</span><span class="params">(num1, num2)</span></span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"0"</span> <span class="keyword">if</span> num1 == <span class="string">"0"</span> <span class="params">||</span> num2 == <span class="string">"0"</span></span><br><span class="line"></span><br><span class="line">    size1 = num1.size</span><br><span class="line">    size2 = num2.size</span><br><span class="line"></span><br><span class="line">    rst = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span>..num1.size</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">1</span>..num2.size</span><br><span class="line">            rst[i + j - <span class="number">2</span>] = rst[i + j - <span class="number">2</span>].to_i + num1[size1 - i].to_i * num2[size2 - j].to_i</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..(rst.size-<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> rst[i] / <span class="number">10</span> &gt; <span class="number">0</span></span><br><span class="line">            rst[i + <span class="number">1</span>] = rst[i + <span class="number">1</span>].to_i + rst[i] / <span class="number">10</span></span><br><span class="line">            rst[i] = rst[i] % <span class="number">10</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    rst.join.reverse</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
        <tag>算法</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>Top 10 Sorting Algorithms</title>
    <url>/posts/48124/</url>
    <content><![CDATA[<h3 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h3><table>
<thead>
<tr>
<th>Sort Algorithms</th>
<th>Time Complexity(AVG)</th>
<th>Time Complexity(WST)</th>
<th>Time Complexity(BST)</th>
<th>Space Complexity</th>
<th>Stable</th>
</tr>
</thead>
<tbody><tr>
<td>Insert</td>
<td>$O(n^2)$</td>
<td>$O(n^2)$</td>
<td>$O(n)$</td>
<td>$O(1)$</td>
<td>○</td>
</tr>
<tr>
<td>Selection</td>
<td>$O(n^2)$</td>
<td>$O(n^2)$</td>
<td>$O(n^2)$</td>
<td>$O(1)$</td>
<td>×</td>
</tr>
<tr>
<td>Heap</td>
<td>$O(n\log{}n)$</td>
<td>$O(n\log{}n)$</td>
<td>$O(n\log{})$</td>
<td>$O(1)$</td>
<td>×</td>
</tr>
<tr>
<td>Bunble</td>
<td>$O(n^2)$</td>
<td>$O(n^2)$</td>
<td>$O(n)$</td>
<td>$O(1)$</td>
<td>○</td>
</tr>
<tr>
<td>Quick</td>
<td>$O(n\log{}n)$</td>
<td>$O(n^2)$</td>
<td>$O(n\log{}n)$</td>
<td>$O(\log{}n)$</td>
<td>×</td>
</tr>
<tr>
<td>Merge</td>
<td>$O(n\log{}n)$</td>
<td>$O(n\log{}n)$</td>
<td>$O(n\log{}n)$</td>
<td>$O(n)$</td>
<td>○</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>面试</tag>
        <tag>Sorting Algorithms</tag>
      </tags>
  </entry>
  <entry>
    <title>【Leetcode】101. Symmetric Tree</title>
    <url>/posts/20986/</url>
    <content><![CDATA[<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).</span><br><span class="line"></span><br><span class="line">For example, this binary tree [1,2,2,3,4,4,3] is symmetric:</span><br><span class="line"></span><br><span class="line">    1</span><br><span class="line">   &#x2F; \</span><br><span class="line">  2   2</span><br><span class="line"> &#x2F; \ &#x2F; \</span><br><span class="line">3  4 4  3</span><br><span class="line">But the following [1,2,2,null,3,null,3] is not:</span><br><span class="line"></span><br><span class="line">    1</span><br><span class="line">   &#x2F; \</span><br><span class="line">  2   2</span><br><span class="line">   \   \</span><br><span class="line">   3    3</span><br><span class="line">Note:</span><br><span class="line">Bonus points if you could solve it both recursively and iteratively.</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="Recursion"><a href="#Recursion" class="headerlink" title="Recursion"></a>Recursion</h3><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># class TreeNode</span></span><br><span class="line"><span class="comment">#     attr_accessor :val, :left, :right</span></span><br><span class="line"><span class="comment">#     def initialize(val)</span></span><br><span class="line"><span class="comment">#         <span class="doctag">@val</span> = val</span></span><br><span class="line"><span class="comment">#         <span class="doctag">@left</span>, <span class="doctag">@right</span> = nil, nil</span></span><br><span class="line"><span class="comment">#     end</span></span><br><span class="line"><span class="comment"># end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># <span class="doctag">@param</span> &#123;TreeNode&#125; root</span></span><br><span class="line"><span class="comment"># <span class="doctag">@return</span> &#123;Boolean&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_symmetric</span><span class="params">(root)</span></span></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span> <span class="keyword">if</span> root.<span class="literal">nil</span>?</span><br><span class="line">  mirror = lambda <span class="keyword">do</span> <span class="params">|a, b|</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span> <span class="keyword">if</span> a.<span class="literal">nil</span>? &amp;&amp; b.<span class="literal">nil</span>?</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span> <span class="keyword">if</span> a.<span class="literal">nil</span>? ^ b.<span class="literal">nil</span>? <span class="params">||</span> a.val != b.val</span><br><span class="line">    mirror.call(a.left, b.right) &amp;&amp; mirror.call(a.right, b.left)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  mirror.call(root.left, root.right)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h3 id="Iterative"><a href="#Iterative" class="headerlink" title="Iterative"></a>Iterative</h3><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># class TreeNode</span></span><br><span class="line"><span class="comment">#     attr_accessor :val, :left, :right</span></span><br><span class="line"><span class="comment">#     def initialize(val)</span></span><br><span class="line"><span class="comment">#         <span class="doctag">@val</span> = val</span></span><br><span class="line"><span class="comment">#         <span class="doctag">@left</span>, <span class="doctag">@right</span> = nil, nil</span></span><br><span class="line"><span class="comment">#     end</span></span><br><span class="line"><span class="comment"># end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># <span class="doctag">@param</span> &#123;TreeNode&#125; root</span></span><br><span class="line"><span class="comment"># <span class="doctag">@return</span> &#123;Boolean&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_symmetric</span><span class="params">(root)</span></span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span> <span class="keyword">if</span> root.<span class="literal">nil</span>?</span><br><span class="line"></span><br><span class="line">    tree = []</span><br><span class="line">    tree &lt;&lt; root.left</span><br><span class="line">    tree &lt;&lt; root.right</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> !tree.empty?</span><br><span class="line">        left  = tree.shift</span><br><span class="line">        right = tree.pop</span><br><span class="line"></span><br><span class="line">        <span class="keyword">next</span> <span class="keyword">if</span> left.<span class="literal">nil</span>? &amp;&amp; right.<span class="literal">nil</span>?</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span> <span class="keyword">if</span> left.<span class="literal">nil</span>? <span class="params">||</span> right.<span class="literal">nil</span>?</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span> <span class="keyword">if</span> left.val != right.val</span><br><span class="line"></span><br><span class="line">        tree.unshift(left.left, left.right)</span><br><span class="line">        tree.push(right.left, right.right)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="literal">true</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
        <tag>算法</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>【Leetcode】104. Maximum Depth of Binary Tree</title>
    <url>/posts/25368/</url>
    <content><![CDATA[<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Given a binary tree, find its maximum depth.</span><br><span class="line"></span><br><span class="line">The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.</span><br><span class="line"></span><br><span class="line">Note: A leaf is a node with no children.</span><br><span class="line"></span><br><span class="line">Example:</span><br><span class="line"></span><br><span class="line">Given binary tree [3,9,20,null,null,15,7],</span><br><span class="line"></span><br><span class="line">    3</span><br><span class="line">   &#x2F; \</span><br><span class="line">  9  20</span><br><span class="line">    &#x2F;  \</span><br><span class="line">   15   7</span><br><span class="line">return its depth &#x3D; 3.</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="DFS-with-Recursion"><a href="#DFS-with-Recursion" class="headerlink" title="DFS with Recursion"></a>DFS with Recursion</h3><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"># class TreeNode</span></span><br><span class="line"><span class="comment">#     attr_accessor :val, :left, :right</span></span><br><span class="line"><span class="comment">#     def initialize(val)</span></span><br><span class="line"><span class="comment">#         <span class="doctag">@val</span> = val</span></span><br><span class="line"><span class="comment">#         <span class="doctag">@left</span>, <span class="doctag">@right</span> = nil, nil</span></span><br><span class="line"><span class="comment">#     end</span></span><br><span class="line"><span class="comment"># end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># <span class="doctag">@param</span> &#123;TreeNode&#125; root</span></span><br><span class="line"><span class="comment"># <span class="doctag">@return</span> &#123;Integer&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">max_depth</span><span class="params">(root)</span></span></span><br><span class="line">    root.<span class="literal">nil</span>?? <span class="number">0</span> : [max_depth(root.left), max_depth(root.right)].max + <span class="number">1</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h3 id="BFS"><a href="#BFS" class="headerlink" title="BFS"></a>BFS</h3><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"># class TreeNode</span></span><br><span class="line"><span class="comment">#     attr_accessor :val, :left, :right</span></span><br><span class="line"><span class="comment">#     def initialize(val)</span></span><br><span class="line"><span class="comment">#         <span class="doctag">@val</span> = val</span></span><br><span class="line"><span class="comment">#         <span class="doctag">@left</span>, <span class="doctag">@right</span> = nil, nil</span></span><br><span class="line"><span class="comment">#     end</span></span><br><span class="line"><span class="comment"># end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># <span class="doctag">@param</span> &#123;TreeNode&#125; root</span></span><br><span class="line"><span class="comment"># <span class="doctag">@return</span> &#123;Integer&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">max_depth</span><span class="params">(root)</span></span></span><br><span class="line">  depth = <span class="number">0</span></span><br><span class="line">  tree = []</span><br><span class="line"></span><br><span class="line">  tree &lt;&lt; root <span class="keyword">unless</span> root.<span class="literal">nil</span>?</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> !tree.empty?</span><br><span class="line">    depth += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    n = tree.size - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..n</span><br><span class="line">      node = tree.shift</span><br><span class="line">      tree &lt;&lt; node.left  <span class="keyword">unless</span> node.left.<span class="literal">nil</span>?</span><br><span class="line">      tree &lt;&lt; node.right <span class="keyword">unless</span> node.right.<span class="literal">nil</span>?</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  depth</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h3 id="DFS"><a href="#DFS" class="headerlink" title="DFS"></a>DFS</h3><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"># class TreeNode</span></span><br><span class="line"><span class="comment">#     attr_accessor :val, :left, :right</span></span><br><span class="line"><span class="comment">#     def initialize(val)</span></span><br><span class="line"><span class="comment">#         <span class="doctag">@val</span> = val</span></span><br><span class="line"><span class="comment">#         <span class="doctag">@left</span>, <span class="doctag">@right</span> = nil, nil</span></span><br><span class="line"><span class="comment">#     end</span></span><br><span class="line"><span class="comment"># end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># <span class="doctag">@param</span> &#123;TreeNode&#125; root</span></span><br><span class="line"><span class="comment"># <span class="doctag">@return</span> &#123;Integer&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">max_depth</span><span class="params">(root)</span></span></span><br><span class="line">  tree = []</span><br><span class="line">  res  = []</span><br><span class="line"></span><br><span class="line">  <span class="keyword">unless</span> root.<span class="literal">nil</span>?</span><br><span class="line">    tree &lt;&lt; root</span><br><span class="line">    res  &lt;&lt; <span class="number">1</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  max = <span class="number">0</span></span><br><span class="line">  <span class="keyword">while</span> !tree.empty?</span><br><span class="line">    node = tree.pop</span><br><span class="line">    tmp  = res.pop</span><br><span class="line">    max  = [max, tmp].max <span class="keyword">if</span> node.right.<span class="literal">nil</span>? &amp;&amp; node.left.<span class="literal">nil</span>?</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> node.right.present?</span><br><span class="line">      tree &lt;&lt; node.right</span><br><span class="line">      res  &lt;&lt; tmp + <span class="number">1</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> node.left.present?</span><br><span class="line">      tree &lt;&lt; node.left</span><br><span class="line">      res  &lt;&lt; tmp + <span class="number">1</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  max</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
        <tag>算法</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>【Ruby】new &amp; initialize</title>
    <url>/posts/4382/</url>
    <content><![CDATA[<h3 id="Class"><a href="#Class" class="headerlink" title="Class"></a>Class</h3><h4 id="define-a-class"><a href="#define-a-class" class="headerlink" title="define a class"></a>define a class</h4><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Klass</span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">initialize</span><span class="params">()</span></span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h4 id="create-instance-by-new"><a href="#create-instance-by-new" class="headerlink" title="create instance by new"></a>create instance by new</h4><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hello</span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">initialize</span></span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">talk</span></span></span><br><span class="line">    puts <span class="string">"Hello world"</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">hello = Hello.new</span><br><span class="line">hello.talk</span><br><span class="line"><span class="comment"># =&gt; Hello world</span></span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h4 id="new-amp-initialize"><a href="#new-amp-initialize" class="headerlink" title="new &amp; initialize"></a>new &amp; initialize</h4><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hello</span></span></span><br><span class="line">  @@name = <span class="literal">nil</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">initialize</span><span class="params">(name)</span></span></span><br><span class="line">    @@name = name</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">talk</span></span></span><br><span class="line">    puts <span class="string">"Hello <span class="subst">#&#123;@@name&#125;</span>"</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">hello = Hello.new(<span class="string">"jobs"</span>)</span><br><span class="line">hello.talk</span><br><span class="line"></span><br><span class="line"><span class="comment"># =&gt; Hello job</span></span><br></pre></td></tr></table></figure>

<h3 id="Basic-Usage-of-initialize"><a href="#Basic-Usage-of-initialize" class="headerlink" title="Basic Usage of initialize"></a>Basic Usage of <code>initialize</code></h3><h4 id="Do-not-override-the-initialize-or-return-in-initialize"><a href="#Do-not-override-the-initialize-or-return-in-initialize" class="headerlink" title="Do not override the initialize or return in initialize"></a>Do not override the <code>initialize</code> or return in <code>initialize</code></h4><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hello</span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">initialize</span><span class="params">(he)</span></span></span><br><span class="line">    @he = he</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">initialize</span><span class="params">(he,her)</span></span></span><br><span class="line">    @he = he</span><br><span class="line">    @her = her</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">hello</span></span></span><br><span class="line">    puts <span class="string">"hello, Mt."</span> + @he.to_s + <span class="string">" and Ms."</span> + @her.to_s</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">hello = Hello.new(<span class="string">"Kevin"</span>, <span class="string">"Jane"</span>)</span><br><span class="line">hello.hello</span><br><span class="line"><span class="comment">#=&gt;hello, Mt.Kevin and Ms.Jane</span></span><br></pre></td></tr></table></figure>

<h4 id="How-tocallinitialize-method-of-parent-class"><a href="#How-tocallinitialize-method-of-parent-class" class="headerlink" title="How tocallinitialize` method of parent class"></a>How to<code>call</code>initialize` method of parent class</h4><p>Child class may use the <code>super</code> method to class the <code>initialize</code> method of parent class.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">initialize</span><span class="params">(name)</span></span></span><br><span class="line">    @name = name</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Woman</span> &lt; Human</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">initialize</span><span class="params">(name, bag)</span></span></span><br><span class="line">    <span class="keyword">super</span> name</span><br><span class="line">    @bag = bag</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">who?</span></span></span><br><span class="line">    puts <span class="string">"She name is "</span> + @name + <span class="string">" having bag of "</span> + @bag</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">w = Woman.new(<span class="string">'Kity'</span>,<span class="string">'Coach'</span>)</span><br><span class="line"></span><br><span class="line">w.who?</span><br><span class="line"><span class="comment">#=&gt; She name is Kity having bag of Coach</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Ruby On Rails</category>
      </categories>
      <tags>
        <tag>Ruby</tag>
        <tag>Rails</tag>
      </tags>
  </entry>
  <entry>
    <title>Get form data to json</title>
    <url>/posts/29193/</url>
    <content><![CDATA[<p>Sometimes we need get the form data as a json to put it into another ajax request with other data.<br>This is a method to get the data of form as json:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFormJson</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> data = &#123;&#125;;</span><br><span class="line">  <span class="keyword">var</span> form_data = $(name).serializeArray()</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; form_data.length; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span> (data[form_data[i][<span class="string">'name'</span>]] != <span class="literal">undefined</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> ($.isArray(data[form_data[i][<span class="string">'name'</span>]])) &#123;</span><br><span class="line">        data[form_data[i][<span class="string">'name'</span>]].push(form_data[i][<span class="string">'value'</span>]);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        data[form_data[i][<span class="string">'name'</span>]] = [data[form_data[i][<span class="string">'name'</span>]], form_data[i][<span class="string">'value'</span>]];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      data[form_data[i][<span class="string">'name'</span>]] = form_data[i][<span class="string">'value'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>front</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>Cloud vs. In-House Server</title>
    <url>/posts/21276/</url>
    <content><![CDATA[<h3 id="In-House-Sever"><a href="#In-House-Sever" class="headerlink" title="In-House Sever"></a>In-House Sever</h3><table>
<thead>
<tr>
<th>Pros</th>
<th>Cons</th>
</tr>
</thead>
<tbody><tr>
<td>Gives you physical control over your backup.</td>
<td>Requires a capital investment in hardware and infrastructure.</td>
</tr>
<tr>
<td>Keeps critical data in-house. No third party has access to your information.</td>
<td>Needs space in your office for a rack or server room/closet, in addition to dedicated IT support.</td>
</tr>
<tr>
<td>No need to rely on an Internet connection for access to data.</td>
<td>May be more susceptible to data loss during disaster situations due to its in-house location. How often you take the data offsite will reflect how much data you’ll lose in an emergency.</td>
</tr>
<tr>
<td>Can be more cost-effective for small to mid-sized companies.</td>
<td>No uptime or recovery time guarantees.</td>
</tr>
</tbody></table>
<h3 id="Cloud-Server"><a href="#Cloud-Server" class="headerlink" title="Cloud Server"></a>Cloud Server</h3><table>
<thead>
<tr>
<th>Pros</th>
<th>Cons</th>
</tr>
</thead>
<tbody><tr>
<td>No need for onsite hardware or capital expenses. Well-suited to smaller companies that may outgrow storage too quickly.</td>
<td>The costs of the data recovery could outweigh the benefits for companies that are not as dependent on uptime and instant recovery.</td>
</tr>
<tr>
<td>Storage can be added as needed. Solutions are often on-demand, so you only pay for what you need.</td>
<td>Every organization will have a limit to data that can be stored in the cloud due to storage availability and cost.</td>
</tr>
<tr>
<td>Backup and restore can be initiated from anywhere, using any computer, tablet, or smartphone.</td>
<td>If the Internet goes down on your side or on your cloud provider’s side, you won’t have access to any of your information.</td>
</tr>
<tr>
<td>Data can be backed up in the cloud as regularly as 15-minute intervals, minimizing data losses in disaster situations. Small data set recovery time is improved.</td>
<td>Full data recovery could prove very time-consuming and impactful on systems.</td>
</tr>
</tbody></table>
<h3 id="Fog"><a href="#Fog" class="headerlink" title="Fog"></a>Fog</h3><p>Tech’s future may lie in the “fog” rather than the cloud. In other words, cloud solutions are great, but businesses may not want to have everything “out there” in the cloud. Some solutions will still need to be kept in-house or on the device, closer to the ground. For many companies, the best configuration will be somewhere in between, which the article refers to as “the fog”.</p>
]]></content>
      <categories>
        <category>Interview</category>
      </categories>
      <tags>
        <tag>Cloud</tag>
        <tag>In-House sever</tag>
        <tag>Pros &amp; Cons</tag>
        <tag>interview</tag>
      </tags>
  </entry>
  <entry>
    <title>How to get the size of Chinese characters on Ruby</title>
    <url>/posts/61063/</url>
    <content><![CDATA[<p>We usually get the length of a string by <code>length</code> method. But it is not the correct result of the string which composites of chinese charaters because the chinese charaters will take 2 space for each. On the other side, one more method <code>bytesize</code> of <code>String</code>, will return the<code>3</code>, the bytes length of the string.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="string">"abc123)&#123;*~"</span>.bytesize <span class="comment">#=&gt;10</span></span><br><span class="line"><span class="string">"あああ"</span>.bytesize <span class="comment">#=&gt;9</span></span><br></pre></td></tr></table></figure>

<p>So, I define a function to get the result I want:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">kanjisize</span><span class="params">(string)</span></span></span><br><span class="line">  sring.each_char.map&#123;<span class="params">|c|</span> c.bytesize == <span class="number">1</span> ? <span class="number">1</span> : <span class="number">2</span>&#125;.reduce(<span class="number">0</span>, &amp;<span class="symbol">:+</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>and make it as a monkey patch of <code>String</code> with the path of <code>lib/core_extensions/string/kanji_size.rb</code>:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">CoreExtensions</span></span></span><br><span class="line">  <span class="class"><span class="keyword">module</span> <span class="title">String</span></span></span><br><span class="line">    <span class="class"><span class="keyword">module</span> <span class="title">KanjiSize</span></span></span><br><span class="line">    	<span class="function"><span class="keyword">def</span> <span class="title">kanjisize</span></span></span><br><span class="line">    	  <span class="keyword">self</span>.each_char.map&#123;<span class="params">|c|</span> c.bytesize == <span class="number">1</span> ? <span class="number">1</span> : <span class="number">2</span>&#125;.reduce(<span class="number">0</span>, &amp;<span class="symbol">:+</span>)</span><br><span class="line">    	<span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">String.send(<span class="symbol">:include</span>, CoreExtensions::String::KanjiSize)</span><br></pre></td></tr></table></figure>

<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="string">"abc123)&#123;*~"</span>.bytesize <span class="comment">#=&gt;10</span></span><br><span class="line"><span class="string">"あああ"</span>.bytesize <span class="comment">#=&gt;6</span></span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>Ruby On Rails</category>
      </categories>
      <tags>
        <tag>Ruby</tag>
        <tag>Rails</tag>
      </tags>
  </entry>
  <entry>
    <title>How to solve the problem when free is nearly 0 on Linux</title>
    <url>/posts/63448/</url>
    <content><![CDATA[<h3 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h3><p>One day, the upload feature of our server was failed because there were not enough memory on server.<br>So I logged into server and excute the <code>free</code> command:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ free -g</span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:            15         15          0          0          2          0</span><br><span class="line">-/+ buffers/cache:         12          2</span><br><span class="line">Swap:           17          0         17</span><br></pre></td></tr></table></figure>

<p>However, the result of the <code>top</code> command showed that the free memory was 0 without any process which costed so much memory:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ps aux | awk <span class="string">'&#123;mem += $6&#125; END &#123;print mem/1024/1024&#125;'</span></span><br><span class="line">0.595089</span><br></pre></td></tr></table></figure>

<p>After a long time research on Google, I found that there was another kind of cache, Slab, which<code>free</code> command count as used memory.</p>
<a id="more"></a>

<h3 id="Slab"><a href="#Slab" class="headerlink" title="Slab"></a>Slab</h3><p>Slab Allocation is a kind of memory management mechanism which imported since Linux 2.2 which is used to cache data objects of the kernel. It can be understood as a kernel-specific object pool, which can improve system performance and reduce memory fragmentation. (After Linux 2.6.23, SLAB became the default allocator.)</p>
<p>Infomation about slab memory:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat /proc/meminfo</span><br></pre></td></tr></table></figure>
<p> And we can also use the <code>slabtop</code> command or <code>/proc/slabinfo</code> to watch the detail of Slab Memory.</p>
<h3 id="Solve-the-Problem"><a href="#Solve-the-Problem" class="headerlink" title="Solve the Problem"></a>Solve the Problem</h3><h4 id="Clear-Reclaimable-Cache-of-Slab"><a href="#Clear-Reclaimable-Cache-of-Slab" class="headerlink" title="Clear Reclaimable Cache of Slab"></a>Clear Reclaimable Cache of Slab</h4><p>We can clear the reclaimable cache manualy by change the flag in <code>/proc/sys/vm/drop_caches</code>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo 2 &gt; &#x2F;proc&#x2F;sys&#x2F;vm&#x2F;drop_caches</span><br></pre></td></tr></table></figure>

<h4 id="Change-the-System-VM-Config"><a href="#Change-the-System-VM-Config" class="headerlink" title="Change the System VM Config"></a>Change the System VM Config</h4><p>Change the system vm config will have effect the timing of memory cleanup. However there is a risk of negative impact on system performance.</p>
<p><code>vm.vfs_cache_pressure</code>: The larger the value is the faster that inode cache and dentry cache’s recycle will be.<br><code>vm.min_free_kbytes</code>: By default, it is calculated based on the current memory at boot time. The larger the value, the sooner the system will start memory recovery.<br><code>vm.swappiness</code>: The larger the swappiness is, the higher the swap rate of the system will be.</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>free</tag>
      </tags>
  </entry>
  <entry>
    <title>Install Jenkins at CentOS 6.x</title>
    <url>/posts/7629/</url>
    <content><![CDATA[<h3 id="Step-0-Check-OS-Info"><a href="#Step-0-Check-OS-Info" class="headerlink" title="Step 0: Check OS Info"></a>Step 0: Check OS Info</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat /etc/*-release</span><br><span class="line">CentOS release 6.6 (Final)</span><br></pre></td></tr></table></figure>

<h3 id="Step-1-Install-Java"><a href="#Step-1-Install-Java" class="headerlink" title="Step 1: Install Java"></a>Step 1: Install Java</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ yum install java-1.8.0-openjdk</span><br><span class="line">$ java -version</span><br><span class="line">openjdk version <span class="string">"1.8.0_91"</span></span><br><span class="line">OpenJDK Runtime Environment (build 1.8.0_91-b14)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 25.91-b14, mixed mode)</span><br></pre></td></tr></table></figure>

<h3 id="Step-2-Install-Jenkins"><a href="#Step-2-Install-Jenkins" class="headerlink" title="Step 2: Install Jenkins"></a>Step 2: Install Jenkins</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo</span><br><span class="line">$ sudo rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key</span><br><span class="line">$ sudo yum install jenkins</span><br><span class="line">$ sudo service jenkins start</span><br></pre></td></tr></table></figure>

<h3 id="Step-3-Start-Jenkins-When-System-Reboot"><a href="#Step-3-Start-Jenkins-When-System-Reboot" class="headerlink" title="Step 3: Start Jenkins When System Reboot"></a>Step 3: Start Jenkins When System Reboot</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ chkconfig jenkins on</span><br><span class="line">$ sudo chkconfig --list jenkins</span><br><span class="line">jenkins         0:off   1:off   2:on    3:on    4:on    5:on    6:off</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>Jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>【ruby】 Ruby设计模式透析之策略(Strategy)</title>
    <url>/posts/60383/</url>
    <content><![CDATA[<p>原文地址： <a href="http://blog.csdn.net/guolin_blog/article/details/8986299" target="_blank" rel="noopener">http://blog.csdn.net/guolin_blog/article/details/8986299</a></p>
<blockquote>
<p>今天你的leader兴致冲冲地找到你，希望你可以帮他一个小忙，他现在急着要去开会。要帮什么忙呢？你很好奇。<br>他对你说，当前你们项目的数据库中有一张用户信息表，里面存放了很用户的数据，现在需要完成一个选择性查询用户信息的功能。他说会传递给你一个包含许多用户名的数组，你需要根据这些用户名把他们相应的数据都给查出来。<br>这个功能很简单的嘛，你爽快地答应了。由于你们项目使用的是MySQL数据库，你很快地写出了如下代码：</p>
</blockquote>
<a id="more"></a>

<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'mysql'</span>  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QueryUtil</span>  </span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_user_info</span> <span class="title">usernames</span>  </span></span><br><span class="line">        @db = Mysql.real_connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"123456"</span>,<span class="string">"test"</span>,<span class="number">3306</span>);  </span><br><span class="line">        sql = <span class="string">"select * from user_info where "</span>  </span><br><span class="line">        usernames.each <span class="keyword">do</span> <span class="params">|user|</span>  </span><br><span class="line">            sql &lt;&lt; <span class="string">"username = '"</span>  </span><br><span class="line">            sql &lt;&lt; user  </span><br><span class="line">            sql &lt;&lt; <span class="string">"' or "</span>  </span><br><span class="line">        <span class="keyword">end</span>  </span><br><span class="line">        puts sql  </span><br><span class="line">        result = @db.query(sql);  </span><br><span class="line">        result.each_hash <span class="keyword">do</span> <span class="params">|row|</span>  </span><br><span class="line">            <span class="comment">#处理从数据库读出来的数据  </span></span><br><span class="line">        <span class="keyword">end</span>  </span><br><span class="line">        <span class="comment">#后面应将读到的数据组装成对象返回，这里略去  </span></span><br><span class="line">    <span class="keyword">ensure</span>  </span><br><span class="line">        @db.close  </span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>这里根据传入的用户名数组拼装了SQL语句，然后去数据库中查找相应的行。为了方面调试，你还将拼装好的SQL语句打印了出来。<br>然后，你写了如下代码来测试这个方法：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">qUtil = QueryUtil.new  </span><br><span class="line">qUtil.find_user_info [<span class="string">"Tom"</span>, <span class="string">"Jim"</span>, <span class="string">"Anna"</span>]</span><br></pre></td></tr></table></figure>

<p>现在运行一下测试代码，你发现程序出错了。于是你立刻去检查了一下打印的SQL语句，果然发现了问题。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> user_info <span class="keyword">where</span> username = <span class="string">'Tom'</span> <span class="keyword">or</span> username = <span class="string">'Jim'</span> <span class="keyword">or</span> username = <span class="string">'Anna'</span> <span class="keyword">or</span></span><br></pre></td></tr></table></figure>

<p>拼装出来的SQL语句在最后多加了一个 or 关键字！因为for循环执行到最后一条数据时不应该再加上or，可是代码很笨地给最后一条数据也加了or关键字，导致SQL语句语法出错了。<br>这可怎么办呢？<br>有了！你灵光一闪，想出了一个解决办法。等SQL语句拼装完成后，截取到最后一个or之前的位置不就好了么。于是你将代码改成如下所示：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'mysql'</span>  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QueryUtil</span>  </span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_user_info</span> <span class="title">usernames</span>  </span></span><br><span class="line">        @db = Mysql.real_connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"123456"</span>,<span class="string">"test"</span>,<span class="number">3306</span>);  </span><br><span class="line">        sql = <span class="string">"select * from user_info where "</span>  </span><br><span class="line">        usernames.each <span class="keyword">do</span> <span class="params">|user|</span>  </span><br><span class="line">            sql &lt;&lt; <span class="string">"username = '"</span>  </span><br><span class="line">            sql &lt;&lt; user  </span><br><span class="line">            sql &lt;&lt; <span class="string">"' or "</span>  </span><br><span class="line">        <span class="keyword">end</span>  </span><br><span class="line">        sql = sql[<span class="number">0</span> .. -<span class="string">" or "</span>.length]  </span><br><span class="line">        puts sql  </span><br><span class="line">        result = @db.query(sql);  </span><br><span class="line">        result.each_hash <span class="keyword">do</span> <span class="params">|row|</span>  </span><br><span class="line">            <span class="comment">#处理从数据库读出来的数据  </span></span><br><span class="line">        <span class="keyword">end</span>  </span><br><span class="line">        <span class="comment">#后面应将读到的数据组装成对象返回，这里略去  </span></span><br><span class="line">    <span class="keyword">ensure</span>  </span><br><span class="line">        @db.close  </span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>使用String的截取子字符串方法，只取到最后一个or之前的部分，这样再运行测试代码，一切就正常了，打印的SQL语句如下所示：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> user_info <span class="keyword">where</span> username = <span class="string">'Tom'</span> <span class="keyword">or</span> username = <span class="string">'Jim'</span> <span class="keyword">or</span> username = <span class="string">'Anna'</span></span><br></pre></td></tr></table></figure>

<p>好了，完工！你自信满满。<br>你的leader开完会后，过来看了下你的成果。总体来说，他还挺满意，但对于你使用的SQL语句拼装算法，他总是感觉有些不对劲，可是又说不上哪里不好。于是他告诉了你另一种拼装SQL语句的算法，让你加入到代码中，但是之前的那种算法也不要删除，先保留着再说，然后他又很忙似的跑开了。于是，你把他刚刚教你的算法加了进去，代码如下所示：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'mysql'</span>  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QueryUtil</span>  </span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_user_info</span><span class="params">(usernames, strategy)</span></span>  </span><br><span class="line">        @db = Mysql.real_connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"123456"</span>,<span class="string">"test"</span>,<span class="number">3306</span>);  </span><br><span class="line">        sql = <span class="string">"select * from user_info where "</span>  </span><br><span class="line">        <span class="keyword">if</span> strategy == <span class="number">1</span>  </span><br><span class="line">            usernames.each <span class="keyword">do</span> <span class="params">|user|</span>  </span><br><span class="line">                sql &lt;&lt; <span class="string">"username = '"</span>  </span><br><span class="line">                sql &lt;&lt; user  </span><br><span class="line">                sql &lt;&lt; <span class="string">"' or "</span>  </span><br><span class="line">            <span class="keyword">end</span>  </span><br><span class="line">            sql = sql[<span class="number">0</span> .. -<span class="string">" or "</span>.length]  </span><br><span class="line">        <span class="keyword">elsif</span> strategy == <span class="number">2</span>  </span><br><span class="line">            need_or = <span class="literal">false</span>  </span><br><span class="line">            usernames.each <span class="keyword">do</span> <span class="params">|user|</span>  </span><br><span class="line">                sql &lt;&lt; <span class="string">" or "</span> <span class="keyword">if</span> need_or  </span><br><span class="line">                sql &lt;&lt; <span class="string">"username = '"</span>  </span><br><span class="line">                sql &lt;&lt; user  </span><br><span class="line">                sql &lt;&lt; <span class="string">"'"</span>  </span><br><span class="line">                need_or = <span class="literal">true</span>  </span><br><span class="line">            <span class="keyword">end</span>  </span><br><span class="line">        <span class="keyword">end</span>  </span><br><span class="line">        puts sql  </span><br><span class="line">        result = @db.query(sql);  </span><br><span class="line">        result.each_hash <span class="keyword">do</span> <span class="params">|row|</span>  </span><br><span class="line">            <span class="comment">#处理从数据库读出来的数据  </span></span><br><span class="line">        <span class="keyword">end</span>  </span><br><span class="line">        <span class="comment">#后面应将读到的数据组装成对象返回，这里略去  </span></span><br><span class="line">    <span class="keyword">ensure</span>  </span><br><span class="line">        @db.close  </span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>可以看到，你leader教你的拼装算法，使用了一个布尔变量来控制是否需要加个or这个关键字，第一次执行for循环的时候因为该布尔值为false，所以不会加上or，在循环的最后将布尔值赋值为true，这样以后循环每次都会在头部加上一个or关键字，由于使用了头部添加or的方法，所以不用再担心SQL语句的尾部会多出一个or来。然后你为了将两个算法都保留，在find_user_info方法上加了一个参数，strategy值为1表示使用第一种算法，strategy值为2表示使用第二种算法。<br>这样测试代码也需要改成如下方式：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">qUtil = QueryUtil.new  </span><br><span class="line">qUtil.find_user_info([<span class="string">"Tom"</span>, <span class="string">"Jim"</span>, <span class="string">"Anna"</span>], <span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<p>这里你通过参数指明了使用第二种算法来拼装SQL语句，打印的结果和使用第一种算法是完全相同的。<br>你立刻把你的leader从百忙之中拖了过来，让他检验一下你当前的成果，可是他还是一如既往的挑剔。<br>“你这样写的话，find_user_info这个方法的逻辑就太复杂了，非常不利于阅读，也不利于将来的扩展，如果我还有第三第四种算法想加进去，这个方法还能看吗？”  你的leader指点你，遇到这种情况，就要使用策略模式来解决，策略模式的核心思想就是把算法提取出来放到一个独立的对象中。<br>为了指点你，他不顾自己的百忙，开始教你如何使用策略模式进行优化。<br>首先定义一个父类，父类中包含了一个get_sql方法，这个方法就是简单的抛出了一个异常：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Strategy</span>  </span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_sql</span> <span class="title">usernames</span>  </span></span><br><span class="line">        raise <span class="string">"You should override this method in subclass."</span>  </span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>然后定义两个子类都继承上述父类，并将两种拼装SQL语句的算法分别加入两个子类中：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Strategy1</span>  </span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_sql</span> <span class="title">usernames</span>  </span></span><br><span class="line">        sql = <span class="string">"select * from user_info where "</span>  </span><br><span class="line">        usernames.each <span class="keyword">do</span> <span class="params">|user|</span>  </span><br><span class="line">            sql &lt;&lt; <span class="string">"username = '"</span>  </span><br><span class="line">            sql &lt;&lt; user  </span><br><span class="line">            sql &lt;&lt; <span class="string">"' or "</span>  </span><br><span class="line">        <span class="keyword">end</span>  </span><br><span class="line">        sql = sql[<span class="number">0</span> .. -<span class="string">" or "</span>.length]  </span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Strategy2</span>  </span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_sql</span> <span class="title">usernames</span>  </span></span><br><span class="line">        sql = <span class="string">"select * from user_info where "</span>  </span><br><span class="line">        need_or = <span class="literal">false</span>  </span><br><span class="line">        usernames.each <span class="keyword">do</span> <span class="params">|user|</span>  </span><br><span class="line">            sql &lt;&lt; <span class="string">" or "</span> <span class="keyword">if</span> need_or  </span><br><span class="line">            sql &lt;&lt; <span class="string">"username = '"</span>  </span><br><span class="line">            sql &lt;&lt; user  </span><br><span class="line">            sql &lt;&lt; <span class="string">"'"</span>  </span><br><span class="line">            need_or = <span class="literal">true</span>  </span><br><span class="line">        <span class="keyword">end</span>  </span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>然后在QueryUtil的find_user_info方法中调用Strategy的get_sql方法就可以获得拼装好的SQL语句，代码如下所示：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'mysql'</span>  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QueryUtil</span>  </span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_user_info</span><span class="params">(usernames, strategy)</span></span>  </span><br><span class="line">        @db = Mysql.real_connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"123456"</span>,<span class="string">"test"</span>,<span class="number">3306</span>);  </span><br><span class="line">        sql = strategy.get_sql(usernames)  </span><br><span class="line">        puts sql  </span><br><span class="line">        result = @db.query(sql);  </span><br><span class="line">        result.each_hash <span class="keyword">do</span> <span class="params">|row|</span>  </span><br><span class="line">            <span class="comment">#处理从数据库读出来的数据  </span></span><br><span class="line">        <span class="keyword">end</span>  </span><br><span class="line">        <span class="comment">#后面应将读到的数据组装成对象返回，这里略去  </span></span><br><span class="line">    <span class="keyword">ensure</span>  </span><br><span class="line">        @db.close  </span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>最后，测试代码在调用find_user_info方法时，只需要显示地指明需要使用哪一个策略对象就可以了：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">qUtil = QueryUtil.new  </span><br><span class="line">qUtil.find_user_info([<span class="string">"Tom"</span>, <span class="string">"Jim"</span>, <span class="string">"Anna"</span>], Strategy1.new)  </span><br><span class="line">qUtil.find_user_info([<span class="string">"Jac"</span>, <span class="string">"Joe"</span>, <span class="string">"Rose"</span>], Strategy2.new)</span><br></pre></td></tr></table></figure>

<p>打印出的SQL语句丝毫不出预料，如下所示：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> user_info <span class="keyword">where</span> username = <span class="string">'Tom'</span> <span class="keyword">or</span> username = <span class="string">'Jim'</span> <span class="keyword">or</span> username = <span class="string">'Anna'</span>  </span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> user_info <span class="keyword">where</span> username = <span class="string">'Jac'</span> <span class="keyword">or</span> username = <span class="string">'Joe'</span> <span class="keyword">or</span> username = <span class="string">'Rose'</span></span><br></pre></td></tr></table></figure>

<p>使用策略模式修改之后，代码的可读性和扩展性都有了很大的提高，即使以后还需要添加新的算法，你也是手到擒来了！</p>
<p><strong><em>策略：它定义了算法家庭，分别封装起来。让它们之间可以互相替换，此模式让算法的变化，不会影响到使用算法的客户。</em></strong></p>
]]></content>
      <categories>
        <category>程序开发</category>
      </categories>
      <tags>
        <tag>Ruby</tag>
        <tag>转载</tag>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title>【ruby】 Ruby设计模式透析之组合(Composite)</title>
    <url>/posts/25862/</url>
    <content><![CDATA[<p>原文地址： <a href="http://blog.csdn.net/guolin_blog/article/details/9153761" target="_blank" rel="noopener">http://blog.csdn.net/guolin_blog/article/details/9153761</a></p>
<blockquote>
<p>　　听说你们公司最近新推出了一款电子书阅读应用，市场反应很不错，应用里还有图书商城，用户可以在其中随意选购自己喜欢的书籍。你们公司也是对此项目高度重视，加大了投入力度，决定给此应用再增加点功能。<br>　　好吧，你也知道你是逃不过此劫了，没过多久你的leader就找到了你。他告诉你目前的应用对每本书的浏览量和销售量做了统计，但现在想增加对每个书籍分类的浏览量和销售量以及所有书籍总的浏览量和销售量做统计的功能，希望你可以来完成这项功能。<br>　　领导安排的工作当然是推脱不掉的，你只能硬着头皮上了，不过好在这个功能看起来也不怎么复杂。<br>　　你比较喜欢看小说，那么就从小说类的统计功能开始做起吧。首先通过get_all_novels方法可以获取到所有的小说名，然后将小说名传入get_browse_count方法可以得到该书的浏览量，将小说名传入get_sale_count方法可以得到该书的销售量。你目前只有这几个已知的API可以使用，那么开始动手吧！</p>
</blockquote>
<a id="more"></a>

<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_novels_browse_count</span>  </span></span><br><span class="line">    browse_count = <span class="number">0</span>  </span><br><span class="line">    all_novels = get_all_novels()  </span><br><span class="line">    all_novels.each <span class="keyword">do</span> <span class="params">|novel|</span>  </span><br><span class="line">        browse_count += get_browse_count(novel)  </span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line">    browse_count  </span><br><span class="line"><span class="keyword">end</span>  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_novels_sale_count</span>  </span></span><br><span class="line">    sale_count = <span class="number">0</span>  </span><br><span class="line">    all_novels = get_all_novels()  </span><br><span class="line">    all_novels.each <span class="keyword">do</span> <span class="params">|novel|</span>  </span><br><span class="line">        sale_count += get_browse_count(novel)  </span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line">    sale_count  </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>很快你就写下了以上两个方法，这两个方法都是通过获取到所有的小说名，然后一一计算每本小说的浏览量和销售量，最后将结果相加得到总量。<br>小说类的统计就完成了，然后你开始做计算机类书籍的统计功能，代码如下所示：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_computer_books_browse_count</span>  </span></span><br><span class="line">    browse_count = <span class="number">0</span>  </span><br><span class="line">    all_computer_books = get_all_computer_books()  </span><br><span class="line">    all_computer_books.each <span class="keyword">do</span> <span class="params">|computer_book|</span>  </span><br><span class="line">        browse_count += get_browse_count(computer_book)  </span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line">    browse_count  </span><br><span class="line"><span class="keyword">end</span>  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_computer_books_sale_count</span>  </span></span><br><span class="line">    sale_count = <span class="number">0</span>  </span><br><span class="line">    all_computer_books = get_all_computer_books()  </span><br><span class="line">    all_computer_books.each <span class="keyword">do</span> <span class="params">|computer_book|</span>  </span><br><span class="line">        sale_count += get_browse_count(computer_book)  </span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line">    sale_count  </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>除了使用了get_all_computer_books方法获取到所有的计算机类书名，其它的代码基本和小说统计中的是一样的。<br>现在你才完成了两类书籍的统计功能，后面还有医学类、自然类、历史类、法律类、政治类、哲学类、旅游类、美食类等等等等书籍。你突然意识到了一些问题的严重性，工作量大倒还不算什么，但再这么写下去，你的方法就要爆炸了，这么多的方法让人看都看不过来，别提怎么使用了。<br>这个时候你只好向你的leader求助了，跟他说明了你的困惑。只见你的leader思考了片刻，然后自信地告诉你，使用组合模式不仅可以轻松消除你的困惑，还能出色地完成功能。<br>他立刻向你秀起了编码操作，首先定义一个Statistics类，里面有两个方法：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Statistics</span>  </span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_browse_count</span>  </span></span><br><span class="line">        raise <span class="string">"You should override this method in subclass."</span>  </span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_sale_count</span>  </span></span><br><span class="line">        raise <span class="string">"You should override this method in subclass."</span>  </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>这两个方法都是简单地抛出一个异常，因为需要在子类中重写这两个方法。<br>然后定义一个用于统计小说类书籍的NovelStatistics类，继承刚刚定义的Statistics类，并重写Statistics中的两个方法</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NovelStatistics</span> &lt; Statistics  </span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_browse_count</span>  </span></span><br><span class="line">        browse_count = <span class="number">0</span>  </span><br><span class="line">        all_novels = get_all_novels()  </span><br><span class="line">        all_novels.each <span class="keyword">do</span> <span class="params">|novel|</span>  </span><br><span class="line">            browse_count += get_browse_count(novel)  </span><br><span class="line">        <span class="keyword">end</span>  </span><br><span class="line">        browse_count  </span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_sale_count</span>  </span></span><br><span class="line">        sale_count = <span class="number">0</span>  </span><br><span class="line">        all_novels = get_all_novels()  </span><br><span class="line">        all_novels.each <span class="keyword">do</span> <span class="params">|novel|</span>  </span><br><span class="line">            sale_count += get_browse_count(novel)  </span><br><span class="line">        <span class="keyword">end</span>  </span><br><span class="line">        sale_count  </span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>这样将具体的统计实现分散在各个类中，就不会再出现你刚刚那种方法爆炸的情况了。不过这还没开始真正使用组合模式呢，好戏还在后头，你的leader吹嘘道。</p>
<p>再定义一个MedicalBookStatistics类继承Statistics，用于统计医学类书籍的浏览量和销售量，代码如下如示：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MedicalBookStatistics</span> &lt; Statistics  </span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_browse_count</span>  </span></span><br><span class="line">        browse_count = <span class="number">0</span>  </span><br><span class="line">        all_medical_books = get_all_medical_books()  </span><br><span class="line">        all_medical_books.each <span class="keyword">do</span> <span class="params">|medical_book|</span>  </span><br><span class="line">            browse_count += get_browse_count(medical_book)  </span><br><span class="line">        <span class="keyword">end</span>  </span><br><span class="line">        browse_count  </span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_sale_count</span>  </span></span><br><span class="line">        sale_count = <span class="number">0</span>  </span><br><span class="line">        all_medical_books = get_all_medical_books()  </span><br><span class="line">        all_medical_books.each <span class="keyword">do</span> <span class="params">|medical_book|</span>  </span><br><span class="line">            sale_count += get_browse_count(medical_book)  </span><br><span class="line">        <span class="keyword">end</span>  </span><br><span class="line">        sale_count  </span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>不知道你发现了没有，计算机类书籍和医学类书籍其实都算是科技类书籍，它们是可以组合在一起的。这个时候你的leader定义了一个TechnicalStatistics类用于对科技这一组合类书籍进行统计：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TechnicalStatistics</span> &lt; Statistics  </span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initialize</span>  </span></span><br><span class="line">        @statistics = []  </span><br><span class="line">        @statistics &lt;&lt; ComputerBookStatistics.new  </span><br><span class="line">        @statistics &lt;&lt; MedicalBookStatistics.new  </span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_browse_count</span>  </span></span><br><span class="line">        browse_count = <span class="number">0</span>  </span><br><span class="line">        @statistics.each <span class="keyword">do</span> <span class="params">|s|</span>  </span><br><span class="line">            browse_count += s.get_browse_count  </span><br><span class="line">        <span class="keyword">end</span>  </span><br><span class="line">        browse_count  </span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_sale_count</span>  </span></span><br><span class="line">        sale_count = <span class="number">0</span>  </span><br><span class="line">        @statistics.each <span class="keyword">do</span> <span class="params">|s|</span>  </span><br><span class="line">            sale_count += s.get_sale_count  </span><br><span class="line">        <span class="keyword">end</span>  </span><br><span class="line">        sale_count  </span><br><span class="line">    <span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>可以看到，由于这个类是组合类，和前面几个类还是有不少区别的。首先TechnicalStatistics中有一个构造函数，在构造函数中将计算机类书籍和医学类书籍作为子分类添加到statistics数组当中，然后分别在get_browse_count和get_sale_count方法中遍历所有的子分类，计算出它们各自的浏览量和销售量，然后相加得到总额返回。<br>组合模式的扩展性非常好，没有各种条条框框，想怎么组合就怎么组合，比如所有书籍就是由各个分类组合而来的，你的leader马上又向你炫耀了统计所有书籍的浏览量和销售量的办法。<br>定义一个AllStatistics类继承Statistics，具体代码如下所示：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AllStatistics</span> &lt; Statistics  </span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initialize</span>  </span></span><br><span class="line">        @statistics = []  </span><br><span class="line">        @statistics &lt;&lt; NovelStatistics.new  </span><br><span class="line">        @statistics &lt;&lt; TechnicalStatistics.new  </span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_browse_count</span>  </span></span><br><span class="line">        browse_count = <span class="number">0</span>  </span><br><span class="line">        @statistics.each <span class="keyword">do</span> <span class="params">|s|</span>  </span><br><span class="line">            browse_count += s.get_browse_count  </span><br><span class="line">        <span class="keyword">end</span>  </span><br><span class="line">        browse_count  </span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_sale_count</span>  </span></span><br><span class="line">        sale_count = <span class="number">0</span>  </span><br><span class="line">        @statistics.each <span class="keyword">do</span> <span class="params">|s|</span>  </span><br><span class="line">            sale_count += s.get_sale_count  </span><br><span class="line">        <span class="keyword">end</span>  </span><br><span class="line">        sale_count  </span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>在AllStatistics的构造函数中将小说类书籍和科技类书籍作为子分类添加到了statistics数组当中，目前你也就只写好了这几个分类。然后使用同样的方法在get_browse_count和get_sale_count方法中统计出所有书籍的浏览量和销售量。</p>
<p>现在你就可以非常方便的得到任何分类书籍的浏览量和销售量了，比如说获取科技类书籍的浏览量，你只需要调用：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">TechnicalStatistics.new.get_browse_count</span><br></pre></td></tr></table></figure>

<p>而获取所有书籍的总销量，你只需要调用：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">AllStatistics.new.get_sale_count</span><br></pre></td></tr></table></figure>

<p>当然你后面还可以对这个组合结构随意地改变，添加各种子分类书籍，而且子分类的层次结构可以任意深，正如前面所说，组合模式的扩展性非常好。<br>你的leader告诉你，目前他写的这份代码重复度比较高，其实还可以好好优化一下的，把冗余代码都去除掉。当然这个任务就交给你来做了，你的leader可是大忙人，早就一溜烟跑开了。</p>
<p><strong><em>组合：将对象组合成树形结构以表示“部分-整体”的层次结构。组合模式使得用户对单个对象和组合对象的使用具有一致性。</em></strong></p>
]]></content>
      <categories>
        <category>程序开发</category>
      </categories>
      <tags>
        <tag>Ruby</tag>
        <tag>转载</tag>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title>【Rails】使用 Capistrano3 + Unicorn + Nginx 部署服务器</title>
    <url>/posts/42166/</url>
    <content><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>本文简单叙述了 Unicorn + Nginx 部署 Rails 项目的设定。<br>相较于传统的 Apache + Passenger，Unicorn + Nginx 的组合以其高效率而获得越来越多人的青睐。</p>
<a id="more"></a>

<h3 id="导入nginx"><a href="#导入nginx" class="headerlink" title="导入nginx"></a>导入nginx</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo yum install nginx</span><br></pre></td></tr></table></figure>

<h4 id="设定"><a href="#设定" class="headerlink" title="设定"></a>设定</h4><h5 id="主要设定文件"><a href="#主要设定文件" class="headerlink" title="主要设定文件"></a>主要设定文件</h5><p><code>/etc/nginx/global.conf</code>:</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">user</span> www-data;</span><br><span class="line"></span><br><span class="line"><span class="attribute">pid</span> /var/run/nginx.pid;</span><br><span class="line"><span class="attribute">error_log</span> /var/log/nginx/error.log;</span><br><span class="line"></span><br><span class="line"><span class="attribute">worker_processes</span> auto;</span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span> <span class="number">2048</span>;</span><br><span class="line">    <span class="attribute">use</span> <span class="literal">epoll</span>;</span><br><span class="line">    <span class="attribute">multi_accept</span> <span class="literal">on</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>/etc/nginx/nginx.conf</code>:</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">include</span> /etc/nginx/global.conf;</span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">server_tokens</span> <span class="literal">off</span>;</span><br><span class="line">    <span class="attribute">access_log</span> /var/log/nginx/access.log combined;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">include</span> /etc/nginx/conf.d/<span class="regexp">*.conf</span>;</span><br><span class="line">    <span class="attribute">include</span> /etc/nginx/sites-enabled/*;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="conf-d"><a href="#conf-d" class="headerlink" title="conf.d/"></a><code>conf.d/</code></h5><p><code>/etc/nginx/conf.d/format.combined2.conf</code>:</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment"># $request_time prefixed version of `combined` format</span></span><br><span class="line"><span class="attribute">log_format</span> combined2 <span class="string">'<span class="variable">$request_time</span> <span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] '</span></span><br><span class="line">                     <span class="string">'"<span class="variable">$request</span>" <span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> '</span></span><br><span class="line">                     <span class="string">'"<span class="variable">$http_referer</span>" "<span class="variable">$http_user_agent</span>"'</span>;</span><br></pre></td></tr></table></figure>

<p><code>/etc/nginx/conf.d/format.ltsv.conf</code>:</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">log_format</span> ltsv <span class="string">'reqtime:<span class="variable">$request_time</span>\t'</span></span><br><span class="line">                <span class="string">'host:<span class="variable">$remote_addr</span>\t'</span></span><br><span class="line">                <span class="string">'user:<span class="variable">$remote_user</span>\t'</span></span><br><span class="line">                <span class="string">'time:<span class="variable">$time_local</span>\t'</span></span><br><span class="line">                <span class="string">'msec:<span class="variable">$msec</span>\t'</span></span><br><span class="line">                <span class="string">'method:<span class="variable">$request_method</span>\t'</span></span><br><span class="line">                <span class="string">'uri:<span class="variable">$request_uri</span>\t'</span></span><br><span class="line">                <span class="string">'status:<span class="variable">$status</span>\t'</span></span><br><span class="line">                <span class="string">'size:<span class="variable">$body_bytes_sent</span>\t'</span></span><br><span class="line">                <span class="string">'referer:<span class="variable">$http_referer</span>\t'</span></span><br><span class="line">                <span class="string">'ua:<span class="variable">$http_user_agent</span>\t'</span></span><br><span class="line">                <span class="string">'apptime:<span class="variable">$upstream_response_time</span>\t'</span></span><br><span class="line">                <span class="string">'runtime:<span class="variable">$upstream_http_x_runtime</span>'</span>;</span><br></pre></td></tr></table></figure>

<p><code>/etc/nginx/conf.d/mimetype.conf</code>:</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">include</span>       /etc/nginx/mime.types;</span><br><span class="line"><span class="attribute">default_type</span>  application/octet-stream;</span><br></pre></td></tr></table></figure>

<p><code>/etc/nginx/conf.d/network.conf</code>:</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">sendfile</span> <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">tcp_nodelay</span> <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">tcp_nopush</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">keepalive_timeout</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure>

<p><code>/etc/nginx/conf.d/nginx_stub.conf</code>:</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  localhost;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> /nginx_status &#123;</span><br><span class="line">        <span class="attribute">stub_status</span> <span class="literal">on</span>;</span><br><span class="line">        <span class="attribute">access_log</span>   <span class="literal">off</span>;</span><br><span class="line">        <span class="attribute">allow</span> <span class="number">127.0.0.1</span>;</span><br><span class="line">        <span class="attribute">deny</span> all;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>/etc/nginx/conf.d/open_file_cache.conf</code>:</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">open_file_cache</span> max=<span class="number">100000</span> inactive=<span class="number">20s</span>;</span><br><span class="line"><span class="attribute">open_file_cache_valid</span> <span class="number">30s</span>;</span><br><span class="line"><span class="attribute">open_file_cache_min_uses</span> <span class="number">2</span>;</span><br><span class="line"><span class="attribute">open_file_cache_errors</span> <span class="literal">on</span>;</span><br></pre></td></tr></table></figure>

<p><code>/etc/nginx/conf.d/realip.conf</code>:</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment"># real ip module(for reverse proxy structure)</span></span><br><span class="line"><span class="attribute">set_real_ip_from</span>   <span class="number">10.164.0.0</span>/<span class="number">16</span>;</span><br><span class="line"><span class="attribute">real_ip_header</span>     X-Cluster-Client-Ip;</span><br></pre></td></tr></table></figure>

<h5 id="etc-nginx-sites-enabled"><a href="#etc-nginx-sites-enabled" class="headerlink" title="/etc/nginx/sites-enabled/"></a><code>/etc/nginx/sites-enabled/</code></h5><p><code>example</code>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># statements for each of your virtual hosts</span><br><span class="line">upstream static_error &#123;</span><br><span class="line">  server localhost:8082;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">  listen 8082;</span><br><span class="line">  server_name example.com www.exmaple.com xxx.xx.xxx.xxx;</span><br><span class="line"></span><br><span class="line">  location &#x2F; &#123;</span><br><span class="line">   root &#x2F;var&#x2F;www&#x2F;example&#x2F;current&#x2F;public;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  client_body_buffer_size 20M;</span><br><span class="line">  client_max_body_size 20M;</span><br><span class="line"></span><br><span class="line">  server_name example.com www.example.com xxx.xx.xxx.xxx;</span><br><span class="line"></span><br><span class="line">  gzip on;</span><br><span class="line">  gzip_min_length 1100;</span><br><span class="line">  gzip_buffers  4 32k;</span><br><span class="line">  gzip_types</span><br><span class="line">    text&#x2F;plain</span><br><span class="line">    text&#x2F;css</span><br><span class="line">    text&#x2F;js</span><br><span class="line">    text&#x2F;xml</span><br><span class="line">    text&#x2F;javascript</span><br><span class="line">    application&#x2F;javascript</span><br><span class="line">    application&#x2F;x-javascript</span><br><span class="line">    application&#x2F;json</span><br><span class="line">    application&#x2F;xml</span><br><span class="line">    application&#x2F;xml+rss;</span><br><span class="line">  gzip_vary on;</span><br><span class="line">  gzip_disable &quot;MSIE [1-6]\.&quot;;</span><br><span class="line">  gzip_disable &quot;Mozilla&#x2F;4&quot;;</span><br><span class="line"></span><br><span class="line">  access_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;example&#x2F;access.log ltsv;</span><br><span class="line">  error_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;example&#x2F;error.log debug;</span><br><span class="line"></span><br><span class="line">  large_client_header_buffers 4 32k;</span><br><span class="line"></span><br><span class="line">  location &#x2F; &#123;</span><br><span class="line">    root &#x2F;var&#x2F;www&#x2F;example&#x2F;current&#x2F;public;</span><br><span class="line"></span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    proxy_set_header Host $host;</span><br><span class="line">    proxy_redirect off;</span><br><span class="line"></span><br><span class="line">    if ($http_user_agent ~* &quot;NewRelicPinger&quot;) &#123;</span><br><span class="line">      return 200;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (-f $request_filename) &#123;</span><br><span class="line">      access_log off;</span><br><span class="line">      expires 7d;</span><br><span class="line">      break;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    error_page 500 502 504 &#x2F;500.html;</span><br><span class="line"></span><br><span class="line">    error_page 503 @503;</span><br><span class="line">    # Return a 503 error if the maintenance page exists.</span><br><span class="line">    if (-f &#x2F;var&#x2F;www&#x2F;example&#x2F;shared&#x2F;public&#x2F;system&#x2F;maintenance.html) &#123;</span><br><span class="line">      return 503;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"># maintenance mode start</span><br><span class="line">#    set $maintenance_rule  &#39;&#39;;</span><br><span class="line">#    if ( $uri !~ &quot;system&#x2F;maintenance\.json&quot; )&#123;</span><br><span class="line">#      set $maintenance_rule &quot;U$&#123;maintenance_rule&#125;&quot;;</span><br><span class="line">#    &#125;</span><br><span class="line">#    if ( -e &#x2F;tmp&#x2F;.nginx_maintenance )&#123;</span><br><span class="line">#      set $maintenance_rule &quot;E$&#123;maintenance_rule&#125;&quot;;</span><br><span class="line">#    &#125;</span><br><span class="line">#    if ( $maintenance_rule &#x3D; EU )&#123;</span><br><span class="line">#      return 503;</span><br><span class="line">#      error_page 503 @maintenance;</span><br><span class="line">#    &#125;</span><br><span class="line"># maintenance mode end</span><br><span class="line"></span><br><span class="line">#    allow 122.212.33.130;   # gateway</span><br><span class="line">#    allow 192.168.160.0&#x2F;22;</span><br><span class="line">#    allow 192.168.180.0&#x2F;22;</span><br><span class="line">#    allow 192.168.200.0&#x2F;23;</span><br><span class="line">#    deny all;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  location &#x2F;favicon.ico &#123;</span><br><span class="line">    root &#x2F;var&#x2F;www&#x2F;example&#x2F;current&#x2F;public;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  location &#x2F;apple-touch-icon.png &#123;</span><br><span class="line">    root &#x2F;var&#x2F;www&#x2F;example&#x2F;current&#x2F;public;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  location &#x2F;apple-touch-icon-precomposed.png &#123;</span><br><span class="line">    root &#x2F;var&#x2F;www&#x2F;example&#x2F;current&#x2F;public;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  location @503 &#123;</span><br><span class="line">    # Serve static assets if found.</span><br><span class="line">    if (-f $request_filename) &#123;</span><br><span class="line">      break;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # Set root to the shared directory.</span><br><span class="line">    root &#x2F;var&#x2F;www&#x2F;example&#x2F;shared&#x2F;public;</span><br><span class="line">    rewrite ^(.*)$ &#x2F;system&#x2F;maintenance.html break;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  location @maintenance &#123;</span><br><span class="line">    root &#x2F;var&#x2F;www&#x2F;example&#x2F;current&#x2F;public;</span><br><span class="line">    rewrite ^&#x2F;(.*)$ &#x2F;system&#x2F;maintenance.json break;</span><br><span class="line">    add_header Cache-Control no-cache;</span><br><span class="line">    proxy_method GET;</span><br><span class="line">    proxy_pass http:&#x2F;&#x2F;static_error;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  location ~* ^&#x2F;uploads&#x2F;.+&#x2F;image&#x2F;&#123;</span><br><span class="line">    auth_basic off;</span><br><span class="line">    root &#x2F;var&#x2F;www&#x2F;example&#x2F;current&#x2F;public;</span><br><span class="line"></span><br><span class="line">    if (-f $request_filename) &#123;</span><br><span class="line">       access_log off;</span><br><span class="line">       expires 7d;</span><br><span class="line">       break;</span><br><span class="line">    &#125;</span><br><span class="line">    allow all;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  location ^~ &#x2F;(admin|manage) &#123;</span><br><span class="line">    send_timeout            300;</span><br><span class="line"></span><br><span class="line">    if (-f $request_filename) &#123;</span><br><span class="line">       access_log off;</span><br><span class="line">       expires 1h;</span><br><span class="line">       break;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    root &#x2F;var&#x2F;www&#x2F;example&#x2F;current&#x2F;public;</span><br><span class="line"></span><br><span class="line">    allow all;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="导入-Unicorn"><a href="#导入-Unicorn" class="headerlink" title="导入 Unicorn"></a>导入 Unicorn</h3><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><p>Gemfile:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">gem <span class="string">'unicorn'</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ bundle install</span><br></pre></td></tr></table></figure>

<h4 id="设定-1"><a href="#设定-1" class="headerlink" title="设定"></a>设定</h4><p>添加 config/unicorn.rb</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">config&#x2F;unicorn.rb</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">worker_processes Integer(ENV[&quot;WEB_CONCURRENCY&quot;] || 3)</span><br><span class="line">timeout 15</span><br><span class="line">preload_app true  # 更新時ダウンタイム無し</span><br><span class="line"></span><br><span class="line">listen &quot;&#x2F;tmp&#x2F;unicorn.sock&quot;</span><br><span class="line">pid &quot;&#x2F;tmp&#x2F;unicorn.pid&quot;</span><br><span class="line"></span><br><span class="line">before_fork do |server, worker|</span><br><span class="line">  Signal.trap &#39;TERM&#39; do</span><br><span class="line">    puts &#39;Unicorn master intercepting TERM and sending myself QUIT instead&#39;</span><br><span class="line">    Process.kill &#39;QUIT&#39;, Process.pid</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  defined?(ActiveRecord::Base) and</span><br><span class="line">    ActiveRecord::Base.connection.disconnect!</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">after_fork do |server, worker|</span><br><span class="line">  Signal.trap &#39;TERM&#39; do</span><br><span class="line">    puts &#39;Unicorn worker intercepting TERM and doing nothing. Wait for master to send QUIT&#39;</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  defined?(ActiveRecord::Base) and</span><br><span class="line">    ActiveRecord::Base.establish_connection</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"># ログの出力</span><br><span class="line">stderr_path File.expand_path(&#39;log&#x2F;unicorn.log&#39;, ENV[&#39;RAILS_ROOT&#39;])</span><br><span class="line">stdout_path File.expand_path(&#39;log&#x2F;unicorn.log&#39;, ENV[&#39;RAILS_ROOT&#39;])</span><br></pre></td></tr></table></figure>

<h3 id="导入-Capistrano3"><a href="#导入-Capistrano3" class="headerlink" title="导入 Capistrano3"></a>导入 Capistrano3</h3><h4 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h4><p><code>Gemfile</code>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">group :deployment do</span><br><span class="line">  gem &#39;capistrano&#39;</span><br><span class="line">  gem &#39;capistrano_colors&#39;</span><br><span class="line">  gem &#39;capistrano-ext&#39;</span><br><span class="line">  gem &#39;capistrano_rsync_with_remote_cache&#39;</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ bundle install</span><br><span class="line">$ bundle exec cap install</span><br></pre></td></tr></table></figure>
<h4 id="部署的设定"><a href="#部署的设定" class="headerlink" title="部署的设定"></a>部署的设定</h4><p>由上述命令生成 <code>/Capfile</code> 文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">require &#39;capistrano&#x2F;setup&#39;</span><br><span class="line">require &#39;capistrano&#x2F;deploy&#39;</span><br><span class="line"></span><br><span class="line"># rbenvを使用している場合</span><br><span class="line">require &#39;capistrano&#x2F;rbenv&#39;</span><br><span class="line"></span><br><span class="line"># デプロイ先のサーバで、ユーザディレクトリでrbenvをインストールしている場合</span><br><span class="line">set :rbenv_type, :user</span><br><span class="line">set :rbenv_ruby, &#39;2.1.2&#39;</span><br><span class="line"></span><br><span class="line">require &#39;capistrano&#x2F;bundler&#39;</span><br><span class="line">require &#39;capistrano&#x2F;rails&#x2F;assets&#39;</span><br><span class="line">require &#39;capistrano&#x2F;rails&#x2F;migrations&#39;</span><br><span class="line"></span><br><span class="line">require &#39;capistrano3&#x2F;unicorn&#39;</span><br><span class="line"></span><br><span class="line"># Rails4から分離したsecrets.ymlの環境変数を .envファイルで管理する</span><br><span class="line">set :linked_files, %w&#123;config&#x2F;secrets.yml .env&#125;</span><br><span class="line"></span><br><span class="line"># タスクを読み込むけど、今回は特に使わない</span><br><span class="line">Dir.glob(&#39;lib&#x2F;capistrano&#x2F;tasks&#x2F;*.rake&#39;).each &#123; |r| import r &#125;</span><br></pre></td></tr></table></figure>

<p><code>config/deploy.rb</code>:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># config valid only for Capistrano 3.1</span></span><br><span class="line">lock <span class="string">'3.1.0'</span></span><br><span class="line"></span><br><span class="line">set <span class="symbol">:application</span>, <span class="string">"exmaple"</span></span><br><span class="line">set <span class="symbol">:repo_url</span>, <span class="string">"git@github.com:example/example-server.git"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default branch is :master</span></span><br><span class="line"><span class="comment"># ask :branch, proc &#123; `git rev-parse --abbrev-ref HEAD`.chomp &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default deploy_to directory is /var/www/my_app</span></span><br><span class="line"><span class="comment"># set :deploy_to, '/var/www/my_app'</span></span><br><span class="line">set <span class="symbol">:deploy_to</span>, <span class="string">"/var/www/<span class="subst">#&#123;fetch(<span class="symbol">:application</span>)&#125;</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default value for :scm is :git</span></span><br><span class="line"><span class="comment"># set :scm, :git</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default value for :format is :pretty</span></span><br><span class="line"><span class="comment"># set :format, :pretty</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default value for :log_level is :debug</span></span><br><span class="line"><span class="comment"># set :log_level, :debug</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default value for :pty is false</span></span><br><span class="line"><span class="comment"># set :pty, true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default value for :linked_files is []</span></span><br><span class="line"><span class="comment"># set :linked_files, %w&#123;config/database.yml&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default value for linked_dirs is []</span></span><br><span class="line"><span class="comment"># set :linked_dirs, %w&#123;bin log tmp/pids tmp/cache tmp/sockets vendor/bundle public/system&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default value for default_env is &#123;&#125;</span></span><br><span class="line"><span class="comment"># set :default_env, &#123; path: "/opt/ruby/bin:$PATH" &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default value for keep_releases is 5</span></span><br><span class="line"><span class="comment"># set :keep_releases, 5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># capistrano-bundler</span></span><br><span class="line"><span class="comment"># ------------------------------------------------------------</span></span><br><span class="line">set <span class="symbol">:bundle_roles</span>, <span class="symbol">:bundle</span></span><br><span class="line">set <span class="symbol">:bundle_flags</span>, <span class="string">'--deployment --quiet'</span></span><br><span class="line">set <span class="symbol">:bundle_path</span>, -&gt; &#123; shared_path.join(<span class="string">'vendor/bundle'</span>) &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#-----------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Maintenance</span></span><br><span class="line"><span class="comment">#-----------------------------------------------------------------</span></span><br><span class="line">set <span class="symbol">:app_maintenance_file</span>, <span class="string">"/var/tmp/.app_maintenance"</span></span><br><span class="line">set <span class="symbol">:nginx_maintenance_file</span>, <span class="string">"/var/tmp/.nginx_maintenance"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -----------------------------------------------------------</span></span><br><span class="line"><span class="comment"># SSH setting</span></span><br><span class="line"><span class="comment"># -----------------------------------------------------------</span></span><br><span class="line">set <span class="symbol">:user</span>, (ENV[<span class="string">'CAP_USER'</span>] <span class="params">||</span> ENV[<span class="string">'USER'</span>] <span class="params">||</span> <span class="string">"<span class="subst">#&#123;<span class="string">`whoami`</span>.chomp&#125;</span>"</span>)</span><br><span class="line">set <span class="symbol">:ssh_options</span>, &#123;</span><br><span class="line">  <span class="symbol">user:</span> fetch(<span class="symbol">:user</span>),</span><br><span class="line">  <span class="symbol">port:</span> <span class="number">10022</span>,</span><br><span class="line">  <span class="symbol">forward_agent:</span> <span class="literal">true</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># -----------------------------------------------------------</span></span><br><span class="line"><span class="comment"># NewRelic</span></span><br><span class="line"><span class="comment"># -----------------------------------------------------------</span></span><br><span class="line">set <span class="symbol">:new_relic_app_name</span>, <span class="string">"example"</span></span><br><span class="line">set <span class="symbol">:new_relic_monitor_mode</span>, <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -----------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Unicorn Config</span></span><br><span class="line"><span class="comment"># -----------------------------------------------------------</span></span><br><span class="line">set <span class="symbol">:unicorn_worker_processes</span>, <span class="number">2</span></span><br><span class="line">set <span class="symbol">:unicorn_working_directory</span>, current_path</span><br><span class="line">set <span class="symbol">:unicorn_sock</span>, <span class="string">"/tmp/unicorn.sock"</span></span><br><span class="line">set <span class="symbol">:unicorn_backlog</span>, <span class="number">128</span></span><br><span class="line">set <span class="symbol">:unicorn_port</span>, <span class="number">8080</span></span><br><span class="line">set <span class="symbol">:unicorn_timeout</span>, <span class="number">30</span></span><br><span class="line">set <span class="symbol">:unicorn_preload_app</span>, <span class="literal">true</span></span><br><span class="line">set <span class="symbol">:unicorn_pid_file</span>, File.join(current_path, <span class="string">"tmp"</span>, <span class="string">'pids'</span>, <span class="string">'unicorn.pid'</span>)</span><br><span class="line">set <span class="symbol">:unicorn_stderr_path</span>, File.join(current_path, <span class="string">"log"</span>, <span class="string">"unicorn.stderr.log"</span>)</span><br><span class="line">set <span class="symbol">:unicorn_stdout_path</span>, File.join(current_path, <span class="string">"log"</span>, <span class="string">"unicorn.stdout.log"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Default value for :format is :pretty</span></span><br><span class="line"><span class="comment"># set :format, :pretty</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default value for :log_level is :debug</span></span><br><span class="line"><span class="comment"># set :log_level, :debug</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default value for :pty is false</span></span><br><span class="line">set <span class="symbol">:pty</span>, <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default value for :linked_files is []</span></span><br><span class="line"><span class="comment"># set :linked_files, %w&#123;config/database.yml&#125;</span></span><br><span class="line"></span><br><span class="line">SSHKit.config.command_map[<span class="symbol">:rake</span>] = <span class="string">'bundle exec rake'</span></span><br><span class="line"></span><br><span class="line">set <span class="symbol">:filter</span>, <span class="symbol">roles:</span> <span class="string">%w&#123;app web kvs migrator job bundle&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default value for linked_dirs is []</span></span><br><span class="line">set <span class="symbol">:linked_dirs</span>, <span class="string">%w&#123;log tmp vendor/bundle public/system public/assets public/uploads&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default value for default_env is &#123;&#125;</span></span><br><span class="line"><span class="comment"># set :default_env, &#123; path: "/opt/ruby/bin:$PATH" &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default value for keep_releases is 5</span></span><br><span class="line">set <span class="symbol">:keep_releases</span>, <span class="number">5</span></span><br><span class="line"></span><br><span class="line">set <span class="symbol">:config_path</span>, File.dirname(__FILE_<span class="number">_</span>)</span><br><span class="line">set <span class="symbol">:templates_path</span>, File.join(fetch(<span class="symbol">:config_path</span>), <span class="string">"deploy"</span>, <span class="string">"templates"</span>)</span><br><span class="line"></span><br><span class="line">namespace <span class="symbol">:deploy</span> <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">  desc <span class="string">'Restart application'</span></span><br><span class="line">  task <span class="symbol">:restart</span> <span class="keyword">do</span></span><br><span class="line">    on roles(<span class="symbol">:app</span>), <span class="symbol">in:</span> <span class="symbol">:sequence</span>, <span class="symbol">wait:</span> <span class="number">5</span> <span class="keyword">do</span></span><br><span class="line">      <span class="comment"># Your restart mechanism here, for example:</span></span><br><span class="line">      <span class="comment"># execute :touch, release_path.join('tmp/restart.txt')</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  after <span class="symbol">:publishing</span>, <span class="symbol">:restart</span></span><br><span class="line"></span><br><span class="line">  after <span class="symbol">:restart</span>, <span class="symbol">:clear_cache</span> <span class="keyword">do</span></span><br><span class="line">    on roles(<span class="symbol">:web</span>), <span class="symbol">in:</span> <span class="symbol">:groups</span>, <span class="symbol">limit:</span> <span class="number">3</span>, <span class="symbol">wait:</span> <span class="number">10</span> <span class="keyword">do</span></span><br><span class="line">      <span class="comment"># Here we can do anything such as:</span></span><br><span class="line">      <span class="comment"># within release_path do</span></span><br><span class="line">      <span class="comment">#   execute :rake, 'cache:clear'</span></span><br><span class="line">      <span class="comment"># end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  namespace <span class="symbol">:before_hook</span> <span class="keyword">do</span></span><br><span class="line">    desc <span class="string">'Start a deployment, make sure server(s) ready.'</span></span><br><span class="line">    task <span class="symbol">:starting</span> <span class="keyword">do</span></span><br><span class="line">      puts <span class="string">"example:change_permission】"</span></span><br><span class="line">      invoke(<span class="string">'example:change_permission'</span>)</span><br><span class="line"></span><br><span class="line">      puts <span class="string">"example:git_setup】"</span></span><br><span class="line">      invoke(<span class="string">'example:git_setup'</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  before <span class="symbol">:starting</span>, <span class="string">'before_hook:starting'</span></span><br><span class="line"></span><br><span class="line">  namespace <span class="symbol">:after_hook</span> <span class="keyword">do</span></span><br><span class="line">    desc <span class="string">'Update server(s) by setting up a new release.'</span></span><br><span class="line">    task <span class="symbol">:updating</span> <span class="keyword">do</span></span><br><span class="line">      puts <span class="string">"example:setup】"</span></span><br><span class="line">      invoke(<span class="string">'example:setup:config'</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    desc <span class="string">'Finished'</span></span><br><span class="line">    task <span class="symbol">:finished</span> <span class="keyword">do</span></span><br><span class="line">      <span class="comment"># git:check で作成されるディレクトリを削除</span></span><br><span class="line">      on release_roles <span class="symbol">:all</span> <span class="keyword">do</span></span><br><span class="line">        execute <span class="symbol">:rm</span>, <span class="string">"-rf"</span>, <span class="string">"<span class="subst">#&#123;fetch(<span class="symbol">:tmp_dir</span>)&#125;</span>/<span class="subst">#&#123;fetch(<span class="symbol">:application</span>)&#125;</span>"</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  after <span class="symbol">:updating</span>,  <span class="string">'after_hook:updating'</span></span><br><span class="line">  after <span class="symbol">:finishing</span>, <span class="string">'cleanup'</span></span><br><span class="line">  after <span class="symbol">:finished</span>,  <span class="string">'after_hook:finished'</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">namespace <span class="symbol">:example</span> <span class="keyword">do</span></span><br><span class="line">  namespace <span class="symbol">:setup</span> <span class="keyword">do</span></span><br><span class="line">    task <span class="symbol">:config</span> <span class="keyword">do</span></span><br><span class="line">      on roles(<span class="symbol">:app</span>), <span class="symbol">in:</span> <span class="symbol">:sequence</span> <span class="keyword">do</span></span><br><span class="line">        tmpdir_path = File.join(fetch(<span class="symbol">:tmp_dir</span>), fetch(<span class="symbol">:user</span>))</span><br><span class="line">        execute <span class="string">"mkdir -p <span class="subst">#&#123;tmpdir_path&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">        Dir.chdir(fetch(<span class="symbol">:templates_path</span>)) <span class="keyword">do</span> <span class="params">|path|</span></span><br><span class="line">          Dir.glob(<span class="string">"*.erb"</span>) <span class="keyword">do</span> <span class="params">|file|</span></span><br><span class="line">            remote_filename = file.gsub(<span class="regexp">/.erb$/</span>, <span class="string">""</span>)</span><br><span class="line">            remote_path = File.join(release_path, <span class="string">"config"</span>, remote_filename)</span><br><span class="line">            info <span class="string">"Uploading: <span class="subst">#&#123;file&#125;</span> -&gt; <span class="subst">#&#123;remote_path&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">            file_content = ERB.new(File.read(file))</span><br><span class="line">            converted_content = StringIO.new(file_content.result(binding))</span><br><span class="line">            tmpfile = File.join(tmpdir_path, remote_filename)</span><br><span class="line">            upload! converted_content, tmpfile</span><br><span class="line"></span><br><span class="line">            execute <span class="string">"mv <span class="subst">#&#123;tmpfile&#125;</span> <span class="subst">#&#123;remote_path&#125;</span>"</span></span><br><span class="line">            execute <span class="string">"chmod a+r <span class="subst">#&#123;remote_path&#125;</span>"</span></span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  namespace <span class="symbol">:nginx</span> <span class="keyword">do</span></span><br><span class="line">    desc <span class="string">"start nginx process"</span></span><br><span class="line">    task <span class="symbol">:start</span> <span class="keyword">do</span></span><br><span class="line">      on roles(<span class="symbol">:web</span>), <span class="symbol">in:</span> <span class="symbol">:sequence</span> <span class="keyword">do</span></span><br><span class="line">        sudo <span class="string">"/etc/init.d/nginx start"</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    desc <span class="string">"restart nginx process"</span></span><br><span class="line">    task <span class="symbol">:restart</span> <span class="keyword">do</span></span><br><span class="line">      on roles(<span class="symbol">:web</span>), <span class="symbol">in:</span> <span class="symbol">:sequence</span> <span class="keyword">do</span></span><br><span class="line">        sudo <span class="string">"/etc/init.d/nginx restart"</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    desc <span class="string">"reload nginx configuration"</span></span><br><span class="line">    task <span class="symbol">:reload</span> <span class="keyword">do</span></span><br><span class="line">      on roles(<span class="symbol">:web</span>), <span class="symbol">in:</span> <span class="symbol">:sequence</span> <span class="keyword">do</span></span><br><span class="line">        sudo <span class="string">"/etc/init.d/nginx reload"</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    desc <span class="string">"stop nginx process"</span></span><br><span class="line">    task <span class="symbol">:stop</span> <span class="keyword">do</span></span><br><span class="line">      on roles(<span class="symbol">:web</span>), <span class="symbol">in:</span> <span class="symbol">:sequence</span> <span class="keyword">do</span></span><br><span class="line">        sudo <span class="string">"/etc/init.d/nginx stop"</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  namespace <span class="symbol">:stage</span> <span class="keyword">do</span></span><br><span class="line">    desc <span class="string">"input stage validation"</span></span><br><span class="line">    task <span class="symbol">:validation</span> <span class="keyword">do</span></span><br><span class="line">      run_locally <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">        ask(<span class="symbol">:input_stage</span>, <span class="string">"stage == <span class="subst">#&#123;fetch(<span class="symbol">:stage</span>)&#125;</span>"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> fetch(<span class="symbol">:input_stage</span>) == fetch(<span class="symbol">:stage</span>).to_s</span><br><span class="line">          puts <span class="string">"valid!"</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          raise <span class="string">"Invalid stage"</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  task <span class="symbol">:git_setup</span> <span class="keyword">do</span></span><br><span class="line">    on roles(<span class="symbol">:app</span>) <span class="keyword">do</span></span><br><span class="line">      within <span class="string">"<span class="subst">#&#123;fetch(<span class="symbol">:deploy_to</span>)&#125;</span>/repo"</span> <span class="keyword">do</span></span><br><span class="line">        sudo <span class="string">"chmod -R g+ws *"</span></span><br><span class="line">        sudo <span class="string">"chgrp -R example-users *"</span></span><br><span class="line">        execute <span class="symbol">:git</span>, <span class="string">"config repo.core.sharedRepository true"</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># change_permission</span></span><br><span class="line">  task <span class="symbol">:change_permission</span> <span class="keyword">do</span></span><br><span class="line">    on roles(<span class="symbol">:all</span>) <span class="keyword">do</span></span><br><span class="line">      within fetch(<span class="symbol">:deploy_to</span>) <span class="keyword">do</span></span><br><span class="line">        sudo <span class="string">"chmod -R g+w *"</span></span><br><span class="line">        sudo <span class="string">"chgrp -R example-users *"</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  namespace <span class="symbol">:db</span> <span class="keyword">do</span></span><br><span class="line">    set <span class="symbol">:db_environmental_variables</span>, -&gt;() &#123;</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="symbol">rails_env:</span> fetch(<span class="symbol">:rails_env</span>),</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    desc <span class="string">"rake db:create"</span></span><br><span class="line">    task <span class="symbol">:create</span> <span class="keyword">do</span></span><br><span class="line">      on roles(<span class="symbol">:migrator</span>), <span class="symbol">in:</span> <span class="symbol">:sequence</span> <span class="keyword">do</span></span><br><span class="line">        with <span class="symbol">rails_env:</span> fetch(<span class="symbol">:rails_env</span>) <span class="keyword">do</span></span><br><span class="line">          within current_path <span class="keyword">do</span></span><br><span class="line">            execute <span class="symbol">:bundle</span>, <span class="symbol">:exec</span>, <span class="symbol">:rake</span>, <span class="string">'db:create'</span></span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    desc <span class="string">"rake db:seed"</span></span><br><span class="line">    task <span class="symbol">:seed</span> <span class="keyword">do</span></span><br><span class="line">      on roles(<span class="symbol">:migrator</span>), <span class="symbol">in:</span> <span class="symbol">:sequence</span> <span class="keyword">do</span></span><br><span class="line">        within current_path <span class="keyword">do</span></span><br><span class="line">          env_variables                 = fetch(<span class="symbol">:db_environmental_variables</span>).dup</span><br><span class="line">          env_variables[<span class="symbol">:tables</span>]        = ENV[<span class="string">'TABLES'</span>] <span class="keyword">if</span> ENV[<span class="string">'TABLES'</span>]</span><br><span class="line">          env_variables[<span class="symbol">:catalogs</span>]        = ENV[<span class="string">'CATALOGS'</span>] <span class="keyword">if</span> ENV[<span class="string">'CATALOGS'</span>]</span><br><span class="line">          with env_variables <span class="keyword">do</span></span><br><span class="line">            execute <span class="symbol">:bundle</span>, <span class="symbol">:exec</span>, <span class="symbol">:rake</span>, <span class="string">'db:seed'</span></span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">namespace <span class="symbol">:maintenance</span> <span class="keyword">do</span></span><br><span class="line">  desc <span class="string">"Start nginx maintenance(End command: maintenance:nginx_end)"</span></span><br><span class="line">  task <span class="symbol">:nginx_start</span> <span class="keyword">do</span></span><br><span class="line">    on roles(<span class="symbol">:web</span>) <span class="keyword">do</span></span><br><span class="line">      execute <span class="symbol">:touch</span>, fetch(<span class="symbol">:nginx_maintenance_file</span>)</span><br><span class="line">      execute <span class="symbol">:chmod</span>, <span class="string">'777'</span>, fetch(<span class="symbol">:nginx_maintenance_file</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  desc <span class="string">"End nginx maintenance"</span></span><br><span class="line">  task <span class="symbol">:nginx_end</span> <span class="keyword">do</span></span><br><span class="line">    on roles(<span class="symbol">:web</span>) <span class="keyword">do</span></span><br><span class="line">      execute <span class="symbol">:rm</span>, <span class="string">'-f'</span>, fetch(<span class="symbol">:nginx_maintenance_file</span>)</span><br><span class="line">      <span class="comment">#execute :rm, '-f', File.join(current_path, 'public', 'system', 'maintenance.html')</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  desc <span class="string">"Start maintenance"</span></span><br><span class="line">  task <span class="symbol">:start</span> <span class="keyword">do</span></span><br><span class="line">    on roles(<span class="symbol">:web</span>) <span class="keyword">do</span></span><br><span class="line">      execute <span class="symbol">:touch</span>, fetch(<span class="symbol">:app_maintenance_file</span>)</span><br><span class="line">      execute <span class="symbol">:chmod</span>, <span class="string">'777'</span>, fetch(<span class="symbol">:app_maintenance_file</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  desc <span class="string">"End maintenance"</span></span><br><span class="line">  task <span class="symbol">:end</span> <span class="keyword">do</span></span><br><span class="line">    on roles(<span class="symbol">:web</span>) <span class="keyword">do</span></span><br><span class="line">      execute <span class="symbol">:rm</span>, <span class="string">'-f'</span>, fetch(<span class="symbol">:app_maintenance_file</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  desc <span class="string">"put maitenance json"</span></span><br><span class="line">  task <span class="symbol">:json</span> <span class="keyword">do</span></span><br><span class="line">    on roles(<span class="symbol">:web</span>) <span class="keyword">do</span></span><br><span class="line">      remote_system_path     = File.join(current_path, <span class="string">'public'</span>, <span class="string">'system'</span>)</span><br><span class="line"></span><br><span class="line">      <span class="comment"># メンテナンスjsonのupload</span></span><br><span class="line">      file_path   = File.join(<span class="string">'public'</span>, <span class="string">'system'</span>, <span class="string">'maintenance.json'</span>)</span><br><span class="line">      output_path = File.join(remote_system_path, <span class="string">"maintenance.json"</span>)</span><br><span class="line"></span><br><span class="line">      upload_file(file_path, output_path)</span><br><span class="line"></span><br><span class="line">      execute <span class="symbol">:chmod</span>, <span class="string">'-R a+r '</span>, output_path</span><br><span class="line">      execute <span class="symbol">:chmod</span>, <span class="string">'-R g+w '</span>, output_path</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="comment">#before 'maintenance:nginx_start', 'maintenance:json'</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p><code>config/deploy/exmaple.rb</code>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set :stage, :production</span><br><span class="line">set :rails_env, :production</span><br><span class="line"></span><br><span class="line">example_web_01 &#x3D; &quot;xxx.xx.xxx.xxx&quot;</span><br><span class="line"></span><br><span class="line">example_db_01  &#x3D; &quot;localhost&quot;</span><br><span class="line"></span><br><span class="line">example_job_01 &#x3D; &quot;xxx.xx.xxx.xxx&quot;</span><br><span class="line"></span><br><span class="line">example_kvs_01 &#x3D; &quot;xxx.xx.xxx.xxx&quot;</span><br><span class="line"></span><br><span class="line">set :branch, &quot;master&quot;</span><br><span class="line"></span><br><span class="line">set :domain_name, &#39;&#39;</span><br><span class="line"></span><br><span class="line">set :application_hostname, &#39;example&#39;</span><br><span class="line">set :new_relic_monitor_mode, true</span><br><span class="line"></span><br><span class="line">set :db_path, &quot;&#x2F;usr&#x2F;bin&#x2F;mysql&quot;</span><br><span class="line">set :db_root_user, &#39;root&#39;</span><br><span class="line">set :db_root_password, &#39;***&#39;</span><br><span class="line">set :db_user, &#39;example&#39;</span><br><span class="line">set :db_password, &#39;example&#39;</span><br><span class="line">set :db_host, example_db_01</span><br><span class="line">set :db_name, &#39;example_production&#39;</span><br><span class="line">set :db_pool, 10</span><br><span class="line"></span><br><span class="line">set :redis_data_host, example_kvs_01</span><br><span class="line">set :redis_queue_host, example_kvs_01</span><br><span class="line"></span><br><span class="line">server example_web_01, roles: %w&#123;bundle web app migrator job db&#125;, primary: true</span><br><span class="line"></span><br><span class="line">invoke &quot;example:stage:validation&quot;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序开发</category>
      </categories>
      <tags>
        <tag>Ruby</tag>
        <tag>Rails</tag>
        <tag>nginx</tag>
        <tag>unicorn</tag>
      </tags>
  </entry>
  <entry>
    <title>【Rails】Desktop/Mobile 的模板分离</title>
    <url>/posts/20621/</url>
    <content><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>随着智能化手机的普及，越来越多的用户开始使用手机终端来进行网页浏览。为了在电脑和手机端都能达到理想的效果，并尽可能的减少工作量，Rails 4.1 开始追加了 <code>variant</code>，帮助网站开发人员能够使用不同模板来对应不同终端的需求。</p>
<a id="more"></a>

<h3 id="安装-Gem-Browser"><a href="#安装-Gem-Browser" class="headerlink" title="安装 Gem: Browser"></a>安装 Gem: Browser</h3><p>browser 是一个用于分析 User Agent 以获取用户手机端信息的 Gem<br><a href="https://github.com/fnando/browser" target="_blank" rel="noopener">https://github.com/fnando/browser</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gem &#39;browser&#39;</span><br></pre></td></tr></table></figure>

<h3 id="修改-application-controller-rb"><a href="#修改-application-controller-rb" class="headerlink" title="修改 application_controller.rb"></a>修改 <code>application_controller.rb</code></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">before_action :detect_device_variant</span><br><span class="line"></span><br><span class="line">private</span><br><span class="line">def detect_device_variant</span><br><span class="line">  request.variant &#x3D; :sp  if browser.mobile?</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<h3 id="创建不同模板对应不同终端"><a href="#创建不同模板对应不同终端" class="headerlink" title="创建不同模板对应不同终端"></a>创建不同模板对应不同终端</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">app&#x2F;views&#x2F;show.html+sp.erb</span><br><span class="line">app&#x2F;views&#x2F;show.html.erb</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序开发</category>
      </categories>
      <tags>
        <tag>Ruby</tag>
        <tag>Rails</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 命令(05)：route 命令</title>
    <url>/posts/26983/</url>
    <content><![CDATA[<p>Linux系统的route命令用于显示和操作IP路由表（show / manipulate the IP routing table）。要实现两个不同的子网之间的通信，需要一台连接两个网络的路由器，或者同时位于两个网络的网关来实现。在Linux系统中，设置路由通常是为了解决以下问题：该Linux系统在一个局域网中，局域网中有一个网关，能够让机器访问Internet，那么就需要将这台机器的IP地址设置为Linux机器的默认路由。要注意的是，直接在命令行下执行route命令来添加路由，不会永久保存，当网卡重启或者机器重启之后，该路由就失效了；可以在<code>/etc/rc.local</code>中添加route命令来保证该路由设置永久有效。</p>
<a id="more"></a>

<h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">route [-f] [-p] [Command [Destination] [mask Netmask] [Gateway] [metric Metric]] [if Interface]]</span><br></pre></td></tr></table></figure>

<h3 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h3><p>Route命令是用于操作基于内核ip路由表，它的主要作用是创建一个静态路由让指定一个主机或者一个网络通过一个网络接口，如eth0。当使用”add”或者”del”参数时，路由表被修改，如果没有参数，则显示路由表当前的内容。</p>
<h3 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h3><table>
<thead>
<tr>
<th align="left">命令参数</th>
<th align="left">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-c</td>
<td align="left">显示更多信息</td>
</tr>
<tr>
<td align="left">-n</td>
<td align="left">不解析名字</td>
</tr>
<tr>
<td align="left">-v</td>
<td align="left">显示详细的处理信息</td>
</tr>
<tr>
<td align="left">-F</td>
<td align="left">显示发送信息</td>
</tr>
<tr>
<td align="left">-C</td>
<td align="left">显示路由缓存</td>
</tr>
<tr>
<td align="left">-f</td>
<td align="left">清除所有网关入口的路由表。</td>
</tr>
<tr>
<td align="left">-p</td>
<td align="left">与 add 命令一起使用时使路由具有永久性。</td>
</tr>
<tr>
<td align="left">add</td>
<td align="left">添加一条新路由。</td>
</tr>
<tr>
<td align="left">del</td>
<td align="left">删除一条路由。</td>
</tr>
<tr>
<td align="left">-net</td>
<td align="left">目标地址是一个网络。</td>
</tr>
<tr>
<td align="left">-host</td>
<td align="left">目标地址是一个主机。</td>
</tr>
<tr>
<td align="left">netmask</td>
<td align="left">当添加一个网络路由时，需要使用网络掩码。</td>
</tr>
<tr>
<td align="left">gw</td>
<td align="left">路由数据包通过网关。注意，你指定的网关必须能够达到。</td>
</tr>
<tr>
<td align="left">metric</td>
<td align="left">设置路由跳数。</td>
</tr>
<tr>
<td align="left">Command</td>
<td align="left">指定您想运行的命令 (Add/Change/Delete/Print)。</td>
</tr>
<tr>
<td align="left">Destination</td>
<td align="left">指定该路由的网络目标。</td>
</tr>
<tr>
<td align="left">mask Netmask</td>
<td align="left">指定与网络目标相关的网络掩码（也被称作子网掩码）。</td>
</tr>
<tr>
<td align="left">Gateway</td>
<td align="left">指定网络目标定义的地址集和子网掩码可以到达的前进或下一跃点 IP 地址。</td>
</tr>
<tr>
<td align="left">metric</td>
<td align="left">Metric 为路由指定一个整数成本值标（从 1 至 9999），当在路由表(与转发的数据包目标地址最匹配)的多个路由中进行选择时可以使用。</td>
</tr>
<tr>
<td align="left">if</td>
<td align="left">Interface 为可以访问目标的接口指定接口索引。若要获得一个接口列表和它们相应的接口索引，使用 route print 命令的显示功能。可以使用十进制或十六进制值进行接口索引。</td>
</tr>
</tbody></table>
<h3 id="使用实例"><a href="#使用实例" class="headerlink" title="使用实例"></a>使用实例</h3><h4 id="显示当前路由"><a href="#显示当前路由" class="headerlink" title="显示当前路由"></a>显示当前路由</h4><p>命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">route</span><br><span class="line">route -n</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# route</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</span><br><span class="line">e192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</span><br><span class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</span><br><span class="line">default         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</span><br><span class="line">[root@localhost ~]# route -n</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">192.168.120.0   0.0.0.0         255.255.255.0   U     0      0        0 eth0</span><br><span class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</span><br><span class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</span><br><span class="line">0.0.0.0         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</span><br></pre></td></tr></table></figure>


<p>说明：<br>第一行表示主机所在网络的地址为192.168.120.0，若数据传送目标是在本局域网内通信，则可直接通过eth0转发数据包;<br>第四行表示数据传送目的是访问Internet，则由接口eth0，将数据包发送到网关192.168.120.240<br>其中Flags为路由标志，标记当前网络节点的状态。<br>Flags标志说明：<br>U Up表示此路由当前为启动状态<br>H Host，表示此网关为一主机<br>G Gateway，表示此网关为一路由器<br>R Reinstate Route，使用动态路由重新初始化的路由<br>D Dynamically,此路由是动态性地写入<br>M Modified，此路由是由路由守护程序或导向器动态修改<br>! 表示此路由当前为关闭状态<br>备注：<br>route -n (-n 表示不解析名字,列出速度会比route 快)</p>
<h4 id="添加网关-设置网关"><a href="#添加网关-设置网关" class="headerlink" title="添加网关/设置网关"></a>添加网关/设置网关</h4><p>命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">route add -net 224.0.0.0 netmask 240.0.0.0 dev eth0</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# route add -net 224.0.0.0 netmask 240.0.0.0 dev eth0</span><br><span class="line">[root@localhost ~]# route</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</span><br><span class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</span><br><span class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</span><br><span class="line">224.0.0.0       *               240.0.0.0       U     0      0        0 eth0</span><br><span class="line">default         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</span><br><span class="line">[root@localhost ~]#</span><br></pre></td></tr></table></figure>
<p>说明：<br>增加一条 到达244.0.0.0的路由</p>
<h4 id="屏蔽一条路由"><a href="#屏蔽一条路由" class="headerlink" title="屏蔽一条路由"></a>屏蔽一条路由</h4><p>命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">route add -net 224.0.0.0 netmask 240.0.0.0 reject</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# route add -net 224.0.0.0 netmask 240.0.0.0 reject</span><br><span class="line">[root@localhost ~]# route</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</span><br><span class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</span><br><span class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</span><br><span class="line">224.0.0.0       -               240.0.0.0       !     0      -        0 -</span><br><span class="line">224.0.0.0       *               240.0.0.0       U     0      0        0 eth0</span><br><span class="line">default         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</span><br></pre></td></tr></table></figure>

<p>说明：<br>增加一条屏蔽的路由，目的地址为 224.x.x.x 将被拒绝</p>
<h4 id="删除路由记录"><a href="#删除路由记录" class="headerlink" title="删除路由记录"></a>删除路由记录</h4><p>命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">route del -net 224.0.0.0 netmask 240.0.0.0</span><br><span class="line">route del -net 224.0.0.0 netmask 240.0.0.0 reject</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# route</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</span><br><span class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</span><br><span class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</span><br><span class="line">224.0.0.0       -               240.0.0.0       !     0      -        0 -</span><br><span class="line">224.0.0.0       *               240.0.0.0       U     0      0        0 eth0</span><br><span class="line">default         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</span><br><span class="line">[root@localhost ~]# route del -net 224.0.0.0 netmask 240.0.0.0</span><br><span class="line">[root@localhost ~]# route</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</span><br><span class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</span><br><span class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</span><br><span class="line">224.0.0.0       -               240.0.0.0       !     0      -        0 -</span><br><span class="line">default         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</span><br><span class="line">[root@localhost ~]# route del -net 224.0.0.0 netmask 240.0.0.0 reject</span><br><span class="line">[root@localhost ~]# route</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</span><br><span class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</span><br><span class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</span><br><span class="line">default         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</span><br><span class="line">[root@localhost ~]#</span><br></pre></td></tr></table></figure>

<h4 id="删除和添加设置默认网关"><a href="#删除和添加设置默认网关" class="headerlink" title="删除和添加设置默认网关"></a>删除和添加设置默认网关</h4><p>命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">route del default gw 192.168.120.240</span><br><span class="line">route add default gw 192.168.120.240</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# route del default gw 192.168.120.240</span><br><span class="line">[root@localhost ~]# route</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</span><br><span class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</span><br><span class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</span><br><span class="line">[root@localhost ~]# route add default gw 192.168.120.240</span><br><span class="line">[root@localhost ~]# route</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</span><br><span class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</span><br><span class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</span><br><span class="line">default         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Linux 命令</tag>
      </tags>
  </entry>
  <entry>
    <title>【算法】火车运煤问题</title>
    <url>/posts/38368/</url>
    <content><![CDATA[<blockquote>
<p>你是山西的一个煤老板，你在矿区开采了有3000吨煤需要运送到市场上去卖，从你的矿区到市场有1000公里，你手里有一列烧煤的火车，这个火车最多只能装1000吨煤，且其能耗比较大——每一公里需要耗一吨煤。请问，作为一个懂编程的煤老板的你，你会怎么运送才能运最多的煤到集市？</p>
</blockquote>
<a id="more"></a>

<h3 id="1-普通解"><a href="#1-普通解" class="headerlink" title="1. 普通解"></a>1. 普通解</h3><ol>
<li>装1000吨煤，走250公里，扔下500吨煤，回矿山。</li>
<li>装1000吨煤，走到250公里处，拿起250吨煤继续向前到500公里处，扔下500吨煤，回矿山。此时火车上还有250吨，再加上在250公里处还有250吨煤，所以，火车是可以回矿山的。</li>
<li>装上最后1000吨煤，走到500公里处，装上那里的500吨煤，然后一直走到目的。</li>
</ol>
<h3 id="2-最优解"><a href="#2-最优解" class="headerlink" title="2. 最优解"></a>2. 最优解</h3><p>从动态规划的角度求最优解：<br>假设起始运送货物量为t，重点路程为s，火车容量为c，可以运抵终点的最多货物量为函数 F(t, s)。<br>3种基本情况：<br>（1）t &lt; s：货物量不足以运送到此距离，所以F(t, s) = 0;<br>（2）s &lt; t &lt; c：火车一次就可以装完货物，所以F(t, s) = t - s;<br>（3）2s &lt; c 使得火车一次无法运完，但可以采用往返的方式多次运输，这种情况下最有的方式就是减少总共往返的次数，也就是直接运到终点而不在中间卸货，所以F(t, s) = (t / c - 1) * (c - 2s) - (c - s)</p>
<p>可得递归式：F(t, s) = max{ F( F(t, i), s - i)}  (1 &lt;= i &lt; s)</p>
<h3 id="3-例解"><a href="#3-例解" class="headerlink" title="3. 例解"></a>3. 例解</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include</span><br><span class="line">using namespace std;</span><br><span class="line">&#x2F;&#x2F;总共3KT煤</span><br><span class="line">#define TOTALCOAL 3000.0</span><br><span class="line">&#x2F;&#x2F;运送距离1000KM</span><br><span class="line">#define DISTANCE 1000.0</span><br><span class="line">&#x2F;&#x2F;每次最多运送1000T</span><br><span class="line">#define MAX_TRANS 1000.0</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">  int n &#x3D; TOTALCOAL &#x2F; MAX_TRANS;</span><br><span class="line">  float anMidPoint[n];</span><br><span class="line">  float nTotalDis &#x3D; 0;</span><br><span class="line">  for(int i &#x3D; 0; i &lt; (n – 1); i++)</span><br><span class="line">  &#123;</span><br><span class="line">    anMidPoint[i] &#x3D; MAX_TRANS &#x2F; (2 * (n – i) – 1);</span><br><span class="line">    nTotalDis +&#x3D; anMidPoint[i];</span><br><span class="line">  &#125;</span><br><span class="line">  anMidPoint[n – 1] &#x3D; DISTANCE – nTotalDis;</span><br><span class="line">  cout &lt;&lt; &quot;Total coal: \t\t&quot; &lt;&lt; TOTALCOAL &lt;&lt; &quot; T&quot; &lt;&lt; endl;</span><br><span class="line">  cout &lt;&lt; &quot;Transport distance: \t&quot; &lt;&lt; DISTANCE &lt;&lt; &quot; KM&quot; &lt;&lt; endl;</span><br><span class="line">  cout &lt;&lt; &quot;Transport volume: \t&quot; &lt;&lt; MAX_TRANS &lt;&lt; &quot; T&#x2F;KM&quot;&lt;&lt; endl;</span><br><span class="line">  cout &lt;&lt; &quot;Profit: \t\t&quot; &lt;&lt; MAX_TRANS – anMidPoint[n – 1] &lt;&lt; &quot; T&quot;&lt;&lt; endl;</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#: g++ CoalTrain.cpp</span><br><span class="line">#: .&#x2F;a.out</span><br><span class="line">#: Total coal: 3000 T</span><br><span class="line">#: Transport distance: 1000 KM</span><br><span class="line">#: Transport volume: 1000 T&#x2F;KM</span><br><span class="line">#: Profit: 533.333 T</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
        <tag>算法</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>【算法】鸡蛋问题</title>
    <url>/posts/8302/</url>
    <content><![CDATA[<blockquote>
<p>如果你有两枚鸡蛋，同时，你想知道，从楼上将鸡蛋摔下而不让它碎掉的楼层极限是多少，你会怎么做？</p>
</blockquote>
<a id="more"></a>

<h3 id="1-1-一个鸡蛋"><a href="#1-1-一个鸡蛋" class="headerlink" title="1.1 一个鸡蛋"></a>1.1 一个鸡蛋</h3><p>鸡蛋必须临界层仍小的时候碎，所以唯一的策略是从1层往上逐层投掷，此时最高的投掷次数为 \(T_{max}\)</p>
<h3 id="1-2-两个鸡蛋"><a href="#1-2-两个鸡蛋" class="headerlink" title="1.2 两个鸡蛋"></a>1.2 两个鸡蛋</h3><p>利用多的这个鸡蛋缩小查找的范围，因而把楼层分成若干段：先利用一个鸡蛋来确定临界层所在的段，再利用另一个鸡蛋确定临界层，总的投掷次数等于确定临界段的次数 \(n_1\)和确定临界层的次数 \(n_2\)的和。</p>
<ul>
<li>现在把总楼层平均分成n段，有<br>$$T_{max} = (n-1) + {S_n \over n - 1} = n + {S_n \over n} - 2$$</li>
</ul>
<p>由均值不等式可知 \(n = \sqrt {S_n}\) 时，</p>
<p>$$T_{max} = 2 \times \sqrt {S_n} - 2$$</p>
<p>把\(S_n\)层分成若干段，从下往上，每段的层数减少1，这样使得在最坏的情况下,\(n_1\)增加1的同时\(n_2\)减少1，因而\(n_1\)和\(n_2\)的综合不变，为确定n的值，解不等式\(n+(n-1)+(n-2)+\cdots+1 \ge S_n\)</p>
<h3 id="1-3-推广"><a href="#1-3-推广" class="headerlink" title="1.3 推广"></a>1.3 推广</h3><p>从上面的讨论可以看书，此问题的关键是高阶等差数列, k个鸡蛋时：<br>$$ \sum_{i=1}^n C^k_i \ge S_n $$</p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
        <tag>算法</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>【算法】Rectangles&#39; Area</title>
    <url>/posts/41915/</url>
    <content><![CDATA[<p><img src="/img/RectangleArea.png" alt="【算法】Rectangles&#39; Area"></p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int solution(int K, int L, int M, int N, int P, int Q, int R, int S) &#123;</span><br><span class="line">    &#x2F;&#x2F; write your code in C++11 (g++ 4.8.2)</span><br><span class="line">    int endx    &#x3D; std::max(M, R);</span><br><span class="line">    int startx  &#x3D; std::min(K, P);</span><br><span class="line">    int width   &#x3D; M - K + R - P - (endx-startx);</span><br><span class="line"></span><br><span class="line">    int endy    &#x3D; std::max(N,S);</span><br><span class="line">    int starty  &#x3D; std::min(L,Q);</span><br><span class="line">    int height  &#x3D; N - L + S - Q - ( endy - starty );</span><br><span class="line"></span><br><span class="line">    return (M - K) * (N - L) + (R - P) * (S - Q) - width * height;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
        <tag>算法</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>【算法】Nim Game</title>
    <url>/posts/45623/</url>
    <content><![CDATA[<blockquote>
<p>You are playing the following Nim Game with your friend: There is a heap of stones on the table, each time one of you take turns to remove 1 to 3 stones. The one who removes the last stone will be the winner. You will take the first turn to remove the stones.</p>
</blockquote>
<blockquote>
<p>Both of you are very clever and have optimal strategies for the game. Write a function to determine whether you can win the game given the number of stones in the heap.</p>
</blockquote>
<blockquote>
<p>For example, if there are 4 stones in the heap, then you will never win the game: no matter 1, 2, or 3 stones you remove, the last stone will always be removed by your friend.</p>
</blockquote>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    bool canWinNim(int n) &#123;</span><br><span class="line">        return n % 4 !&#x3D; 0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
        <tag>算法</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>【Rails】使用serialize</title>
    <url>/posts/35044/</url>
    <content><![CDATA[<h3 id="ActiveRecord-Base-serialize"><a href="#ActiveRecord-Base-serialize" class="headerlink" title="ActiveRecord::Base serialize"></a>ActiveRecord::Base serialize</h3><p>Rails 中通过使用 serialize 直接将对象转化为字符串保存在数据库中。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class User &lt; ActiveRecord::Base</span><br><span class="line">  serialize :group_ids</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<p>通过以上的方式，User#group_ids 被字符串化并保存，并不需要其他多余的处理。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; User.create(name: &#39;Aclice&#39;, group_ids: [1, 2, 3])</span><br><span class="line">&gt; User.save</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>在数据库中，数据以字符串的形式保存：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; select * from users;</span><br><span class="line">1|alice|---\n- 1\n- 3\n- 5|2013-12-11 14:18:07.344781|2013-12-11 14:18:07.344781</span><br></pre></td></tr></table></figure>

<p>以正常方式取出数据：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; user &#x3D; User.find(1)</span><br><span class="line">  User Load (0.3ms)  SELECT &quot;users&quot;.* FROM &quot;users&quot; WHERE &quot;users&quot;.&quot;id&quot; &#x3D; ? LIMIT 1  [[&quot;id&quot;, 1]]</span><br><span class="line">&#x3D;&gt; #&lt;User id: 1, name: &quot;alice&quot;, group_ids: [1, 3, 5], created_at: &quot;2013-12-11 14:18:07&quot;, updated_at: &quot;2013-12-11 14:18:07&quot;&gt;</span><br><span class="line">&gt; user.group_ids</span><br><span class="line">&#x3D;&gt; [1, 3, 5]</span><br><span class="line">&gt; user.group_ids.class</span><br><span class="line">&#x3D;&gt; Array</span><br></pre></td></tr></table></figure>

<p>需要注意的是，serialize 的使用会消耗大量的时间，因此在大部分系统中遭到弃用。</p>
<h3 id="对象类型"><a href="#对象类型" class="headerlink" title="对象类型"></a>对象类型</h3><p>可以通过 serialize 所带的第二个参数来指定队形的类型，如 Hash, Array, Json</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class User &lt; ActiveRecord::Base</span><br><span class="line">  serialize :group_ids, Array</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; User.create(name: &#39;bob&#39;, group_ids: &#39;1,2,3&#39;)</span><br><span class="line">   (0.1ms)  begin transaction</span><br><span class="line">   (0.1ms)  rollback transactionActiveRecord::SerializationTypeMismatch: Attribute was supposed to be a Array, but was a String. -- &quot;1,2,3</span><br></pre></td></tr></table></figure>

<p>如果与对象的类型不符，则会显示 ‘ActiveRecord::SerializationTypeMismatch’ 错误。</p>
<h3 id="测试用例"><a href="#测试用例" class="headerlink" title="测试用例"></a>测试用例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">describe &#39;.serialize&#39; do</span><br><span class="line">  let(:user) &#123; build :user &#125;</span><br><span class="line"></span><br><span class="line">  context &#39;when group_ids given the Array object&#39; do</span><br><span class="line">    subject &#123; user.group_ids &#125;</span><br><span class="line">    before do</span><br><span class="line">      user.group_ids &#x3D; [1, 3, 5]</span><br><span class="line">      user.save</span><br><span class="line">    end</span><br><span class="line">    it &#123; should match_array [1,3,5] &#125;</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  context &#39;when group_ids given an invalid object&#39; do</span><br><span class="line">    [12345, &#39;string value&#39;, &#123;key: &#39;value&#39;&#125;].each do |invalid_object|</span><br><span class="line">      before &#123; user.group_ids &#x3D; invalid_object &#125;</span><br><span class="line">      it &#123; expect &#123; user.save &#125;.to raise_error(ActiveRecord::SerializationTypeMismatch) &#125;</span><br><span class="line">    end</span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序开发</category>
      </categories>
      <tags>
        <tag>Ruby</tag>
        <tag>Rails</tag>
      </tags>
  </entry>
  <entry>
    <title>【算法】String Calculation</title>
    <url>/posts/60469/</url>
    <content><![CDATA[<blockquote>
<p>Given a string like “a + b”, return the value of the string with the regulation we defined.</p>
</blockquote>
<blockquote>
<p>For Exmaple:</p>
</blockquote>
<blockquote>
<p>“a + b”     =&gt; “ab”<br>“abc - 1”   =&gt; “ab”<br>“a^3”       =&gt; “aaa”<br>“(a + b)^3” =&gt; “ababab”</p>
</blockquote>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class EquationParser</span><br><span class="line">  PRECEDENCE &#x3D; [</span><br><span class="line">    [&#39;(&#39;, &#39;)&#39;],</span><br><span class="line">    [&#39;+&#39;, &#39;-&#39;],</span><br><span class="line">    [&#39;^&#39;]</span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line">  REG_VARIABLE &#x3D; &#x2F;(\d|[a-z])+&#x2F;</span><br><span class="line">  REG_OPERATOR &#x3D; &#x2F;[\+\-\^]&#x2F;</span><br><span class="line">  REG_PARENTHESIS &#x3D; &#x2F;[\(\)]&#x2F;</span><br><span class="line">  REG_SPACE &#x3D; &#x2F;\s+&#x2F;</span><br><span class="line"></span><br><span class="line">  class &lt;&lt; self</span><br><span class="line">    def exec(equation)</span><br><span class="line">      exec_postfix parse_to_postfix(equation)</span><br><span class="line">    end</span><br><span class="line"></span><br><span class="line">    # parse infix equation to postfix</span><br><span class="line">    def parse_to_postfix(equation)</span><br><span class="line">      postfix_equation, stack &#x3D; [], []</span><br><span class="line">      until equation.nil? or equation.size &#x3D;&#x3D; 0</span><br><span class="line">        case equation</span><br><span class="line">        when &#x2F;^(#&#123;REG_VARIABLE&#125;)&#x2F; # string and number</span><br><span class="line">          token &#x3D; $1</span><br><span class="line">          postfix_equation &lt;&lt; token</span><br><span class="line">        when &#x2F;^(#&#123;REG_OPERATOR&#125;)&#x2F; # operator</span><br><span class="line">          token &#x3D; $1</span><br><span class="line">          if stack.empty?</span><br><span class="line">            stack &lt;&lt; token</span><br><span class="line">          else</span><br><span class="line">            while stack.size &gt; 0 &amp;&amp; precedence(token) &lt;&#x3D; precedence(stack.last)</span><br><span class="line">              postfix_equation &lt;&lt; stack.pop</span><br><span class="line">            end</span><br><span class="line">            stack &lt;&lt; token</span><br><span class="line">          end</span><br><span class="line">        when &#x2F;^(#&#123;REG_PARENTHESIS&#125;)&#x2F; # parenthesis</span><br><span class="line">          token &#x3D; $1</span><br><span class="line">          case token</span><br><span class="line">          when &#39;(&#39;</span><br><span class="line">            stack &lt;&lt; token</span><br><span class="line">          when &#39;)&#39;</span><br><span class="line">            postfix_equation &lt;&lt; stack.pop while !stack.empty? &amp;&amp; stack.last !&#x3D; &#39;(&#39;</span><br><span class="line">            raise &quot;mismatched parenthesis &#39;#&#123;token&#125;&#39;&quot; if stack.last !&#x3D; &#39;(&#39;</span><br><span class="line">            stack.pop</span><br><span class="line">          else</span><br><span class="line">            raise &quot;parenthesis &#39;#&#123;token&#125;&#39; wrong&quot;</span><br><span class="line">          end</span><br><span class="line">        else</span><br><span class="line">          raise &quot;unknown token! expression is &#39;#&#123;equation&#125;&#39;&quot;</span><br><span class="line">        end</span><br><span class="line">        equation &#x3D; equation[token.size..-1]</span><br><span class="line">      end</span><br><span class="line"></span><br><span class="line">      until stack.empty?</span><br><span class="line">        raise &quot;mismatched parenthesis &#39;(&#39;&quot; if stack.last &#x3D;&#x3D; &#39;(&#39;</span><br><span class="line">        postfix_equation &lt;&lt; stack.pop</span><br><span class="line">      end</span><br><span class="line">      postfix_equation</span><br><span class="line">    end</span><br><span class="line"></span><br><span class="line">    def exec_postfix(postfix_equation)</span><br><span class="line">      stack &#x3D; []</span><br><span class="line">      postfix_equation.each do |token|</span><br><span class="line">        case token</span><br><span class="line">        when REG_VARIABLE</span><br><span class="line">          stack &lt;&lt; token</span><br><span class="line">        when REG_OPERATOR</span><br><span class="line">          raise &#39;stack size &lt; 2&#39; if stack.size &lt; 2</span><br><span class="line">          param2, param1 &#x3D; stack.pop, stack.pop</span><br><span class="line">          stack &lt;&lt; exec_equation(param1, token, param2)</span><br><span class="line">        end</span><br><span class="line">      end</span><br><span class="line">      raise &#39;final stack size must be 1&#39; if stack.size !&#x3D; 1</span><br><span class="line">      stack.first</span><br><span class="line">    end</span><br><span class="line"></span><br><span class="line">    def precedence(operator)</span><br><span class="line">      result &#x3D; PRECEDENCE.index &#123; |group| group.include?(operator) &#125;</span><br><span class="line">      raise &quot;unknown operator &#39;#&#123;op&#125;&#39;&quot; if result.nil?</span><br><span class="line">      result</span><br><span class="line">    end</span><br><span class="line"></span><br><span class="line">    def exec_equation(param1, operator, param2)</span><br><span class="line">      case operator</span><br><span class="line">      when &#39;+&#39;</span><br><span class="line">        return param1 + param2</span><br><span class="line">      when &#39;-&#39;</span><br><span class="line">        return param1[0, param1.size - param2.to_i] || &#39;&#39;</span><br><span class="line">      when &#39;^&#39;</span><br><span class="line">        return param1 * param2.to_i</span><br><span class="line">      else</span><br><span class="line">        raise &quot;operator &#39;#&#123;operator&#125;&#39; wrong&quot;</span><br><span class="line">      end</span><br><span class="line">    end</span><br><span class="line">  end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">print(&quot;#&#123;EquationParser.exec gets.chomp&#125;\n&quot;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
        <tag>算法</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>【算法】4 Sum 问题</title>
    <url>/posts/5203/</url>
    <content><![CDATA[<blockquote>
<p>Given an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.</p>
</blockquote>
<blockquote>
<p>Note:<br>Elements in a quadruplet (a,b,c,d) must be in non-descending order. (ie, a ≤ b ≤ c ≤ d)<br>The solution set must not contain duplicate quadruplets.<br>    For example, given array S = {1 0 -1 0 -2 2}, and target = 0.</p>
</blockquote>
<blockquote>
<p>   A solution set is:<br>    (-1,  0, 0, 1)<br>    (-2, -1, 1, 2)<br>    (-2,  0, 0, 2)</p>
</blockquote>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    vector&lt;vector&lt;int&gt;&gt; fourSum(vector&lt;int&gt;&amp; nums, int target) &#123;</span><br><span class="line">        vector&lt;vector&lt;int&gt;&gt; results;</span><br><span class="line"></span><br><span class="line">        sort(nums.begin(), nums.end());</span><br><span class="line"></span><br><span class="line">        int size &#x3D; nums.size();</span><br><span class="line">        for(int i &#x3D; 0; i &lt; size - 3; ++i) &#123;</span><br><span class="line">            if(i &gt; 0 &amp;&amp; nums[i] &#x3D;&#x3D; nums[i-1]) continue;</span><br><span class="line">            if(nums[i]+nums[i+1]+nums[i+2]+nums[i+3]&gt;target) break;</span><br><span class="line">            if(nums[i]+nums[size-3]+nums[size-2]+nums[size-1]&lt;target) continue;</span><br><span class="line"></span><br><span class="line">            vector&lt;int&gt; tmpVec(nums.begin() + i + 1, nums.end());</span><br><span class="line">            threeSum(tmpVec, target - nums[i], results, nums[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return results;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void threeSum(vector&lt;int&gt;&amp; nums, int target, vector&lt;vector&lt;int&gt;&gt; &amp;results, int d) &#123;</span><br><span class="line"></span><br><span class="line">        int size &#x3D; nums.size();</span><br><span class="line">        for(int i &#x3D; 0; i &lt; size - 2; ++i) &#123;</span><br><span class="line">            if ( i &gt; 0 &amp;&amp; (nums[i] &#x3D;&#x3D; nums[i-1]) ) continue;</span><br><span class="line">            int j &#x3D; i + 1, k &#x3D; size - 1;</span><br><span class="line">            while( j &lt; k) &#123;</span><br><span class="line"></span><br><span class="line">                while ( j &gt; i + 1 &amp;&amp; nums[j] &#x3D;&#x3D; nums[j - 1]) &#123;</span><br><span class="line">                    ++j;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                while ( k &lt; size - 1 &amp;&amp; nums[k] &#x3D;&#x3D; nums[k + 1]) &#123;</span><br><span class="line">                    --k;</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                if (j &gt;&#x3D; k) break;</span><br><span class="line"></span><br><span class="line">                int a &#x3D; nums[i], b &#x3D; nums[j], c &#x3D; nums[k];</span><br><span class="line"></span><br><span class="line">                int sum &#x3D; a + b + c;</span><br><span class="line">                if (sum &#x3D;&#x3D; target) &#123;</span><br><span class="line">                    vector&lt;int&gt; result &#123;d, a, b, c&#125;;</span><br><span class="line">                    results.push_back(result);</span><br><span class="line"></span><br><span class="line">                    ++j;</span><br><span class="line">                    --k;</span><br><span class="line">                &#125;</span><br><span class="line">                else if(sum &lt; target)&#123;</span><br><span class="line">                    ++j;</span><br><span class="line">                &#125;</span><br><span class="line">                else &#123;</span><br><span class="line">                    --k;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
        <tag>算法</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>【算法】Two Sum 问题</title>
    <url>/posts/10423/</url>
    <content><![CDATA[<blockquote>
<p>Given an array of integers, return indices of the two numbers such that they add up to a specific target.</p>
</blockquote>
<blockquote>
<p>You may assume that each input would have exactly one solution.</p>
</blockquote>
<blockquote>
<p>Example:<br>Given nums = [2, 7, 11, 15], target = 9,</p>
</blockquote>
<blockquote>
<p>Because nums[0] + nums[1] = 2 + 7 = 9,<br>return [0, 1].<br>UPDATE (2016/2/13):<br>The return format had been changed to zero-based indices. Please read the above updated description carefully.</p>
</blockquote>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    vector&lt;int&gt; twoSum(vector&lt;int&gt;&amp; nums, int target) &#123;</span><br><span class="line">        unordered_map&lt;int, int&gt; record;</span><br><span class="line">        int size &#x3D; nums.size();</span><br><span class="line">        for (auto i &#x3D; 0; i &lt; size; ++i) &#123;</span><br><span class="line">            auto item &#x3D; record.find(target - nums[i]);</span><br><span class="line">            if (item !&#x3D; record.end()) &#123;</span><br><span class="line">                return &#123;item-&gt;second, i&#125;;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            record[nums[i]] &#x3D; i;</span><br><span class="line">        &#125;</span><br><span class="line">        return &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
        <tag>算法</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>【算法】Three Sum 问题</title>
    <url>/posts/34559/</url>
    <content><![CDATA[<blockquote>
<p>Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.</p>
</blockquote>
<blockquote>
<p>Note:<br>Elements in a triplet (a,b,c) must be in non-descending order. (ie, a ≤ b ≤ c)<br>The solution set must not contain duplicate triplets.<br>For example, given array S = {-1 0 1 2 -1 -4},</p>
</blockquote>
<blockquote>
<p>A solution set is:<br>(-1, 0, 1)<br>(-1, -1, 2)</p>
</blockquote>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    vector&lt;vector&lt;int&gt;&gt; threeSum(vector&lt;int&gt;&amp; nums) &#123;</span><br><span class="line"></span><br><span class="line">        vector&lt;vector&lt;int&gt;&gt; results;</span><br><span class="line"></span><br><span class="line">        sort(nums.begin(), nums.end());</span><br><span class="line"></span><br><span class="line">        int size &#x3D; nums.size();</span><br><span class="line">        for(int i &#x3D; 0; i &lt; size - 2; ++i) &#123;</span><br><span class="line">            if ( i &gt; 0 &amp;&amp; (nums[i] &#x3D;&#x3D; nums[i-1]) ) continue;</span><br><span class="line"></span><br><span class="line">            int j &#x3D; i + 1, k &#x3D; size - 1;</span><br><span class="line">            while( j &lt; k) &#123;</span><br><span class="line">                int a &#x3D; nums[i], b &#x3D; nums[j], c &#x3D; nums[k];</span><br><span class="line"></span><br><span class="line">                int sum &#x3D; a + b + c;</span><br><span class="line">                if (sum &#x3D;&#x3D; 0) &#123;</span><br><span class="line">                    vector&lt;int&gt; result &#123;a, b, c&#125;;</span><br><span class="line">                    results.push_back(result);</span><br><span class="line"></span><br><span class="line">                    ++j;</span><br><span class="line">                    --k;</span><br><span class="line">                &#125;</span><br><span class="line">                else if(sum &lt; 0)&#123;</span><br><span class="line">                    ++j;</span><br><span class="line">                &#125;</span><br><span class="line">                else &#123;</span><br><span class="line">                    --k;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                while ( nums[j] &#x3D;&#x3D; nums[j - 1] &amp;&amp; j &lt; k) &#123;</span><br><span class="line">                    ++j;</span><br><span class="line">                &#125;</span><br><span class="line">                while ( nums[k] &#x3D;&#x3D; nums[k + 1] &amp;&amp; j &lt; k) &#123;</span><br><span class="line">                    --k;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return results;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
        <tag>算法</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>【Ruby】Block/Proc/lambda的区别</title>
    <url>/posts/59419/</url>
    <content><![CDATA[<p>在Ruby语言中，Block 与 Proc 是不同的概念。而 Proc 和 lambda 虽然都是 Proc 对象，在进行处理时会有若干差别。</p>
<h3 id="Block-和-Proc-new"><a href="#Block-和-Proc-new" class="headerlink" title="Block 和 Proc.new"></a>Block 和 Proc.new</h3><p>Block 是代码块，而 Proc 是对象。参数列别中最多只能有一个 Block ，但是可以有多个 Proc 或 Lambda。</p>
<p>Block 是指通过 do~end 或 {} 来进行传递的参数，通常与 yield 来搭配进行使用。<br>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def method_block</span><br><span class="line">    yield</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">method_block &#123; p &quot;block&quot; &#125;</span><br><span class="line">#&#x3D;&gt; &quot;block&quot;</span><br></pre></td></tr></table></figure>

<p>将 Block 进行对象化就是 Proc.new 。<br>Proc 对象一般通过 call 方法来进行调用：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def method_block(&amp;block)</span><br><span class="line">    block.call</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">method_block &#123; p &quot;block&quot; &#125;</span><br><span class="line"></span><br><span class="line">#&#x3D;&gt; &quot;block&quot;</span><br></pre></td></tr></table></figure>

<p>Proc.new 使用参数的情况：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">proc &#x3D; Proc.new&#123; |a| p a * 2 &#125;</span><br><span class="line">proc.call(2)</span><br><span class="line">#&#x3D;&gt; 4</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="Proc-new-和-lambda"><a href="#Proc-new-和-lambda" class="headerlink" title="Proc.new 和 lambda"></a>Proc.new 和 lambda</h3><p>lambda 函数是用于生成 Proc 对象的函数，与 Proc.new 一样通过 call 来进行调用。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def method_lambda</span><br><span class="line">    lambda1 &#x3D; lambda&#123; p &quot;lambda&quot; &#125;</span><br><span class="line">    lambda1.call</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">method_lambda</span><br><span class="line"></span><br><span class="line">#&#x3D;&gt; &quot;lambda&quot;</span><br></pre></td></tr></table></figure>

<p>但与 Proc.new 相比，两者有两点不通</p>
<h4 id="参数数目"><a href="#参数数目" class="headerlink" title="参数数目"></a>参数数目</h4><p>lambda 会检查参数的个数，如果参数个数与规定参数个数不同的情况下，lambda 会报错。而 Proc.new 则不会进行参数检查。<br>Proc.new的情况：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">proc &#x3D; Proc.new&#123; |a,b,c| p &quot;#&#123;a&#125;,#&#123;b&#125;,#&#123;c&#125;&quot;  &#125;</span><br><span class="line">proc.call(2, 4)</span><br><span class="line">#&#x3D;&gt; 2,4,nil</span><br></pre></td></tr></table></figure>
<p>lambda的情况下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lambda1 &#x3D; lambda&#123; |a,b,c| p &quot;#&#123;a&#125;,#&#123;b&#125;,#&#123;c&#125;&quot;  &#125;</span><br><span class="line">lambda1.call(2, 4)</span><br><span class="line">#&#x3D;&gt; wrong number of arguments (2 for 3) (ArgumentError)</span><br></pre></td></tr></table></figure>

<h4 id="return-与-break-等关键字的执行"><a href="#return-与-break-等关键字的执行" class="headerlink" title="return 与 break 等关键字的执行"></a>return 与 break 等关键字的执行</h4><p>Proc.new的情况下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def method_proc</span><br><span class="line">    proc &#x3D; Proc.new &#123; return p &quot;proc&quot; &#125;</span><br><span class="line">    proc.call</span><br><span class="line">    p &quot;method_proc&quot;</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">#&#x3D;&gt;&quot;proc&quot;</span><br></pre></td></tr></table></figure>

<p>lambda的情况下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def method_lambda</span><br><span class="line">    lambda1 &#x3D; lambda&#123; return p &quot;lambda&quot; &#125;</span><br><span class="line">    lambda1.call</span><br><span class="line">    p &quot;method_lambda&quot;</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">method_lambda</span><br><span class="line"></span><br><span class="line">#&#x3D;&gt;&quot;lambda&quot;</span><br><span class="line">#  &quot;method_lambda&quot;</span><br></pre></td></tr></table></figure>

<p>在 <code>Proc.new</code> 的情况下， <code>return</code> 会从函数自身 method_proc 中跳出。而 <code>lambda</code> 则会回到 <code>method_lambda</code> 中。</p>
]]></content>
      <categories>
        <category>程序开发</category>
      </categories>
      <tags>
        <tag>Ruby</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 命令(04)：ls 命令</title>
    <url>/posts/40908/</url>
    <content><![CDATA[<p><code>ls</code> 命令是 linux 下常用命令。ls 命令就是 list 的缩写，用以查看 linux 文件夹包含的文件内容和文件信息。</p>
<a id="more"></a>

<h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ls [选项] [目录名]</span><br></pre></td></tr></table></figure>

<h3 id="命令目标"><a href="#命令目标" class="headerlink" title="命令目标"></a>命令目标</h3><p>列出目标目录中所有的子目录和文件。</p>
<h3 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h3><table>
<thead>
<tr>
<th align="left">命令参数</th>
<th align="left">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-a</td>
<td align="left">列出目录下的所有文件，包含[.a]开头的隐藏文件。</td>
</tr>
<tr>
<td align="left">-A</td>
<td align="left">同 <code>-a</code>，但不显示 [.当前文件夹] 和 [..上层文件夹] 。</td>
</tr>
<tr>
<td align="left">-d</td>
<td align="left">文件夹下自身信息表示</td>
</tr>
<tr>
<td align="left">-F</td>
<td align="left">文件的种类表示（<code>/</code>文件夹、<code>*</code>执行文件、<code>@</code> symbol link）</td>
</tr>
<tr>
<td align="left">-i</td>
<td align="left">node 号显示</td>
</tr>
<tr>
<td align="left">-l</td>
<td align="left">显示文件的详细信息</td>
</tr>
<tr>
<td align="left">-t</td>
<td align="left">按照时间顺序显示</td>
</tr>
<tr>
<td align="left">-h</td>
<td align="left">指定单位</td>
</tr>
</tbody></table>
<h3 id="使用实例"><a href="#使用实例" class="headerlink" title="使用实例"></a>使用实例</h3><h4 id="显示-home-lpic-下文件"><a href="#显示-home-lpic-下文件" class="headerlink" title="显示 /home/lpic 下文件"></a>显示 <code>/home/lpic</code> 下文件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ls &#x2F;home&#x2F;lpic</span><br><span class="line">sample1.txt</span><br><span class="line">sample2.txt</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Linux 命令</tag>
      </tags>
  </entry>
  <entry>
    <title>【Mac】显示隐藏文件</title>
    <url>/posts/33115/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 显示隐藏文件</span><br><span class="line">defaults write com.apple.finder AppleShowAllFiles Yes &amp;&amp; killall Finder</span><br><span class="line"></span><br><span class="line"># 不显示隐藏文件</span><br><span class="line">defaults write com.apple.finder AppleShowAllFiles No &amp;&amp; killall Finder</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>【Mac】通过 Homebrew 导入 zsh &amp; oh-my-zsh</title>
    <url>/posts/23750/</url>
    <content><![CDATA[<p><code>zsh</code> 是一款被人称之为终极终端的 Shell 。与传统的 bash 相比， <code>zsh</code> 的可配置性强，用户可以自定义配置，个性化强，补全更强大，为我们提供了很多方便的功能。</p>
<h3 id="导入-Homebrew"><a href="#导入-Homebrew" class="headerlink" title="导入 Homebrew"></a>导入 Homebrew</h3><p>首先确认 XCode 已被装入系统后，安装 Homebrew</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ruby -e &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Homebrew&#x2F;install&#x2F;master&#x2F;install)&quot;</span><br></pre></td></tr></table></figure>

<p>确认安装与配置是否正确</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew doctor</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="安装-zsh"><a href="#安装-zsh" class="headerlink" title="安装 zsh"></a>安装 zsh</h3><p>Mac 默认已安装了 <code>zsh</code>，首先我们去人默认安装的版本：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ zsh --version</span><br><span class="line">zsh 5.0.8 (x86_64-apple-darwin14.4.0)</span><br></pre></td></tr></table></figure>

<p>由于大部分情况下默认安装的 zsh 版本较老，因此我们需要通过 Homebrew 来安装最新版本的 zsh。</p>
<h4 id="确认最新版本的-zsh"><a href="#确认最新版本的-zsh" class="headerlink" title="确认最新版本的 zsh"></a>确认最新版本的 zsh</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ brew info zsh</span><br><span class="line">zsh: stable 5.1.1 (bottled)</span><br><span class="line">UNIX shell (command interpreter)</span><br><span class="line">http:&#x2F;&#x2F;www.zsh.org&#x2F;</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;zsh&#x2F;5.0.8 (1113 files, 11M) *</span><br><span class="line">  Poured from bottle</span><br><span class="line">From: https:&#x2F;&#x2F;github.com&#x2F;Homebrew&#x2F;homebrew&#x2F;blob&#x2F;master&#x2F;Library&#x2F;Formula&#x2F;zsh.rb</span><br><span class="line">&#x3D;&#x3D;&gt; Dependencies</span><br><span class="line">Required: gdbm ✔, pcre ✔</span><br><span class="line">&#x3D;&#x3D;&gt; Options</span><br><span class="line">--without-etcdir</span><br><span class="line">	Disable the reading of Zsh rc files in &#x2F;etc</span><br><span class="line">&#x3D;&#x3D;&gt; Caveats</span><br><span class="line">Add the following to your zshrc to access the online help:</span><br><span class="line">  unalias run-help</span><br><span class="line">  autoload run-help</span><br><span class="line">  HELPDIR&#x3D;&#x2F;usr&#x2F;local&#x2F;share&#x2F;zsh&#x2F;help</span><br></pre></td></tr></table></figure>

<h4 id="安装最新版的-zsh"><a href="#安装最新版的-zsh" class="headerlink" title="安装最新版的 zsh"></a>安装最新版的 zsh</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ brew install --without-etcdir zsh</span><br></pre></td></tr></table></figure>

<h4 id="安装自动补完插件-zsh-completions"><a href="#安装自动补完插件-zsh-completions" class="headerlink" title="安装自动补完插件 zsh-completions"></a>安装自动补完插件 <code>zsh-completions</code></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew install zsh-completions</span><br></pre></td></tr></table></figure>

<h4 id="配置-zsh-completions"><a href="#配置-zsh-completions" class="headerlink" title="配置 zsh-completions"></a>配置 <code>zsh-completions</code></h4><p>打开 <code>.zshrc</code>，将 <code>zsh-completions</code> 设置为有效：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fpath&#x3D;(&#x2F;path&#x2F;to&#x2F;homebrew&#x2F;share&#x2F;zsh-completions $fpath)</span><br><span class="line"></span><br><span class="line">autoload -U compinit</span><br><span class="line">compinit -u</span><br></pre></td></tr></table></figure>

<h3 id="将-zsh-设置为默认-Shell"><a href="#将-zsh-设置为默认-Shell" class="headerlink" title="将 zsh 设置为默认 Shell"></a>将 <code>zsh</code> 设置为默认 Shell</h3><p>确认当前默认 Shell</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ dscl localhost -read Local&#x2F;Default&#x2F;Users&#x2F;$USER UserShell</span><br><span class="line">UserShell: &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>

<p>将 <code>zsh</code> 的路径添加至 <code>/etc/shells</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ vi &#x2F;etc&#x2F;shells</span><br><span class="line"></span><br><span class="line"># List of acceptable shells for chpass(1).</span><br><span class="line"># Ftpd will not allow users to connect who are not using</span><br><span class="line"># one of these shells.</span><br><span class="line"></span><br><span class="line">&#x2F;bin&#x2F;bash</span><br><span class="line">&#x2F;bin&#x2F;csh</span><br><span class="line">&#x2F;bin&#x2F;ksh</span><br><span class="line">&#x2F;bin&#x2F;sh</span><br><span class="line">&#x2F;bin&#x2F;tcsh</span><br><span class="line">&#x2F;bin&#x2F;zsh</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;bin&#x2F;zsh # 追加</span><br></pre></td></tr></table></figure>

<p>使用 <code>zsh</code> 命令更改默认 Shell</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ chsh -s &#x2F;usr&#x2F;local&#x2F;bin&#x2F;zsh</span><br><span class="line">Changing shell for achillessatan.</span><br><span class="line">Password for achillessatan:[パスワードを入力]</span><br></pre></td></tr></table></figure>

<p>确认默认 Shell</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ dscl localhost -read Local&#x2F;Default&#x2F;Users&#x2F;$USER UserShell</span><br><span class="line">UserShell: &#x2F;usr&#x2F;local&#x2F;bin&#x2F;zsh</span><br></pre></td></tr></table></figure>

<h3 id="导入-oh-my-zsh"><a href="#导入-oh-my-zsh" class="headerlink" title="导入 oh-my-zsh"></a>导入 <code>oh-my-zsh</code></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ sh -c &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.github.com&#x2F;robbyrussell&#x2F;oh-my-zsh&#x2F;master&#x2F;tools&#x2F;install.sh)&quot;</span><br></pre></td></tr></table></figure>

<p><code>oh-my-zsh</code> 有很多很强大的主题，具体可在 github 进行查看<br><a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Themes" target="_blank" rel="noopener">Themes · robbyrussell/oh-my-zsh Wiki · GitHub</a></p>
<h3 id="zsh-的初始化设定追加"><a href="#zsh-的初始化设定追加" class="headerlink" title="zsh 的初始化设定追加"></a>zsh 的初始化设定追加</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim ~&#x2F;.zshrc</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Path to your oh-my-zsh installation.</span><br><span class="line">export ZSH&#x3D;~&#x2F;.oh-my-zsh</span><br><span class="line"></span><br><span class="line">ZSH_THEME&#x3D;&quot;candy&quot;</span><br><span class="line"></span><br><span class="line">plugins&#x3D;(brew brew-cask cdd gem git rbenv vagrant)</span><br><span class="line"></span><br><span class="line">export PATH&#x3D;&quot;&#x2F;usr&#x2F;local&#x2F;sbin:$PATH&quot;</span><br><span class="line"></span><br><span class="line">source $ZSH&#x2F;oh-my-zsh.sh</span><br></pre></td></tr></table></figure>

<p>插件一览：<br><a href="https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins" target="_blank" rel="noopener">oh-my-zsh/plugins at master · robbyrussell/oh-my-zsh · GitHub</a></p>
<p>使设置生效</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ source ~&#x2F;.zshrc</span><br></pre></td></tr></table></figure>

<p>最后根据 <code>zsh-completions</code> 的官网， 将 <code>zsh-completions</code> 重新编译</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ rm -f ~&#x2F;.zcompdump; compinit</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>环境配置</tag>
        <tag>Shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 命令(03)：man 命令</title>
    <url>/posts/62973/</url>
    <content><![CDATA[<p>linux帮助文件(man-pages，手册页)一般放在，<code>$MANPATH/man</code> (<code>/usr/share/man</code>) 目录下面，而且按照领域与语言放到不同的目录里面。要找那个命令使用相关手册，只要我们按照领域区分，到对于目录去查看与命令对应的文件解压,cat file 就可以看到一篇详细的文档了。 但是与快速索引查找帮助相差太远了。linux有一个很好工具，就是man 它会按照系统设计帮助目录，在各个文档里面查询，并且显示内容。接下来，主要讲一下这个命令使用以及配置说明，还有一些使用实例。</p>
<a id="more"></a>

<h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">man [-adfhktwW] [section] [-M path] [-P pager] [-S list] [-m system] [-p string] title..</span><br></pre></td></tr></table></figure>

<h3 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h3><p>man命令：可以通过一些参数，快速查询linux帮助手册，并且格式化显示。</p>
<h3 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h3><table>
<thead>
<tr>
<th align="left">命令参数</th>
<th align="left">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-a</td>
<td align="left">显示所有匹配项</td>
</tr>
<tr>
<td align="left">-d</td>
<td align="left">显示man查照手册文件时候，搜索路径信息,不显示手册页内容</td>
</tr>
<tr>
<td align="left">-D</td>
<td align="left">同-d,显示手册页内容</td>
</tr>
<tr>
<td align="left"><strong>-f</strong></td>
<td align="left"><strong>同命令 <code>whatis</code> ，将在 <code>whatis</code> 数据库查找以关键字开同的帮助索引信息</strong></td>
</tr>
<tr>
<td align="left">-h</td>
<td align="left">显示帮助信息</td>
</tr>
<tr>
<td align="left"><strong>-k</strong></td>
<td align="left"><strong>同命令 <code>apropos</code> 将搜索 <code>whatis</code> 数据库，模糊查找关键字</strong></td>
</tr>
<tr>
<td align="left">-S</td>
<td align="left">list    指定搜索的领域及顺序 如：-S 1:1p httpd 将搜索man1然后 man1p目录</td>
</tr>
<tr>
<td align="left">-t</td>
<td align="left">使用troff 命令格式化输出手册页 默认：groff输出格式页</td>
</tr>
<tr>
<td align="left">-w</td>
<td align="left">不带搜索title 打印 <code>manpath</code> 变量 带title关键字 打印找到手册文件路径,默认搜索一个文件后停止</td>
</tr>
<tr>
<td align="left">-W</td>
<td align="left">同-w</td>
</tr>
<tr>
<td align="left">section</td>
<td align="left">搜索领域【限定手册类型】默认查找所有手册</td>
</tr>
</tbody></table>
<h3 id="范围定位"><a href="#范围定位" class="headerlink" title="范围定位"></a>范围定位</h3><table>
<thead>
<tr>
<th align="left">命令参数</th>
<th align="left">范围</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1</td>
<td align="left">表示用户命令</td>
</tr>
<tr>
<td align="left">2</td>
<td align="left">表示系统调用</td>
</tr>
<tr>
<td align="left">3</td>
<td align="left">表示C语言库函数</td>
</tr>
<tr>
<td align="left">4</td>
<td align="left">表示设备或特殊文件</td>
</tr>
<tr>
<td align="left">5</td>
<td align="left">表示文件格式和规则</td>
</tr>
<tr>
<td align="left">6</td>
<td align="left">表示游戏及其他</td>
</tr>
<tr>
<td align="left">7</td>
<td align="left">表示宏、包及其他杂项</td>
</tr>
<tr>
<td align="left">8</td>
<td align="left">表示系统管理员相关的命令</td>
</tr>
</tbody></table>
<h3 id="建立-man-数据库"><a href="#建立-man-数据库" class="headerlink" title="建立 man 数据库"></a>建立 <code>man</code> 数据库</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">makewhatis</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Linux 命令</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 命令(02)：scp 命令</title>
    <url>/posts/30149/</url>
    <content><![CDATA[<p><code>scp</code> 是 <code>secure copy</code> 的简写，用于在 Linux 下进行远程拷贝文件的命令，和它类似的命令有 cp，不过 cp 只是在本机进行拷贝不能跨服务器，而且 scp 传输是加密的。可能会稍微影响一下速度。当你服务器硬盘变为只读 read only system 时，用 scp 可以帮你把文件移出来。另外，scp 还非常不占资源，<strong>不会提高多少系统负荷</strong>，在这一点上，rsync 就远远不及它了。<strong>虽然 rsync 比 scp 会快一点，但当小文件众多的情况下，rsync 会导致硬盘 I/O 非常高</strong>，而 scp 基本不影响系统正常使用。</p>
<a id="more"></a>

<h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scp [参数] [原路径] [目标路径]</span><br></pre></td></tr></table></figure>

<h3 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h3><p>scp是 secure copy的缩写, scp是linux系统下基于ssh登陆进行安全的远程文件拷贝命令。linux的scp命令可以在linux服务器之间复制文件和目录。</p>
<h3 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h3><table>
<thead>
<tr>
<th align="left">命令参数</th>
<th align="left">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-1</td>
<td align="left">强制scp命令使用协议ssh1</td>
</tr>
<tr>
<td align="left">-2</td>
<td align="left">强制scp命令使用协议ssh2</td>
</tr>
<tr>
<td align="left">-4</td>
<td align="left">强制scp命令只使用IPv4寻址</td>
</tr>
<tr>
<td align="left">-6</td>
<td align="left">强制scp命令只使用IPv6寻址</td>
</tr>
<tr>
<td align="left">-B</td>
<td align="left">使用批处理模式（传输过程中不询问传输口令或短语）</td>
</tr>
<tr>
<td align="left">-C</td>
<td align="left">允许压缩。（将-C标志传递给ssh，从而打开压缩功能）</td>
</tr>
<tr>
<td align="left">-p</td>
<td align="left">保留原文件的修改时间，访问时间和访问权限。</td>
</tr>
<tr>
<td align="left">-q</td>
<td align="left">不显示传输进度条。</td>
</tr>
<tr>
<td align="left">-r</td>
<td align="left">递归复制整个目录。</td>
</tr>
<tr>
<td align="left">-v</td>
<td align="left">详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。</td>
</tr>
<tr>
<td align="left">-c</td>
<td align="left">cipher  以cipher将数据传输进行加密，这个选项将直接传递给ssh。</td>
</tr>
<tr>
<td align="left">-F</td>
<td align="left">ssh_config  指定一个替代的ssh配置文件，此参数直接传递给ssh。</td>
</tr>
<tr>
<td align="left">-i</td>
<td align="left">identity_file  从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。</td>
</tr>
<tr>
<td align="left">-l</td>
<td align="left">limit  限定用户所能使用的带宽，以Kbit/s为单位。</td>
</tr>
<tr>
<td align="left">-o</td>
<td align="left">ssh_option  如果习惯于使用ssh_config(5)中的参数传递方式，</td>
</tr>
<tr>
<td align="left">-P</td>
<td align="left">port  注意是大写的P, port是指定数据传输用到的端口号</td>
</tr>
<tr>
<td align="left">-S</td>
<td align="left">program  指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。</td>
</tr>
</tbody></table>
<h3 id="使用实例"><a href="#使用实例" class="headerlink" title="使用实例"></a>使用实例</h3><h4 id="从本地服务器复制到远程服务器"><a href="#从本地服务器复制到远程服务器" class="headerlink" title="从本地服务器复制到远程服务器"></a>从本地服务器复制到远程服务器</h4><h5 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scp local_file remote_username@remote_ip:remote_folder  </span><br><span class="line">scp local_file remote_username@remote_ip:remote_file  </span><br><span class="line">scp local_file remote_ip:remote_folder  </span><br><span class="line">scp local_file remote_ip:remote_file</span><br></pre></td></tr></table></figure>

<p>第1,2个指定了用户名，命令执行后需要输入用户密码，第1个仅指定了远程的目录，文件名字不变，第2个指定了文件名<br>第3,4个没有指定用户名，命令执行后需要输入用户名和密码，第3个仅指定了远程的目录，文件名字不变，第4个指定了文件名   </p>
<h5 id="复制目录"><a href="#复制目录" class="headerlink" title="复制目录"></a>复制目录</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scp -r local_folder remote_username@remote_ip:remote_folder   </span><br><span class="line">scp -r local_folder remote_ip:remote_folder</span><br></pre></td></tr></table></figure>

<p>第1个指定了用户名，命令执行后需要输入用户密码</p>
<h4 id="从远程服务器复制到本地服务器"><a href="#从远程服务器复制到本地服务器" class="headerlink" title="从远程服务器复制到本地服务器"></a>从远程服务器复制到本地服务器</h4><p>从远程复制到本地的scp命令与上面的命令雷同，只要将从本地复制到远程的命令后面2个参数互换顺序就行了。</p>
<h5 id="从远处复制文件到本地目录"><a href="#从远处复制文件到本地目录" class="headerlink" title="从远处复制文件到本地目录"></a>从远处复制文件到本地目录</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scp root@192.168.120.204:&#x2F;opt&#x2F;soft&#x2F;nginx-0.5.38.tar.gz &#x2F;opt&#x2F;soft&#x2F;</span><br></pre></td></tr></table></figure>

<p>说明：<br>从192.168.120.204机器上的/opt/soft/的目录中下载nginx-0.5.38.tar.gz 文件到本地/opt/soft/目录中</p>
<h5 id="从远处复制到本地"><a href="#从远处复制到本地" class="headerlink" title="从远处复制到本地"></a>从远处复制到本地</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scp -r root@192.168.120.204:&#x2F;opt&#x2F;soft&#x2F;mongodb &#x2F;opt&#x2F;soft&#x2F;</span><br></pre></td></tr></table></figure>

<p>说明：<br>从192.168.120.204机器上的/opt/soft/中下载mongodb 目录到本地的/opt/soft/目录来。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Linux 命令</tag>
      </tags>
  </entry>
  <entry>
    <title>【Linux】vi/vim 对多文件进行操作</title>
    <url>/posts/16856/</url>
    <content><![CDATA[<h3 id="打开多个文件"><a href="#打开多个文件" class="headerlink" title="打开多个文件"></a>打开多个文件</h3><h4 id="vim-还没有启动时"><a href="#vim-还没有启动时" class="headerlink" title="vim 还没有启动时"></a>vim 还没有启动时</h4><p>在终端内输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim file1 file2</span><br></pre></td></tr></table></figure>

<h4 id="vim-已经启动"><a href="#vim-已经启动" class="headerlink" title="vim 已经启动"></a>vim 已经启动</h4><p>输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">:open file</span><br></pre></td></tr></table></figure>

<p>可以再打开一个文件，并且此时对vim里会显示出file文件的内容。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">:e ..&#x2F;myFile.pl</span><br></pre></td></tr></table></figure>

<ol>
<li>vim 文件名：普通方式打开文档</li>
<li>vim + n 文件名：打开文档后，定位第 n 行</li>
<li>vim，进入 vim 界面之后使用命令 :e 文档名 打开文档，此方式可以在编辑一个文档的同事打开另一个文档。</li>
</ol>
<a id="more"></a>

<h3 id="同是显示多个文档"><a href="#同是显示多个文档" class="headerlink" title="同是显示多个文档"></a>同是显示多个文档</h3><p>:split 简写 :sp<br>:vsplit 简写 :vsp</p>
<p>显示缓存 :ls</p>
<h3 id="在文件之间切换"><a href="#在文件之间切换" class="headerlink" title="在文件之间切换"></a>在文件之间切换</h3><h4 id="文件间切换"><a href="#文件间切换" class="headerlink" title="文件间切换"></a>文件间切换</h4><p>Ctrl+6 下一个文件<br>:bn 下一个文件<br>:bp 上一个文件<br>对于用 splite/vsplite 在多个窗口中打开的文件，这种方法只会在当前窗格中切换不同的文件。</p>
<h4 id="在窗格间切换的方法"><a href="#在窗格间切换的方法" class="headerlink" title="在窗格间切换的方法"></a>在窗格间切换的方法</h4><p>Ctrl + w + 方向键 ：切换到前/下/上/后一个窗格<br>Ctrl + w + h/j/k/l ：同上<br>Ctrl + ww ：依次向后切换到下一个窗格中</p>
<h4 id="多文档编辑命令"><a href="#多文档编辑命令" class="headerlink" title="多文档编辑命令"></a>多文档编辑命令</h4><table>
<thead>
<tr>
<th align="left">命令</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">:n</td>
<td align="left">编辑下一个文档</td>
</tr>
<tr>
<td align="left">:2n</td>
<td align="left">编辑下两个文档</td>
</tr>
<tr>
<td align="left">:N</td>
<td align="left">编辑上一个文档</td>
</tr>
<tr>
<td align="left">:e 文档名</td>
<td align="left">vim后，不离开 vim 的情形下打开其他文档。</td>
</tr>
<tr>
<td align="left">:e# 或 Ctrl+ˆ</td>
<td align="left">编辑上一个文档,用于两个文档相互交换编辑时使用。?# 代表的是编辑前一次编辑的文档</td>
</tr>
<tr>
<td align="left">:files 或 :buffers 或 :ls</td>
<td align="left">可以列出目前 缓冲区 中的所有文档。加号 + 表示 缓冲区已经被修改过了。＃代表上一次编辑的文档，%是目前正在编辑中的文档</td>
</tr>
<tr>
<td align="left">:b 文档名或编号</td>
<td align="left">移至该文档。</td>
</tr>
<tr>
<td align="left">:f  或 Ctrl+g</td>
<td align="left">显示当前正在编辑的文档名称。</td>
</tr>
<tr>
<td align="left">:f 檔名</td>
<td align="left">改变编辑中的文档名。(file)</td>
</tr>
</tbody></table>
<h4 id="多文件切换"><a href="#多文件切换" class="headerlink" title="多文件切换"></a>多文件切换</h4><ol>
<li>通过 vim 打开多个文件</li>
<li>‘:ls’ 查看当前打开的 ‘buffer’</li>
<li>‘:b num’ 切换文件，其中 num 为 buffer list 中的编号</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title>【Linux】著名端口号</title>
    <url>/posts/9678/</url>
    <content><![CDATA[<a id="more"></a>

<table>
<thead>
<tr>
<th align="center">端口号码 / 层</th>
<th align="left">名称</th>
<th align="left">注释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="left">tcpmux</td>
<td align="left">TCP 端口服务多路复用</td>
</tr>
<tr>
<td align="center">5</td>
<td align="left">rje</td>
<td align="left">远程作业入口</td>
</tr>
<tr>
<td align="center">7</td>
<td align="left">echo</td>
<td align="left">Echo 服务</td>
</tr>
<tr>
<td align="center">9</td>
<td align="left">discard</td>
<td align="left">用于连接测试的空服务</td>
</tr>
<tr>
<td align="center">11</td>
<td align="left">systat</td>
<td align="left">用于列举连接了的端口的系统状态</td>
</tr>
<tr>
<td align="center">13</td>
<td align="left">daytime</td>
<td align="left">给请求主机发送日期和时间</td>
</tr>
<tr>
<td align="center">17</td>
<td align="left">qotd</td>
<td align="left">给连接了的主机发送每日格言</td>
</tr>
<tr>
<td align="center">18</td>
<td align="left">msp</td>
<td align="left">消息发送协议</td>
</tr>
<tr>
<td align="center">19</td>
<td align="left">chargen</td>
<td align="left">字符生成服务；发送无止境的字符流</td>
</tr>
<tr>
<td align="center"><strong>20</strong></td>
<td align="left"><strong>ftp-data</strong></td>
<td align="left"><strong>FTP 数据端口</strong></td>
</tr>
<tr>
<td align="center"><strong>21</strong></td>
<td align="left"><strong>ftp</strong></td>
<td align="left"><strong>文件传输协议（FTP）端口；有时被文件服务协议（FSP）使用</strong></td>
</tr>
<tr>
<td align="center"><strong>22</strong></td>
<td align="left"><strong>ssh</strong></td>
<td align="left"><strong>安全 Shell（SSH）服务</strong></td>
</tr>
<tr>
<td align="center"><strong>23</strong></td>
<td align="left"><strong>telnet</strong></td>
<td align="left"><strong>Telnet 服务</strong></td>
</tr>
<tr>
<td align="center"><strong>25</strong></td>
<td align="left"><strong>smtp</strong></td>
<td align="left"><strong>简单邮件传输协议（SMTP）</strong></td>
</tr>
<tr>
<td align="center">37</td>
<td align="left">time</td>
<td align="left">时间协议</td>
</tr>
<tr>
<td align="center">39</td>
<td align="left">rlp</td>
<td align="left">资源定位协议</td>
</tr>
<tr>
<td align="center">42</td>
<td align="left">nameserver</td>
<td align="left">互联网名称服务</td>
</tr>
<tr>
<td align="center">43</td>
<td align="left">nicname</td>
<td align="left">WHOIS 目录服务</td>
</tr>
<tr>
<td align="center">49</td>
<td align="left">tacacs</td>
<td align="left">用于基于 TCP/IP 验证和访问的终端访问控制器访问控制系统</td>
</tr>
<tr>
<td align="center">50</td>
<td align="left">re-mail-ck</td>
<td align="left">远程邮件检查协议</td>
</tr>
<tr>
<td align="center"><strong>53</strong></td>
<td align="left"><strong>domain</strong></td>
<td align="left"><strong>域名服务（如 BIND）</strong></td>
</tr>
<tr>
<td align="center">63</td>
<td align="left">whois++</td>
<td align="left">WHOIS++，被扩展了的 WHOIS 服务</td>
</tr>
<tr>
<td align="center">67</td>
<td align="left">bootps</td>
<td align="left">引导协议（BOOTP）服务；还被动态主机配置协议（DHCP）服务使用</td>
</tr>
<tr>
<td align="center">68</td>
<td align="left">bootpc</td>
<td align="left">Bootstrap（BOOTP）客户；还被动态主机配置协议（DHCP）客户使用</td>
</tr>
<tr>
<td align="center">69</td>
<td align="left">tftp</td>
<td align="left">小文件传输协议（TFTP）</td>
</tr>
<tr>
<td align="center">70</td>
<td align="left">gopher</td>
<td align="left">Gopher 互联网文档搜寻和检索</td>
</tr>
<tr>
<td align="center">71</td>
<td align="left">netrjs-1</td>
<td align="left">远程作业服务</td>
</tr>
<tr>
<td align="center">72</td>
<td align="left">netrjs-2</td>
<td align="left">远程作业服务</td>
</tr>
<tr>
<td align="center">73</td>
<td align="left">netrjs-3</td>
<td align="left">远程作业服务</td>
</tr>
<tr>
<td align="center">73</td>
<td align="left">netrjs-4</td>
<td align="left">远程作业服务</td>
</tr>
<tr>
<td align="center">79</td>
<td align="left">finger</td>
<td align="left">用于用户联系信息的 Finger 服务</td>
</tr>
<tr>
<td align="center"><strong>80</strong></td>
<td align="left"><strong>http</strong></td>
<td align="left"><strong>用于万维网（WWW）服务的超文本传输协议（HTTP）</strong></td>
</tr>
<tr>
<td align="center">88</td>
<td align="left">kerberos</td>
<td align="left">Kerberos 网络验证系统</td>
</tr>
<tr>
<td align="center">95</td>
<td align="left">supdup</td>
<td align="left">Telnet 协议扩展</td>
</tr>
<tr>
<td align="center">101</td>
<td align="left">hostname</td>
<td align="left">SRI-NIC 机器上的主机名服务</td>
</tr>
<tr>
<td align="center">102</td>
<td align="left">iso-tsap</td>
<td align="left">ISO 开发环境（ISODE）网络应用</td>
</tr>
<tr>
<td align="center">105</td>
<td align="left">csnet-ns</td>
<td align="left">邮箱名称服务器；也被 CSO 名称服务器使用</td>
</tr>
<tr>
<td align="center">107</td>
<td align="left">rtelnet</td>
<td align="left">远程 Telnet</td>
</tr>
<tr>
<td align="center">109</td>
<td align="left">pop2</td>
<td align="left">邮局协议版本2</td>
</tr>
<tr>
<td align="center"><strong>110</strong></td>
<td align="left"><strong>pop3</strong></td>
<td align="left"><strong>邮局协议版本3</strong></td>
</tr>
<tr>
<td align="center">111</td>
<td align="left">sunrpc</td>
<td align="left">用于远程命令执行的远程过程调用（RPC）协议，被网络文件系统（NFS）使用</td>
</tr>
<tr>
<td align="center">113</td>
<td align="left">auth</td>
<td align="left">验证和身份识别协议</td>
</tr>
<tr>
<td align="center">115</td>
<td align="left">sftp</td>
<td align="left">安全文件传输协议（SFTP）服务</td>
</tr>
<tr>
<td align="center">117</td>
<td align="left">uucp-path</td>
<td align="left">Unix 到 Unix 复制协议（UUCP）路径服务</td>
</tr>
<tr>
<td align="center">119</td>
<td align="left">nntp</td>
<td align="left">用于 USENET 讨论系统的网络新闻传输协议（NNTP）</td>
</tr>
<tr>
<td align="center">123</td>
<td align="left">ntp</td>
<td align="left">网络时间协议（NTP）</td>
</tr>
<tr>
<td align="center">137</td>
<td align="left">netbios-ns</td>
<td align="left">在红帽企业 Linux 中被 Samba 使用的 NETBIOS 名称服务</td>
</tr>
<tr>
<td align="center">138</td>
<td align="left">netbios-dgm</td>
<td align="left">在红帽企业 Linux 中被 Samba 使用的 NETBIOS 数据报服务</td>
</tr>
<tr>
<td align="center">139</td>
<td align="left">netbios-ssn</td>
<td align="left">在红帽企业 Linux 中被 Samba 使用的NET BIOS 会话服务</td>
</tr>
<tr>
<td align="center"><strong>143</strong></td>
<td align="left"><strong>imap</strong></td>
<td align="left"><strong>互联网消息存取协议（IMAP）</strong></td>
</tr>
<tr>
<td align="center">161</td>
<td align="left">snmp</td>
<td align="left">简单网络管理协议（SNMP）</td>
</tr>
<tr>
<td align="center">162</td>
<td align="left">snmptrap</td>
<td align="left">SNMP 的陷阱</td>
</tr>
<tr>
<td align="center">163</td>
<td align="left">cmip-man</td>
<td align="left">通用管理信息协议（CMIP）</td>
</tr>
<tr>
<td align="center">164</td>
<td align="left">cmip-agent</td>
<td align="left">通用管理信息协议（CMIP）</td>
</tr>
<tr>
<td align="center">174</td>
<td align="left">mailq</td>
<td align="left">MAILQ</td>
</tr>
<tr>
<td align="center">177</td>
<td align="left">xdmcp</td>
<td align="left">X 显示管理器控制协议</td>
</tr>
<tr>
<td align="center">178</td>
<td align="left">nextstep</td>
<td align="left">NeXTStep 窗口服务器</td>
</tr>
<tr>
<td align="center">179</td>
<td align="left">bgp</td>
<td align="left">边界网络协议</td>
</tr>
<tr>
<td align="center">191</td>
<td align="left">prospero</td>
<td align="left">Cliffod Neuman 的 Prospero 服务</td>
</tr>
<tr>
<td align="center">194</td>
<td align="left">irc</td>
<td align="left">互联网中继聊天（IRC）</td>
</tr>
<tr>
<td align="center">199</td>
<td align="left">smux</td>
<td align="left">SNMP UNIX 多路复用</td>
</tr>
<tr>
<td align="center">201</td>
<td align="left">at-rtmp</td>
<td align="left">AppleTalk 选路</td>
</tr>
<tr>
<td align="center">202</td>
<td align="left">at-nbp</td>
<td align="left">AppleTalk 名称绑定</td>
</tr>
<tr>
<td align="center">204</td>
<td align="left">at-echo</td>
<td align="left">AppleTalk echo 服务</td>
</tr>
<tr>
<td align="center">206</td>
<td align="left">at-zis</td>
<td align="left">AppleTalk 区块信息</td>
</tr>
<tr>
<td align="center">209</td>
<td align="left">qmtp</td>
<td align="left">快速邮件传输协议（QMTP）</td>
</tr>
<tr>
<td align="center">210</td>
<td align="left">z39.50</td>
<td align="left">NISO Z39.50 数据库</td>
</tr>
<tr>
<td align="center">213</td>
<td align="left">ipx</td>
<td align="left">互联网络分组交换协议（IPX），被 Novell Netware 环境常用的数据报协议</td>
</tr>
<tr>
<td align="center">220</td>
<td align="left">imap3</td>
<td align="left">互联网消息存取协议版本3</td>
</tr>
<tr>
<td align="center">245</td>
<td align="left">link</td>
<td align="left">LINK</td>
</tr>
<tr>
<td align="center">347</td>
<td align="left">fatserv</td>
<td align="left">Fatmen 服务器</td>
</tr>
<tr>
<td align="center">363</td>
<td align="left">rsvp_tunnel</td>
<td align="left">RSVP 隧道</td>
</tr>
<tr>
<td align="center">369</td>
<td align="left">rpc2portmap</td>
<td align="left">Coda 文件系统端口映射器</td>
</tr>
<tr>
<td align="center">370</td>
<td align="left">codaauth2</td>
<td align="left">Coda 文件系统验证服务</td>
</tr>
<tr>
<td align="center">372</td>
<td align="left">ulistproc</td>
<td align="left">UNIX Listserv</td>
</tr>
<tr>
<td align="center">389</td>
<td align="left">ldap</td>
<td align="left">轻型目录存取协议（LDAP）</td>
</tr>
<tr>
<td align="center">427</td>
<td align="left">svrloc</td>
<td align="left">服务位置协议（SLP）</td>
</tr>
<tr>
<td align="center">434</td>
<td align="left">mobileip-agent</td>
<td align="left">可移互联网协议（IP）代理</td>
</tr>
<tr>
<td align="center">435</td>
<td align="left">mobilip-mn</td>
<td align="left">可移互联网协议（IP）管理器</td>
</tr>
<tr>
<td align="center"><strong>443</strong></td>
<td align="left"><strong>https</strong></td>
<td align="left"><strong>安全超文本传输协议（HTTP）</strong></td>
</tr>
<tr>
<td align="center">444</td>
<td align="left">snpp</td>
<td align="left">小型网络分页协议</td>
</tr>
<tr>
<td align="center">445</td>
<td align="left">microsoft-ds</td>
<td align="left">通过 TCP/IP 的服务器消息块（SMB）</td>
</tr>
<tr>
<td align="center">464</td>
<td align="left">kpasswd</td>
<td align="left">Kerberos 口令和钥匙改换服务</td>
</tr>
<tr>
<td align="center">468</td>
<td align="left">photuris</td>
<td align="left">Photuris 会话钥匙管理协议</td>
</tr>
<tr>
<td align="center">487</td>
<td align="left">saft</td>
<td align="left">简单不对称文件传输（SAFT）协议</td>
</tr>
<tr>
<td align="center">488</td>
<td align="left">gss-http</td>
<td align="left">用于 HTTP 的通用安全服务（GSS）</td>
</tr>
<tr>
<td align="center">496</td>
<td align="left">pim-rp-disc</td>
<td align="left">用于协议独立的多址传播（PIM）服务的会合点发现（RP-DISC）</td>
</tr>
<tr>
<td align="center">500</td>
<td align="left">isakmp</td>
<td align="left">互联网安全关联和钥匙管理协议（ISAKMP）</td>
</tr>
<tr>
<td align="center">535</td>
<td align="left">iiop</td>
<td align="left">互联网内部对象请求代理协议（IIOP）</td>
</tr>
<tr>
<td align="center">538</td>
<td align="left">gdomap</td>
<td align="left">GNUstep 分布式对象映射器（GDOMAP）</td>
</tr>
<tr>
<td align="center">546</td>
<td align="left">dhcpv6-client</td>
<td align="left">动态主机配置协议（DHCP）版本6客户</td>
</tr>
<tr>
<td align="center">547</td>
<td align="left">dhcpv6-server</td>
<td align="left">动态主机配置协议（DHCP）版本6服务</td>
</tr>
<tr>
<td align="center">554</td>
<td align="left">rtsp</td>
<td align="left">实时流播协议（RTSP）</td>
</tr>
<tr>
<td align="center">563</td>
<td align="left">nntps</td>
<td align="left">通过安全套接字层的网络新闻传输协议（NNTPS）</td>
</tr>
<tr>
<td align="center">565</td>
<td align="left">whoami</td>
<td align="left">whoami</td>
</tr>
<tr>
<td align="center">587</td>
<td align="left">submission</td>
<td align="left">邮件消息提交代理（MSA）</td>
</tr>
<tr>
<td align="center">610</td>
<td align="left">npmp-local</td>
<td align="left">网络外设管理协议（NPMP）本地 / 分布式排队系统（DQS）</td>
</tr>
<tr>
<td align="center">611</td>
<td align="left">npmp-gui</td>
<td align="left">网络外设管理协议（NPMP）GUI / 分布式排队系统（DQS）</td>
</tr>
<tr>
<td align="center">612</td>
<td align="left">hmmp-ind</td>
<td align="left">HMMP 指示 / DQS</td>
</tr>
<tr>
<td align="center">631</td>
<td align="left">ipp</td>
<td align="left">互联网打印协议（IPP）</td>
</tr>
<tr>
<td align="center">636</td>
<td align="left">ldaps</td>
<td align="left">通过安全套接字层的轻型目录访问协议（LDAPS）</td>
</tr>
<tr>
<td align="center">674</td>
<td align="left">acap</td>
<td align="left">应用程序配置存取协议（ACAP）</td>
</tr>
<tr>
<td align="center">694</td>
<td align="left">ha-cluster</td>
<td align="left">用于带有高可用性的群集的心跳服务</td>
</tr>
<tr>
<td align="center">749</td>
<td align="left">kerberos-adm</td>
<td align="left">Kerberos 版本5（v5）的“kadmin”数据库管理</td>
</tr>
<tr>
<td align="center">750</td>
<td align="left">kerberos-iv</td>
<td align="left">Kerberos 版本4（v4）服务</td>
</tr>
<tr>
<td align="center">765</td>
<td align="left">webster</td>
<td align="left">网络词典</td>
</tr>
<tr>
<td align="center">767</td>
<td align="left">phonebook</td>
<td align="left">网络电话簿</td>
</tr>
<tr>
<td align="center">873</td>
<td align="left">rsync</td>
<td align="left">rsync 文件传输服务</td>
</tr>
<tr>
<td align="center">992</td>
<td align="left">telnets</td>
<td align="left">通过安全套接字层的 Telnet（TelnetS）</td>
</tr>
<tr>
<td align="center">993</td>
<td align="left">imaps</td>
<td align="left">通过安全套接字层的互联网消息存取协议（IMAPS）</td>
</tr>
<tr>
<td align="center">994</td>
<td align="left">ircs</td>
<td align="left">通过安全套接字层的互联网中继聊天（IRCS）</td>
</tr>
<tr>
<td align="center">995</td>
<td align="left">pop3s</td>
<td align="left">通过安全套接字层的邮局协议版本3（POPS3）</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 命令(01)：ifconfig 命令</title>
    <url>/posts/49715/</url>
    <content><![CDATA[<p>许多windows非常熟悉ipconfig命令行工具，它被用来获取网络接口配置信息并对此进行修改。Linux系统拥有一个类似的工具，也就是ifconfig(interfaces config)。通常需要以root身份登录或使用sudo以便在Linux机器上使用ifconfig工具。依赖于ifconfig命令中使用一些选项属性，ifconfig工具不仅可以被用来简单地获取网络接口配置信息，还可以修改这些配置</p>
<h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ifconfig [网络设备] [参数]</span><br></pre></td></tr></table></figure>

<h3 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h3><p>ifconfig 命令用来查看和配置网络设备。当网络环境发生改变时可通过此命令对网络进行相应的配置。</p>
<a id="more"></a>

<h3 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h3><table>
<thead>
<tr>
<th align="left">命令参数</th>
<th align="left">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="left">up</td>
<td align="left">启动指定网络设备/网卡。</td>
</tr>
<tr>
<td align="left">down</td>
<td align="left">关闭指定网络设备/网卡。该参数可以有效地阻止通过指定接口的IP信息流，如果想永久地关闭一个接口，我们还需要从核心路由表中将该接口的路由信息全部删除。</td>
</tr>
<tr>
<td align="left">arp</td>
<td align="left">设置指定网卡是否支持ARP协议。</td>
</tr>
<tr>
<td align="left">-promisc</td>
<td align="left">设置是否支持网卡的promiscuous模式，如果选择此参数，网卡将接收网络中发给它所有的数据包</td>
</tr>
<tr>
<td align="left">-allmulti</td>
<td align="left">设置是否支持多播模式，如果选择此参数，网卡将接收网络中所有的多播数据包</td>
</tr>
<tr>
<td align="left">-a</td>
<td align="left">显示全部接口信息</td>
</tr>
<tr>
<td align="left">-s</td>
<td align="left">显示摘要信息（类似于 netstat -i）</td>
</tr>
<tr>
<td align="left">add</td>
<td align="left">给指定网卡配置IPv6地址</td>
</tr>
<tr>
<td align="left">del</td>
<td align="left">删除指定网卡的IPv6地址</td>
</tr>
<tr>
<td align="left">&lt;硬件地址&gt;</td>
<td align="left">配置网卡最大的传输单元</td>
</tr>
<tr>
<td align="left">mtu&lt;字节数&gt;</td>
<td align="left">设置网卡的最大传输单元 (bytes)</td>
</tr>
<tr>
<td align="left">netmask&lt;子网掩码&gt;</td>
<td align="left">设置网卡的子网掩码。掩码可以是有前缀0x的32位十六进制数，也可以是用点分开的4个十进制数。如果不打算将网络分成子网，可以不管这一选项；如果要使用子网，那么请记住，网络中每一个系统必须有相同子网掩码。</td>
</tr>
<tr>
<td align="left">tunel</td>
<td align="left">建立隧道</td>
</tr>
<tr>
<td align="left">dstaddr</td>
<td align="left">设定一个远端地址，建立点对点通信</td>
</tr>
<tr>
<td align="left">-broadcast&lt;地址&gt;</td>
<td align="left">为指定网卡设置广播协议</td>
</tr>
<tr>
<td align="left">-pointtopoint&lt;地址&gt;</td>
<td align="left">为网卡设置点对点通讯协议</td>
</tr>
<tr>
<td align="left">multicast</td>
<td align="left">为网卡设置组播标志</td>
</tr>
<tr>
<td align="left">address</td>
<td align="left">为网卡设置IPv4地址</td>
</tr>
<tr>
<td align="left">txqueuelen&lt;长度&gt;</td>
<td align="left">为网卡设置传输列队的长度</td>
</tr>
</tbody></table>
<h3 id="使用实例"><a href="#使用实例" class="headerlink" title="使用实例"></a>使用实例</h3><h4 id="实例1：显示网络设备信息（激活状态的）"><a href="#实例1：显示网络设备信息（激活状态的）" class="headerlink" title="实例1：显示网络设备信息（激活状态的）"></a>实例1：显示网络设备信息（激活状态的）</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# ifconfig</span><br><span class="line">eth0      Link encap:Ethernet  HWaddr 00:50:56:BF:26:20  </span><br><span class="line">          inet addr:192.168.120.204  Bcast:192.168.120.255  Mask:255.255.255.0</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line">          RX packets:8700857 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:31533 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1000</span><br><span class="line">          RX bytes:596390239 (568.7 MiB)  TX bytes:2886956 (2.7 MiB)</span><br><span class="line"></span><br><span class="line">lo        Link encap:Local Loopback  </span><br><span class="line">          inet addr:127.0.0.1  Mask:255.0.0.0</span><br><span class="line">          UP LOOPBACK RUNNING  MTU:16436  Metric:1</span><br><span class="line">          RX packets:68 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:68 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:0</span><br><span class="line">          RX bytes:2856 (2.7 KiB)  TX bytes:2856 (2.7 KiB)</span><br></pre></td></tr></table></figure>

<p>说明：<br>eth0 表示第一块网卡， 其中 HWaddr 表示网卡的物理地址，可以看到目前这个网卡的物理地址(MAC地址）是 00:50:56:BF:26:20<br>inet addr 用来表示网卡的IP地址，此网卡的 IP地址是 192.168.120.204，广播地址， Bcast:192.168.120.255，掩码地址Mask:255.255.255.0<br>lo 是表示主机的回坏地址，这个一般是用来测试一个网络程序，但又不想让局域网或外网的用户能够查看，只能在此台主机上运行和查看所用的网络接口。比如把 HTTPD服务器的指定到回坏地址，在浏览器输入 127.0.0.1 就能看到你所架WEB网站了。但只是您能看得到，局域网的其它主机或用户无从知道。<br>第一行：连接类型：Ethernet（以太网）HWaddr（硬件mac地址）<br>第二行：网卡的IP地址、子网、掩码<br>第三行：UP（代表网卡开启状态）RUNNING（代表网卡的网线被接上）MULTICAST（支持组播）MTU:1500（最大传输单元）：1500字节<br>第四、五行：接收、发送数据包情况统计<br>第七行：接收、发送数据字节数统计信息。</p>
<h4 id="实例2：启动关闭指定网卡"><a href="#实例2：启动关闭指定网卡" class="headerlink" title="实例2：启动关闭指定网卡"></a>实例2：启动关闭指定网卡</h4><p>命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ifconfig eth0 up</span><br><span class="line">ifconfig eth0 down</span><br></pre></td></tr></table></figure>

<p>说明：<br>ifconfig eth0 up 为启动网卡eth0 ；ifconfig eth0 down 为关闭网卡eth0。<br>ssh登陆linux服务器操作要小心，关闭了就不能开启了，除非你有多网卡。</p>
<h4 id="实例3：为网卡配置和删除IPv6地址"><a href="#实例3：为网卡配置和删除IPv6地址" class="headerlink" title="实例3：为网卡配置和删除IPv6地址"></a>实例3：为网卡配置和删除IPv6地址</h4><p>命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ifconfig eth0 add 33ffe:3240:800:1005::2&#x2F;64</span><br><span class="line">ifconfig eth0 del 33ffe:3240:800:1005::2&#x2F;64</span><br></pre></td></tr></table></figure>

<p>说明：<br>ifconfig eth0 add 33ffe:3240:800:1005::2/64 为网卡eth0配置IPv6地址；<br>ifconfig eth0 add 33ffe:3240:800:1005::2/64 为网卡eth0删除IPv6地址；<br>练习的时候，ssh登陆linux服务器操作要小心，关闭了就不能开启了，除非你有多网卡。</p>
<h4 id="实例4：用ifconfig修改MAC地址"><a href="#实例4：用ifconfig修改MAC地址" class="headerlink" title="实例4：用ifconfig修改MAC地址"></a>实例4：用ifconfig修改MAC地址</h4><p>命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ifconfig eth0 hw ether 00:AA:BB:CC:DD:EE</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# ifconfig eth0 down &#x2F;&#x2F;关闭网卡</span><br><span class="line">[root@localhost ~]# ifconfig eth0 hw ether 00:AA:BB:CC:DD:EE &#x2F;&#x2F;修改MAC地址</span><br><span class="line">[root@localhost ~]# ifconfig eth0 up &#x2F;&#x2F;启动网卡</span><br><span class="line">[root@localhost ~]# ifconfig</span><br><span class="line">eth0      Link encap:Ethernet  HWaddr 00:AA:BB:CC:DD:EE  </span><br><span class="line">          inet addr:192.168.120.204  Bcast:192.168.120.255  Mask:255.255.255.0</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line">          RX packets:8700857 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:31533 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1000</span><br><span class="line">          RX bytes:596390239 (568.7 MiB)  TX bytes:2886956 (2.7 MiB)</span><br><span class="line"></span><br><span class="line">lo        Link encap:Local Loopback  </span><br><span class="line">          inet addr:127.0.0.1  Mask:255.0.0.0</span><br><span class="line">          UP LOOPBACK RUNNING  MTU:16436  Metric:1</span><br><span class="line">          RX packets:68 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:68 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:0</span><br><span class="line">          RX bytes:2856 (2.7 KiB)  TX bytes:2856 (2.7 KiB)</span><br><span class="line">[root@localhost ~]# ifconfig eth0 hw ether 00:50:56:BF:26:20 &#x2F;&#x2F;关闭网卡并修改MAC地址</span><br><span class="line">[root@localhost ~]# ifconfig eth0 up &#x2F;&#x2F;启动网卡</span><br><span class="line">[root@localhost ~]# ifconfig</span><br><span class="line">eth0      Link encap:Ethernet  HWaddr 00:50:56:BF:26:20  </span><br><span class="line">          inet addr:192.168.120.204  Bcast:192.168.120.255  Mask:255.255.255.0</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line">          RX packets:8700857 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:31533 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1000</span><br><span class="line">          RX bytes:596390239 (568.7 MiB)  TX bytes:2886956 (2.7 MiB)</span><br><span class="line"></span><br><span class="line">lo        Link encap:Local Loopback  </span><br><span class="line">          inet addr:127.0.0.1  Mask:255.0.0.0</span><br><span class="line">          UP LOOPBACK RUNNING  MTU:16436  Metric:1</span><br><span class="line">          RX packets:68 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:68 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:0</span><br><span class="line">          RX bytes:2856 (2.7 KiB)  TX bytes:2856 (2.7 KiB)</span><br></pre></td></tr></table></figure>

<h4 id="实例5：配置IP地址"><a href="#实例5：配置IP地址" class="headerlink" title="实例5：配置IP地址"></a>实例5：配置IP地址</h4><p>命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# ifconfig eth0 192.168.120.56</span><br><span class="line">[root@localhost ~]# ifconfig eth0 192.168.120.56 netmask 255.255.255.0</span><br><span class="line">[root@localhost ~]# ifconfig eth0 192.168.120.56 netmask 255.255.255.0 broadcast 192.168.120.255</span><br></pre></td></tr></table></figure>

<p>说明：<br>ifconfig eth0 192.168.120.56<br>给eth0网卡配置IP地：192.168.120.56<br> ifconfig eth0 192.168.120.56 netmask 255.255.255.0<br>给eth0网卡配置IP地址：192.168.120.56 ，并加上子掩码：255.255.255.0<br>ifconfig eth0 192.168.120.56 netmask 255.255.255.0 broadcast 192.168.120.255<br>/给eth0网卡配置IP地址：192.168.120.56，加上子掩码：255.255.255.0，加上个广播地址： 192.168.120.255</p>
<h4 id="实例6：启用和关闭ARP协议"><a href="#实例6：启用和关闭ARP协议" class="headerlink" title="实例6：启用和关闭ARP协议"></a>实例6：启用和关闭ARP协议</h4><p>命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ifconfig eth0 arp</span><br><span class="line">ifconfig eth0 -arp</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# ifconfig eth0 arp</span><br><span class="line">[root@localhost ~]# ifconfig eth0 -arp</span><br></pre></td></tr></table></figure>

<h4 id="实例7：设置最大传输单元"><a href="#实例7：设置最大传输单元" class="headerlink" title="实例7：设置最大传输单元"></a>实例7：设置最大传输单元</h4><p>命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ifconfig eth0 mtu 1500</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# ifconfig eth0 mtu 1480</span><br><span class="line">[root@localhost ~]# ifconfig</span><br><span class="line">eth0      Link encap:Ethernet  HWaddr 00:50:56:BF:26:1F  </span><br><span class="line">          inet addr:192.168.120.203  Bcast:192.168.120.255  Mask:255.255.255.0</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1480  Metric:1</span><br><span class="line">          RX packets:8712395 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:36631 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1000</span><br><span class="line">          RX bytes:597062089 (569.4 MiB)  TX bytes:2643973 (2.5 MiB)</span><br><span class="line"></span><br><span class="line">lo        Link encap:Local Loopback  </span><br><span class="line">          inet addr:127.0.0.1  Mask:255.0.0.0</span><br><span class="line">          UP LOOPBACK RUNNING  MTU:16436  Metric:1</span><br><span class="line">          RX packets:9973 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:9973 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:0</span><br><span class="line">          RX bytes:518096 (505.9 KiB)  TX bytes:518096 (505.9 KiB)</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# ifconfig eth0 mtu 1500</span><br><span class="line">[root@localhost ~]# ifconfig</span><br><span class="line">eth0      Link encap:Ethernet  HWaddr 00:50:56:BF:26:1F  </span><br><span class="line">          inet addr:192.168.120.203  Bcast:192.168.120.255  Mask:255.255.255.0</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line">          RX packets:8712548 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:36685 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1000</span><br><span class="line">          RX bytes:597072333 (569.4 MiB)  TX bytes:2650581 (2.5 MiB)</span><br><span class="line"></span><br><span class="line">lo        Link encap:Local Loopback  </span><br><span class="line">          inet addr:127.0.0.1  Mask:255.0.0.0</span><br><span class="line">          UP LOOPBACK RUNNING  MTU:16436  Metric:1</span><br><span class="line">          RX packets:9973 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:9973 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:0</span><br><span class="line">          RX bytes:518096 (505.9 KiB)  TX bytes:518096 (505.9 KiB)</span><br><span class="line"></span><br><span class="line">[root@localhost ~]#</span><br></pre></td></tr></table></figure>

<p>说明：<br>设置能通过的最大数据包大小为 1500 bytes</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Linux 命令</tag>
      </tags>
  </entry>
  <entry>
    <title>【Linux】vi/vim 使用方法讲解</title>
    <url>/posts/53043/</url>
    <content><![CDATA[<p>vi编辑器是所有Unix及Linux系统下标准的编辑器，它的强大不逊色于任何最新的文本编辑器，这里只是简单地介绍一下它的用法和一小部分指令。</p>
<a id="more"></a>

<h3 id="vi的基本概念"><a href="#vi的基本概念" class="headerlink" title="vi的基本概念"></a>vi的基本概念</h3><p>基本上vi可以分为三种状态，分别是命令模式（command mode）、插入模式（Insert mode）和底行模式（last line）。</p>
<h4 id="命令行模式（command-mode）"><a href="#命令行模式（command-mode）" class="headerlink" title="命令行模式（command mode）"></a>命令行模式（command mode）</h4><p>控制屏幕光标的移动，字符、字或行的删除，移动复制某区段及进入Insert mode下，或者到 last line mode。</p>
<h4 id="插入模式（Insert-mode）"><a href="#插入模式（Insert-mode）" class="headerlink" title="插入模式（Insert mode）"></a>插入模式（Insert mode）</h4><p>只有在Insert mode下，才可以做文字输入，按「ESC」键可回到命令行模式。</p>
<h4 id="底行模式（last-line-mode）"><a href="#底行模式（last-line-mode）" class="headerlink" title="底行模式（last line mode）"></a>底行模式（last line mode）</h4><p>将文件保存或退出vi，也可以设置编辑环境，如寻找字符串、列出行号……等。</p>
<p>不过一般我们在使用时把vi简化成两个模式，就是将底行模式（last line mode）也算入命令行模式command mode）。</p>
<h3 id="vi的基本操作"><a href="#vi的基本操作" class="headerlink" title="vi的基本操作"></a>vi的基本操作</h3><h4 id="进入vi"><a href="#进入vi" class="headerlink" title="进入vi"></a>进入vi</h4><p>在系统提示符号输入vi及文件名称后，就进入vi全屏幕编辑画面：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ vi myfile</span><br></pre></td></tr></table></figure>

<h4 id="切换至插入模式（Insert-mode）编辑文件"><a href="#切换至插入模式（Insert-mode）编辑文件" class="headerlink" title="切换至插入模式（Insert mode）编辑文件"></a>切换至插入模式（Insert mode）编辑文件</h4><p>在「命令行模式（command mode）」下按一下字母「i」就可以进入「插入模式（Insert mode）」，这时候你就可以开始输入文字了。</p>
<h4 id="Insert-的切换"><a href="#Insert-的切换" class="headerlink" title="Insert 的切换"></a>Insert 的切换</h4><p>您目前处于「插入模式（Insert mode）」，您就只能一直输入文字，如果您发现输错了字！想用光标键往回移动，将该字删除，就要先按一下「ESC」键转到「命令行模式（command mode）」再删除文字。</p>
<h4 id="退出vi及保存文件"><a href="#退出vi及保存文件" class="headerlink" title="退出vi及保存文件"></a>退出vi及保存文件</h4><dl><dt>在「命令行模式（command mode）」下，按一下「：」冒号键进入「Last line mode」，例如：<br>: w filename （输入 「w filename」将文章以指定的文件名filename保存）<br>: wq (输入「wq」，存盘并退出vi)</dt><dd>q! (输入q!， 不存盘强制退出vi)</dd></dl><h3 id="命令行模式（command-mode）功能键"><a href="#命令行模式（command-mode）功能键" class="headerlink" title="命令行模式（command mode）功能键"></a>命令行模式（command mode）功能键</h3><h4 id="插入模式"><a href="#插入模式" class="headerlink" title="插入模式"></a>插入模式</h4><p>按「i」切换进入插入模式「insert mode」，按“i”进入插入模式后是从光标当前位置开始输入文件；<br>按「a」进入插入模式后，是从目前光标所在位置的下一个位置开始输入文字；<br>按「o」进入插入模式后，是插入新的一行，从行首开始输入文字。</p>
<h4 id="从插入模式切换为命令行模式"><a href="#从插入模式切换为命令行模式" class="headerlink" title="从插入模式切换为命令行模式"></a>从插入模式切换为命令行模式</h4><p>按「ESC」键。</p>
<h4 id="移动光标"><a href="#移动光标" class="headerlink" title="移动光标"></a>移动光标</h4><p>vi可以直接用键盘上的光标来上下左右移动，但正规的vi是用小写英文字母「h」、「j」、「k」、「l」，分别控制光标左、下、上、右移一格。<br>按「ctrl」+「b」：屏幕往“后”移动一页。<br>按「ctrl」+「f」：屏幕往“前”移动一页。<br>按「ctrl」+「u」：屏幕往“后”移动半页。<br>按「ctrl」+「d」：屏幕往“前”移动半页。<br>按「gg」：移到文章的开头。<br>按「G」：移动到文章的最后。<br>按「$」：移动到光标所在行的“行尾”。<br>按「^」：移动到光标所在行的“行首”<br>按「w」：光标跳到下个字的开头<br>按「e」：光标跳到下个字的字尾<br>按「b」：光标回到上个字的开头<br>按「#l」：光标移到该行的第#个位置，如：5l,56l。</p>
<h4 id="删除文字"><a href="#删除文字" class="headerlink" title="删除文字"></a>删除文字</h4><p>「x」：每按一次，删除光标所在位置的“后面”一个字符。<br>「#x」：例如，「6x」表示删除光标所在位置的“后面”6个字符。<br>「X」：大写的X，每按一次，删除光标所在位置的“前面”一个字符。<br>「#X」：例如，「20X」表示删除光标所在位置的“前面”20个字符。<br>「dd」：删除光标所在行。<br>「#dd」：从光标所在行开始删除#行</p>
<h4 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h4><p>「yw」：将光标所在之处到字尾的字符复制到缓冲区中。<br>「#yw」：复制#个字到缓冲区<br>「yy」：复制光标所在行到缓冲区。<br>「#yy」：例如，「6yy」表示拷贝从光标所在的该行“往下数”6行文字。<br>「p」：将缓冲区内的字符贴到光标所在位置。注意：所有与“y”有关的复制命令都必须与“p”配合才能完成复制与粘贴功能。</p>
<h4 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h4><p>「r」：替换光标所在处的字符。<br>「R」：替换光标所到之处的字符，直到按下「ESC」键为止。</p>
<h4 id="回复上一次操作"><a href="#回复上一次操作" class="headerlink" title="回复上一次操作"></a>回复上一次操作</h4><p>「u」：如果您误执行一个命令，可以马上按下「u」，回到上一个操作。按多次“u”可以执行多次回复。</p>
<h4 id="更改"><a href="#更改" class="headerlink" title="更改"></a>更改</h4><p>「cw」：更改光标所在处的字到字尾处<br>「c#w」：例如，「c3w」表示更改3个字</p>
<h4 id="跳至指定的行"><a href="#跳至指定的行" class="headerlink" title="跳至指定的行"></a>跳至指定的行</h4><p>「ctrl」+「g」列出光标所在行的行号。<br>「#G」：例如，「15G」，表示移动光标至文章的第15行行首。</p>
<h3 id="Last-line-mode下命令简介"><a href="#Last-line-mode下命令简介" class="headerlink" title="Last line mode下命令简介"></a>Last line mode下命令简介</h3><p>在使用「last line mode」之前，请记住先按「ESC」键确定您已经处于「command mode」下后，再按「：」冒号即可进入「last line mode」。</p>
<h4 id="列出行号"><a href="#列出行号" class="headerlink" title="列出行号"></a>列出行号</h4><p>「set nu」：输入「set nu」后，会在文件中的每一行前面列出行号。</p>
<h4 id="跳到文件中的某一行"><a href="#跳到文件中的某一行" class="headerlink" title="跳到文件中的某一行"></a>跳到文件中的某一行</h4><p>「#」：「#」号表示一个数字，在冒号后输入一个数字，再按回车键就会跳到该行了，如输入数字15，再回车，就会跳到文章的第15行。</p>
<h4 id="查找字符"><a href="#查找字符" class="headerlink" title="查找字符"></a>查找字符</h4><p>「/关键字」：先按「/」键，再输入您想寻找的字符，如果第一次找的关键字不是您想要的，可以一直按「n」会往后寻找到您要的关键字为止。<br>「?关键字」：先按「?」键，再输入您想寻找的字符，如果第一次找的关键字不是您想要的，可以一直按「n」会往前寻找到您要的关键字为止。</p>
<h4 id="保存文件"><a href="#保存文件" class="headerlink" title="保存文件"></a>保存文件</h4><p>「w」：在冒号输入字母「w」就可以将文件保存起来。</p>
<h4 id="离开vi"><a href="#离开vi" class="headerlink" title="离开vi"></a>离开vi</h4><p>「q」：按「q」就是退出，如果无法离开vi，可以在「q」后跟一个「!」强制离开vi。</p>
<h3 id="vi命令列表"><a href="#vi命令列表" class="headerlink" title="vi命令列表"></a>vi命令列表</h3><h4 id="命令模式切换到文本输入模式"><a href="#命令模式切换到文本输入模式" class="headerlink" title="命令模式切换到文本输入模式"></a>命令模式切换到文本输入模式</h4><table>
<thead>
<tr>
<th align="center">键</th>
<th align="left">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">i</td>
<td align="left">在光标左侧输入文本</td>
</tr>
<tr>
<td align="center">I</td>
<td align="left">在当前行的行首输入文本</td>
</tr>
<tr>
<td align="center">a</td>
<td align="left">在光标右侧输入文本</td>
</tr>
<tr>
<td align="center">A</td>
<td align="left">在当前行的行尾输入文本</td>
</tr>
<tr>
<td align="center">o</td>
<td align="left">在当前行的下一行添加一个空行，光标放在新行的行首</td>
</tr>
<tr>
<td align="center">O</td>
<td align="left">在当前行的上一行添加一个空行，光标放在新行的行首</td>
</tr>
<tr>
<td align="center">无论是使用哪种快捷键进入这个模式，在插入模式下，都是在光标前进行插入。</td>
<td align="left"></td>
</tr>
</tbody></table>
<h4 id="文本修改键，只适用于命令模式"><a href="#文本修改键，只适用于命令模式" class="headerlink" title="文本修改键，只适用于命令模式"></a>文本修改键，只适用于命令模式</h4><table>
<thead>
<tr>
<th align="center">键</th>
<th align="left">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">x</td>
<td align="left">删除光标位置指定的字符</td>
</tr>
<tr>
<td align="center">dd</td>
<td align="left">删除光标所在的行</td>
</tr>
<tr>
<td align="center">u</td>
<td align="left">撤销最近的修改</td>
</tr>
<tr>
<td align="center">U</td>
<td align="left">撤销对当前行上做的所有修改</td>
</tr>
<tr>
<td align="center">r</td>
<td align="left">替换光标位置上的一个字符</td>
</tr>
<tr>
<td align="center">R</td>
<td align="left">替换从光标位置上开始的字符，同时改变vim到文本输入模式</td>
</tr>
<tr>
<td align="center">.</td>
<td align="left">重复上一次的修改</td>
</tr>
</tbody></table>
<h4 id="光标移动键，命令模式下控制光标移动。"><a href="#光标移动键，命令模式下控制光标移动。" class="headerlink" title="光标移动键，命令模式下控制光标移动。"></a>光标移动键，命令模式下控制光标移动。</h4><table>
<thead>
<tr>
<th align="center">键</th>
<th align="left">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">h或[←]</td>
<td align="left">将光标向左移动一位</td>
</tr>
<tr>
<td align="center">j 或[↓]</td>
<td align="left">将光标向下移动一行</td>
</tr>
<tr>
<td align="center">k或[↑]</td>
<td align="left">将光标向上移动一行</td>
</tr>
<tr>
<td align="center">i 或[→]</td>
<td align="left">将光标向右移动一位</td>
</tr>
<tr>
<td align="center">$</td>
<td align="left">将光标移动移到当前行的行尾</td>
</tr>
<tr>
<td align="center">w</td>
<td align="left">将光标向右移动一个字，到下一个字的开头</td>
</tr>
<tr>
<td align="center">b</td>
<td align="left">将光标向左移动一个字，到前一个字的开头</td>
</tr>
<tr>
<td align="center">e</td>
<td align="left">将光标移到字尾</td>
</tr>
<tr>
<td align="center">0</td>
<td align="left">将光标移到当前行的行首</td>
</tr>
<tr>
<td align="center">gg</td>
<td align="left">移到文章的开头</td>
</tr>
<tr>
<td align="center">G</td>
<td align="left">移动到文章的最后</td>
</tr>
<tr>
<td align="center">H</td>
<td align="left">画面最上面一行移动</td>
</tr>
<tr>
<td align="center">L</td>
<td align="left">画面最下面一行移动</td>
</tr>
<tr>
<td align="center">[Enter]</td>
<td align="left">将光标移到下一行的行首</td>
</tr>
<tr>
<td align="center">[Space]</td>
<td align="left">将光标向右移动一位</td>
</tr>
<tr>
<td align="center">[Backspace]</td>
<td align="left">将光标向左移动一位</td>
</tr>
</tbody></table>
<h4 id="退出命令，除了ZZ命令外，都以”：”开始，用-Enter-结束命令行。"><a href="#退出命令，除了ZZ命令外，都以”：”开始，用-Enter-结束命令行。" class="headerlink" title="退出命令，除了ZZ命令外，都以”：”开始，用[Enter]结束命令行。"></a>退出命令，除了ZZ命令外，都以”：”开始，用[Enter]结束命令行。</h4><table>
<thead>
<tr>
<th align="center">键</th>
<th align="left">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">wq</td>
<td align="left">保存文件，退出编辑器</td>
</tr>
<tr>
<td align="center">w</td>
<td align="left">保存文件，但不退出编辑器</td>
</tr>
<tr>
<td align="center">q</td>
<td align="left">退出编辑器</td>
</tr>
<tr>
<td align="center">q!</td>
<td align="left">不保存文件，退出编辑器</td>
</tr>
<tr>
<td align="center">ZZ</td>
<td align="left">保存文件，退出编辑器</td>
</tr>
</tbody></table>
<h4 id="搜索命令"><a href="#搜索命令" class="headerlink" title="搜索命令"></a>搜索命令</h4><table>
<thead>
<tr>
<th align="center">键</th>
<th align="left">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">/</td>
<td align="left">向前搜索指定的字符串，搜索到后按n寻找下一个</td>
</tr>
<tr>
<td align="center">?</td>
<td align="left">向后搜索指定的字符串，搜索到后按n寻找下一个</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title>【网页设计】程序员也能做出让人惊艳的网站</title>
    <url>/posts/60933/</url>
    <content><![CDATA[<p>今天我们根据 <a href="http://pas-pol.jp/" target="_blank" rel="noopener">Pos-Pol</a> 来具体分析一下一个完全没有学过设计的程序员应当如何做出让人惊艳网页。</p>
<h3 id="在首页使用大幅图片"><a href="#在首页使用大幅图片" class="headerlink" title="在首页使用大幅图片"></a>在首页使用大幅图片</h3><p><img src="/img/2016020503.png" alt="【网页设计】程序员也能做出让人惊艳的网站"></p>
<a id="more"></a>

<p><img src="/img/2016020501.png" alt="【网页设计】程序员也能做出让人惊艳的网站"></p>
<p>在首页使用与主题相关、充满整个屏幕的大幅图片可以给人以一种震撼和惊艳的视觉效果。在用户登录页面的第一刻就给用户留下深刻映像。</p>
<h3 id="在图片上使用白色的文字"><a href="#在图片上使用白色的文字" class="headerlink" title="在图片上使用白色的文字"></a>在图片上使用白色的文字</h3><p>在图片上上使用白色（或与白色贴近的颜色）的文字，一般是比较保险的做法。</p>
<h3 id="对链接不同状态增加特效"><a href="#对链接不同状态增加特效" class="headerlink" title="对链接不同状态增加特效"></a>对链接不同状态增加特效</h3><p><img src="/img/2016020504.png" alt="【网页设计】程序员也能做出让人惊艳的网站"></p>
<p>当鼠标移至链接上方时，为链接增加特效。另外，由于链接默认的特效效果并不好，因此建议制作自己的特效。</p>
<h3 id="对标题使用-letter-spacing"><a href="#对标题使用-letter-spacing" class="headerlink" title="对标题使用 letter-spacing"></a>对标题使用 letter-spacing</h3><p>通过设置’letter-spacing’，将标题文字与文字间的间距扩大，可以起到突出标题的作用。</p>
<h3 id="不要使用原色"><a href="#不要使用原色" class="headerlink" title="不要使用原色"></a>不要使用原色</h3><p>不要随意使用红蓝黄三原色。除非是想强调很明显的明暗关系，一般也不要使用黑色。可以通过以下网站来选择合适自己的配色：<br><a href="http://colourco.de/" target="_blank" rel="noopener">http://colourco.de/</a></p>
<h3 id="在背景为白色系时，文字不要使用纯黑色"><a href="#在背景为白色系时，文字不要使用纯黑色" class="headerlink" title="在背景为白色系时，文字不要使用纯黑色"></a>在背景为白色系时，文字不要使用纯黑色</h3><p>当背景为白色系时，正文的内容尽量避免使用纯黑色(#000)，可以使用灰色系的颜色来进行替代。</p>
<h3 id="靠近页脚的部分颜色逐渐加深"><a href="#靠近页脚的部分颜色逐渐加深" class="headerlink" title="靠近页脚的部分颜色逐渐加深"></a>靠近页脚的部分颜色逐渐加深</h3><p><img src="/img/2016020502.png" alt="【网页设计】程序员也能做出让人惊艳的网站"></p>
<p>如上图示例，在靠近页脚的部分逐渐将颜色呈阶梯式加深，可以起到不错的效果。</p>
<h3 id="根据内容变换背景色"><a href="#根据内容变换背景色" class="headerlink" title="根据内容变换背景色"></a>根据内容变换背景色</h3><p>内容的背景色可以在白色与白色相近的颜色之间相互切换。</p>
<h3 id="改变英语文字的大小"><a href="#改变英语文字的大小" class="headerlink" title="改变英语文字的大小"></a>改变英语文字的大小</h3><p>通过设定英语文字的<code>font-weight</code>可以是页面显得更加生动。</p>
<h3 id="不要使用太多的颜色"><a href="#不要使用太多的颜色" class="headerlink" title="不要使用太多的颜色"></a>不要使用太多的颜色</h3><p>除了图片和按钮的颜色，尽量将网页内的颜色控制在五种颜色以内。</p>
<h3 id="其他例子"><a href="#其他例子" class="headerlink" title="其他例子"></a>其他例子</h3><p><a href="https://tabeyou.jp/" target="_blank" rel="noopener">出前専門サイト TABEYOU</a></p>
]]></content>
      <categories>
        <category>设计</category>
      </categories>
      <tags>
        <tag>设计</tag>
      </tags>
  </entry>
  <entry>
    <title>【Linux】 .bashrc 与 .bash_profile 的正确区分方法</title>
    <url>/posts/40521/</url>
    <content><![CDATA[<h3 id="系统下的各类设定文件"><a href="#系统下的各类设定文件" class="headerlink" title="系统下的各类设定文件"></a>系统下的各类设定文件</h3><hr>
<h4 id="etc-profile"><a href="#etc-profile" class="headerlink" title="/etc/profile"></a>/etc/profile</h4><p>对所有用户适用的默认设定文件。</p>
<h4 id="bash-profile"><a href="#bash-profile" class="headerlink" title="~/.bash_profile"></a>~/.bash_profile</h4><p>（选项）以用户为单位的设定文件</p>
<a id="more"></a>

<h4 id="bash-login"><a href="#bash-login" class="headerlink" title="~/.bash_login"></a>~/.bash_login</h4><p>（选项）只有在登录时 <code>./bash_profile</code> 不存在的情况下该文件会被读取的设定文件</p>
<h4 id="profile"><a href="#profile" class="headerlink" title="~/.profile"></a>~/.profile</h4><p>（选项）只有在登录时 <code>~/.bash_profile</code> 与 <code>~/.bash_login</code> 均不存在的情况下会被读取的设定文件</p>
<h4 id="bashrc"><a href="#bashrc" class="headerlink" title="~/.bashrc"></a>~/.bashrc</h4><p>（选项）每一次 bash 启动时会进行读取的设定文件</p>
<h4 id="bash-logout"><a href="#bash-logout" class="headerlink" title="~/.bash_logout"></a>~/.bash_logout</h4><p>（选项）bash每一次登出时读入的设定文件</p>
<h3 id="bashrc-与-bash-profile"><a href="#bashrc-与-bash-profile" class="headerlink" title=".bashrc 与 .bash_profile"></a><code>.bashrc</code> 与 <code>.bash_profile</code></h3><hr>
<h4 id="bash-profile-1"><a href="#bash-profile-1" class="headerlink" title=".bash_profile"></a>.bash_profile</h4><p><code>.bash_profile</code> 只有在登录时会执行，因此：</p>
<ul>
<li>环境变量的设定( export 变量)</li>
</ul>
<h4 id="bashrc-1"><a href="#bashrc-1" class="headerlink" title=".bashrc"></a>.bashrc</h4><p><code>.bashrc</code> 每一次对话模式的 <code>bash</code> 启动时都会执行。</p>
<ul>
<li>非环境变量的变量(非 export 变量)</li>
<li>alias 的定义</li>
<li>shell 变量的定义</li>
<li>command line 补完的设定</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>【Linux】获取 Unix 操作日志</title>
    <url>/posts/13115/</url>
    <content><![CDATA[<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>本文总结在 Linux 服务器上进行操作时，获取操作日志的方法。</p>
<p>主要利用的命令有以下两种：</p>
<blockquote>
<p>history<br>  script</p>
</blockquote>
<a id="more"></a>

<h3 id="history"><a href="#history" class="headerlink" title="history"></a>history</h3><hr>
<p>显示当前用户在命令行上的操作履历</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ history</span><br><span class="line">    1  ls</span><br><span class="line">    2  env</span><br><span class="line">    3  history</span><br><span class="line">    4  ls -la</span><br><span class="line">    5  ls -la</span><br><span class="line">    6  vim .bashrc</span><br><span class="line">    7  zsh</span><br><span class="line">    8  exit</span><br><span class="line">    9  lsblk</span><br><span class="line">   10  hostname</span><br><span class="line">   …</span><br></pre></td></tr></table></figure>

<p>增加参数的话，可以查看最新的履历</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ history 5</span><br><span class="line">  349  cat hoge.log</span><br><span class="line">  350  ls</span><br><span class="line">  351  hostname</span><br><span class="line">  352  history</span><br><span class="line">  353  history 5</span><br></pre></td></tr></table></figure>

<p>保存的最大履历数量可以通过设置 .bash_profile 或 .bashrc 内的变量来进行调整</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HISTSIZE&#x3D;1000</span><br></pre></td></tr></table></figure>

<p>使用 HISTTIMEFORMAT 设置输出的时间显示格式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HISTTIMEFORMAT&#x3D;%Y&#x2F;%m&#x2F;%d %H:%M:%S</span><br></pre></td></tr></table></figure>

<p>显示结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ history</span><br><span class="line">    1  2015&#x2F;06&#x2F;24 09:45:26 ls</span><br><span class="line">    2  2015&#x2F;06&#x2F;24 09:45:26 env</span><br><span class="line">    3  2015&#x2F;06&#x2F;24 09:45:26 history</span><br><span class="line">    4  2015&#x2F;06&#x2F;24 09:45:26 ls -la</span><br><span class="line">    5  2015&#x2F;06&#x2F;24 09:45:26 ls -la</span><br><span class="line">    6  2015&#x2F;06&#x2F;24 09:45:26 vim .bashrc</span><br><span class="line">    7  2015&#x2F;06&#x2F;24 09:45:26 zsh</span><br><span class="line">    8  2015&#x2F;06&#x2F;24 09:45:26 exit</span><br><span class="line">    9  2015&#x2F;06&#x2F;24 09:45:26 lsblk</span><br><span class="line">   10  2015&#x2F;06&#x2F;24 09:45:26 hostname</span><br><span class="line">   …</span><br></pre></td></tr></table></figure>

<p>忽略特定命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#hostname,ls命令将不会保留在履历中</span><br><span class="line">HISTIGNORE&#x3D;hostname:ls</span><br></pre></td></tr></table></figure>

<h3 id="script"><a href="#script" class="headerlink" title="script"></a>script</h3><hr>
<p>由于<code>history</code>只是单纯的显示命令履历，并不能够对输出的结果进行确认。<br>当需要对输出的命令结果进行确认时，可以使用<code>script</code>命令。</p>
<p><code>script</code>命令的参数为输出对象的路径。<br><code>script</code>命令执行之后命令及输出结果将会写入输出对象文件直至<code>exit</code>命令被执行。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ script &#x2F;tmp&#x2F;test.log</span><br><span class="line"># script 命令开始，输出对象为&#x2F;tmp&#x2F;test.log</span><br><span class="line">$ hostname</span><br><span class="line">server01</span><br><span class="line">$ pwd</span><br><span class="line">&#x2F;home&#x2F;user01</span><br><span class="line">$ history | grep hostname</span><br><span class="line">  309  2015&#x2F;06&#x2F;24 11:51:52 hostname</span><br><span class="line">  415  2015&#x2F;06&#x2F;24 11:23:52 hostname</span><br><span class="line">  428  2015&#x2F;06&#x2F;24 11:52:05 history | grep hostname</span><br><span class="line">$ date</span><br><span class="line">2015年  6月 24日 水曜日 11:52:13 JST</span><br><span class="line">$ exit</span><br><span class="line">exit</span><br><span class="line"># 输出命令结束</span><br></pre></td></tr></table></figure>

<p>确认输出结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cat &#x2F;tmp&#x2F;test.log</span><br><span class="line"></span><br><span class="line">$ hostname</span><br><span class="line">server01</span><br><span class="line">$ pwd</span><br><span class="line">&#x2F;home&#x2F;user01</span><br><span class="line">$ history | grep hostname</span><br><span class="line">  309  2015&#x2F;06&#x2F;24 11:51:52 hostname</span><br><span class="line">  415  2015&#x2F;06&#x2F;24 11:23:52 hostname</span><br><span class="line">  428  2015&#x2F;06&#x2F;24 11:52:05 history | grep hostname</span><br><span class="line">$ date</span><br><span class="line">2015年  6月 24日 水曜日 11:52:13 JST</span><br><span class="line">$ exit</span><br><span class="line">exit</span><br></pre></td></tr></table></figure>

<p>当需要对同一文件进行追加输入时，可以附带 <code>-a</code> 选项</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">script -a &#x2F;tmp&#x2F;test.log</span><br></pre></td></tr></table></figure>

<h3 id="自动取得操作日"><a href="#自动取得操作日" class="headerlink" title="自动取得操作日"></a>自动取得操作日</h3><p>对 <code>.bash_profile</code> 进行编辑，使用户登录时自动执行 <code>script</code> 命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 用户登录时对指定文件夹输出日志</span><br><span class="line"># $&#123;log_archive_directory&#125;为任意指定文件夹</span><br><span class="line"># 日志按用户登录时间和用户名进行分类</span><br><span class="line"></span><br><span class="line">script $&#123;log_archive_directory&#125;&#x2F;$(date +%Y%m%d_%H%M%S)_$(whoami).log</span><br></pre></td></tr></table></figure>

<p>有一点需要注意的是，<code>script</code>命令默认情况下并非同步输出文件，因此在需要进行同步输出的情况下，可以追加 <code>-f</code> 选项</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">script -f $&#123;log_archive_directory&#125;&#x2F;$(date +%Y%m%d_%H%M%S)_$(whoami).log</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>【工作】如何写简历</title>
    <url>/posts/9791/</url>
    <content><![CDATA[<p>不管是刚毕业就业的大学生也好，亦或是在公司工作了几年积累了一定经验的工程师也好，只要是面对找工作的问题，就一定会有一件必须要做的事情，那就是写简历。<br>正巧在网上看到了一篇关于写简历的简单而又实用的博客，分享一下，希望可以给正在找工作的大家一些帮助。</p>
<a id="more"></a>

<p>原文地址：<a href="http://uicss.cn/great-resume/" target="_blank" rel="noopener">http://uicss.cn/great-resume/</a></p>
<hr>
<h3 id="先说标题"><a href="#先说标题" class="headerlink" title="先说标题"></a>先说标题</h3><p>   很多人的简历命名为【简历】或者【个人简历】</p>
<p>   我们的HR通常一天会收集几十份简历一起发过来。如果简历合适，需要约面的时候，会直接回复HR的邮件，“请安排【崔凯】的面试。”如果简历的名称是【崔凯的简历】，便于理解。</p>
<p>   另外，我们团队目前在招聘的岗位包含iOS/Mac/Android/Windows/Web/UI各种岗位，这些岗位会对应不同的面试官，如果简历的标题是【崔凯Web开发】，便于HR理解，应聘者是做Web开发的，这样会安排一个做Web的面试官。</p>
<p>   还有就是现在所处的位置，通常外地的应聘者会被安排电话面试，如果简历里能在比较显眼的位置注明地理位置，【崔凯-UI设计-北京】，这样前期有个电面，再过来双方都有个了解。</p>
<h3 id="加减分"><a href="#加减分" class="headerlink" title="加减分"></a>加减分</h3><p>   我个人特别喜欢简历中附带了github或者blog的地址，也通常都会点开看看。</p>
<p>   如果里面内容很丰富，通常都会加分。</p>
<p>   但是，像我这样四年都没提交的，放上去反而减分 <a href="https://github.com/cuikai/" target="_blank" rel="noopener">https://github.com/cuikai/</a></p>
<p>   也或者两年才积攒了5篇的博客，更让人没有读的欲望。</p>
<h3 id="项目经验"><a href="#项目经验" class="headerlink" title="项目经验"></a>项目经验</h3><p>   其实不妨去看一下职位描述里所列的加分项，再整理一下自己做过的项目。</p>
<p>   有些团队期望招一个nodejs，如果能在第一眼就看到应聘者有node经验，后面很多字就不用看了。</p>
<p>   这些项目，如果还在线上，最好能给出URL</p>
<p>   例如最近在面的一位iOS开发，给出了应用的名称，但没有给地址。我猜它还在线上，我也确实很需要 iOS 的人，所以才会自己去 AppStore 上搜一下，但如果不是特别紧缺的岗位，简历写的又不怎么样，我实在不愿意在搜索上再花时间。例如某UI设计师(对，就是你)，作品直接丢过来40多M的压缩包，如果不是内推，谁会下载半天再解压缩去看。</p>
<h3 id="工作经历"><a href="#工作经历" class="headerlink" title="工作经历"></a>工作经历</h3><p>   社招还好，谁没换过几次工作。</p>
<p>   校招里挺可怕的是2个月换一次实习的公司。</p>
<p>   其实对实习生要求不多，稳定是最重要的，培养成本折腾不起。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>   格式尽量用PDF，见过一些doc格式又自定义过字体的，那酸爽……</p>
<p>   我倒不反对用html写简历，我自己也是html版本的，只是期望顺便能写一下 <code>@media print</code> 的样式</p>
<p>   很绚烂的简历，用黑白色打印出来，一片黑，很废墨的</p>
<p>   其实核心思想还是换位思考。自己幻想一下拿到简历的对方，彼此都舒服一点，基本上这事就成了。</p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>转载</tag>
        <tag>工作</tag>
        <tag>应聘</tag>
      </tags>
  </entry>
  <entry>
    <title>【JavaScript】让你的网站支持简体繁体切换</title>
    <url>/posts/46220/</url>
    <content><![CDATA[<p>具体实现：</p>
<ol>
<li>首先，<a href="/js/tw_cn.js">点击这里</a>右键另存下载简繁字体切换所需的tw_cn.js文件，上传到自己的网站空间。</li>
<li>其次，修改模板，在你想要显示简繁转换按钮的地方加上下面一段代码，正常情况添加到header.php或者siderbar.php就可以了。</li>
</ol>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;a id&#x3D;&quot;translateLink&quot; href&#x3D;&quot;javascript:translatePage();&quot;&gt;繁體&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure>

<p>最后，在footer.php添加下面代码，记得更改cookieDomain这一项。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;http:&#x2F;&#x2F;achillessatan.github.io&#x2F;js&#x2F;tw_cn.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">  var defaultEncoding &#x3D; 2; &#x2F;&#x2F;网站编写字体是否繁体，1-繁体，2-简体</span><br><span class="line">  var translateDelay &#x3D; 0; &#x2F;&#x2F;延迟时间,若不在前, 要设定延迟翻译时间, 如100表示100ms,默认为0</span><br><span class="line">  var cookieDomain &#x3D; &quot;http:&#x2F;&#x2F;achillessatan.github.io&#x2F;&quot;; &#x2F;&#x2F;Cookie地址, 一定要设定, 通常为你的网址</span><br><span class="line">  var msgToTraditionalChinese &#x3D; &quot;繁體&quot;; &#x2F;&#x2F;此处可以更改为你想要显示的文字</span><br><span class="line">  var msgToSimplifiedChinese &#x3D; &quot;简体&quot;; &#x2F;&#x2F;同上，但两处均不建议更改</span><br><span class="line">  var translateButtonId &#x3D; &quot;translateLink&quot;; &#x2F;&#x2F;默认互换id</span><br><span class="line">  translateInitilization();</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p>这就基本完成了简体繁体切换功能,不管你是hexo，jelly，Octopress等静态博客，还是wordpress，typecho，emlog，Z-Blog等动态的，都可以用上。具体的演示效果可以点击我博客底部简体中文切换字体,至于简体繁体切换按钮嘛，文字和样式可以按个人喜好自行更改。</p>
<p>原文地址： <a href="http://www.arao.me/2015/hexo-support-jian-fan-language/" target="_blank" rel="noopener">http://www.arao.me/2015/hexo-support-jian-fan-language/</a></p>
]]></content>
      <categories>
        <category>程序开发</category>
      </categories>
      <tags>
        <tag>转载</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>【Rails】使用 heart_seed 插入数据</title>
    <url>/posts/47905/</url>
    <content><![CDATA[<h3 id="使用背景"><a href="#使用背景" class="headerlink" title="使用背景"></a>使用背景</h3><p>heart_seed 是我同事写的一个用于从 xls 文件生成 YAML 文件的 gem 。<br>将 xls 文件生成 YAML 文件后再进行数据插入的好处在于何以非常容易的比对差分。<br>当然，其缺点则是 YAML 文件没有并不如 xls 文件表现得那样直观。</p>
<ul>
<li>github: <a href="https://github.com/sue445/heart_seed" target="_blank" rel="noopener">https://github.com/sue445/heart_seed</a></li>
<li>rubygems: <a href="http://rubygems.org/gems/heart_seed" target="_blank" rel="noopener">http://rubygems.org/gems/heart_seed</a></li>
</ul>
<a id="more"></a>

<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gem &#39;heart_seed&#39;</span><br></pre></td></tr></table></figure>
<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="执行初始化命令生成-config-heart-seed-yml-db-xls-db-seeds"><a href="#执行初始化命令生成-config-heart-seed-yml-db-xls-db-seeds" class="headerlink" title="执行初始化命令生成 config/heart_seed.yml, db/xls, db/seeds"></a>执行初始化命令生成 config/heart_seed.yml, db/xls, db/seeds</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bundle exec rake heart_seed:init</span><br></pre></td></tr></table></figure>

<h4 id="执行变换命令，将-xls-文件编译为-YAML-文件"><a href="#执行变换命令，将-xls-文件编译为-YAML-文件" class="headerlink" title="执行变换命令，将 xls 文件编译为 YAML 文件"></a>执行变换命令，将 xls 文件编译为 YAML 文件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># FILES, SHEETS 为可选项</span><br><span class="line">bundle exec rake heart_seed:xls FILES&#x3D;XXXX.xls SHEETS&#x3D;XXXX</span><br></pre></td></tr></table></figure>

<h4 id="执行插入数据"><a href="#执行插入数据" class="headerlink" title="执行插入数据"></a>执行插入数据</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># TABLES, CATALOGS 为可选项</span><br><span class="line">bundle exec rake db:seed TABLES&#x3D;XXXX,XXXX</span><br><span class="line"># or</span><br><span class="line">bundle exec rake heart_seed:db:seed CATALOGS&#x3D;XXXXX</span><br></pre></td></tr></table></figure>

<ul>
<li>在非 Rails 下需增加以下代码：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">require &#39;heart_seed&#x2F;tasks&#39;</span><br></pre></td></tr></table></figure>

<h3 id="xls-xlsx-文件的格式要求"><a href="#xls-xlsx-文件的格式要求" class="headerlink" title="xls / xlsx 文件的格式要求"></a>xls / xlsx 文件的格式要求</h3><ul>
<li>例：</li>
</ul>
<p>| id        |        title  |     description      |created_at          |<br>|:———–|————:|:————:|:————:|:————:|<br>| 1         |        title1 |     description1     |2014/6/1 12:10      |<br>| 2         |        title2 |     description2     |2014/6/2 12:10        |</p>
<ol>
<li>DB 中不存在的表会被无视</li>
<li>第一行为列名，一旦有空列出现则右侧的数据全部被无视。</li>
</ol>
<h3 id="生成的-YAML-文件格式"><a href="#生成的-YAML-文件格式" class="headerlink" title="生成的 YAML 文件格式"></a>生成的 YAML 文件格式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">articles_1:</span><br><span class="line">  id: 1</span><br><span class="line">  title: title1</span><br><span class="line">  description: description1</span><br><span class="line">  created_at: &#39;2014-06-01 12:10:00 +0900&#39;</span><br><span class="line">articles_2:</span><br><span class="line">  id: 2</span><br><span class="line">  title: title2</span><br><span class="line">  description: description2</span><br><span class="line">  created_at: &#39;2014-06-02 12:10:00 +0900&#39;</span><br></pre></td></tr></table></figure>

<h3 id="catalog的使用"><a href="#catalog的使用" class="headerlink" title="catalog的使用"></a>catalog的使用</h3><p>catalog 可以帮助用户插入指定表格的数据<br>config/heart_seed.yml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">catalogs:</span><br><span class="line">  user:</span><br><span class="line">  - users</span><br><span class="line">  - user_profiles</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CATALOGS&#x3D;user bundle exec rake db:seed</span><br></pre></td></tr></table></figure>

<h3 id="production-环境下必须制定-TABLES-或-CATALOG"><a href="#production-环境下必须制定-TABLES-或-CATALOG" class="headerlink" title="production 环境下必须制定 TABLES 或 CATALOG"></a>production 环境下必须制定 TABLES 或 CATALOG</h3><p>由于在不带有参数 TABLES 或 CATALOG 的情况下为数据全插入，因此为了防止在 production 环境下发生误操作，必须制定 TABLES 或 CATALOG 。</p>
<h3 id="数据库垂直分割情况下的设定"><a href="#数据库垂直分割情况下的设定" class="headerlink" title="数据库垂直分割情况下的设定"></a>数据库垂直分割情况下的设定</h3><p>db/seeds.rb</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SHARD_NAMES &#x3D; %W(</span><br><span class="line">  #&#123;Rails.env&#125;</span><br><span class="line">  shard_#&#123;Rails.env&#125;</span><br><span class="line">  shard2_#&#123;Rails.env&#125;</span><br><span class="line">)</span><br><span class="line">HeartSeed::DbSeed.import_all_with_shards(shard_names: SHARD_NAMES)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序开发</category>
      </categories>
      <tags>
        <tag>Rails</tag>
        <tag>gem</tag>
      </tags>
  </entry>
  <entry>
    <title>【Github】一台电脑使用多个 Github 账户</title>
    <url>/posts/54184/</url>
    <content><![CDATA[<h3 id="账户所用-SSH-秘钥生成"><a href="#账户所用-SSH-秘钥生成" class="headerlink" title="账户所用 SSH 秘钥生成"></a>账户所用 SSH 秘钥生成</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd ~&#x2F;.ssh</span><br><span class="line">$ ls</span><br><span class="line">id_rsa id_rsa.pub</span><br><span class="line"></span><br><span class="line">$ ssh-keygen -t rsa -c [mail] -f [filename]</span><br></pre></td></tr></table></figure>

<h3 id="将生成的-SSH-秘钥登录到-Github-账号中"><a href="#将生成的-SSH-秘钥登录到-Github-账号中" class="headerlink" title="将生成的 SSH 秘钥登录到 Github 账号中"></a>将生成的 SSH 秘钥登录到 Github 账号中</h3><p>登录 Github 账户，进入 <a href="https://github.com/settings/ssh" target="_blank" rel="noopener">https://github.com/settings/ssh</a><br>「Add SSH Key」中，将新生成的 .pub 秘钥粘贴至输入框</p>
<a id="more"></a>

<h3 id="编辑-ssh-config"><a href="#编辑-ssh-config" class="headerlink" title="编辑 ~/.ssh/config"></a>编辑 ~/.ssh/config</h3><p>对文件 ~/.ssh/config 进行编辑（如文件不存在则新建一个）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">  HostName github.com</span><br><span class="line">  User git</span><br><span class="line">  Port 22</span><br><span class="line">  IdentityFile ~&#x2F;.ssh&#x2F;id_rsa  # 主账号所使用的 SSH 秘钥</span><br><span class="line">  TCPKeepAlive yes</span><br><span class="line">  IdentitiesOnly yes</span><br><span class="line">Host github.com.sub  # (1) 副账号：可任意命名</span><br><span class="line">  HostName github.com</span><br><span class="line">  User git</span><br><span class="line">  Port 22</span><br><span class="line">  IdentityFile ~&#x2F;.ssh&#x2F;id_rsa_sub  # (2) 副账号所使用 SSH 秘钥路径</span><br><span class="line">  TCPKeepAlive yes</span><br><span class="line">  IdentitiesOnly yes</span><br></pre></td></tr></table></figure>

<h3 id="使用副账号-clone-远程仓库"><a href="#使用副账号-clone-远程仓库" class="headerlink" title="使用副账号 clone 远程仓库"></a>使用副账号 clone 远程仓库</h3><p>正常情况下 <code>git clone</code> 与 <code>git remote add</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git clone git@github.com:xxx&#x2F;multi-account-sample.git</span><br><span class="line">$ git remote add origin git@github.com:xxx&#x2F;multi-account-sample.git</span><br></pre></td></tr></table></figure>

<p>在使用副账号时则将@之后的部分进行修改</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git clone git@github.com.sub:xxx&#x2F;multi-account-sample.git</span><br><span class="line">$ git remote add origin git@github.com.sub:xxx&#x2F;multi-account-sample.git</span><br></pre></td></tr></table></figure>

<h3 id="设置副账号的-user-name-和-user-email"><a href="#设置副账号的-user-name-和-user-email" class="headerlink" title="设置副账号的 user.name 和 user.email"></a>设置副账号的 <code>user.name</code> 和 <code>user.email</code></h3><p>在副账号所管理的文件下，执行一次如下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git config user.name [sub_account.user_name]</span><br><span class="line">$ git config user.email [sub_account.email]</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序开发</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>SSH</tag>
      </tags>
  </entry>
  <entry>
    <title>中文文案排版</title>
    <url>/posts/41799/</url>
    <content><![CDATA[<p>统一中文文案、排版的相关用法，降低团队成员之间的沟通成本，增强网站气质。<br>原文地址：<a href="http://wsgzao.github.io/post/chinese-copywriting-guidelines" target="_blank" rel="noopener">http://wsgzao.github.io/post/chinese-copywriting-guidelines</a></p>
<hr>
<h2 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h2><p>「有研究显示，打字的时候不喜欢在中文和英文之间加空格的人，感情路都走得很辛苦，有七成的比例会在 34 岁的时候跟自己不爱的人结婚，而其余三成的人最后只能把遗产留给自己的猫。毕竟爱情跟书写都需要适时地留白。与大家共勉之。」——<a href="https://github.com/vinta/paranoid-auto-spacing" target="_blank" rel="noopener">vinta/paranoid-auto-spacing</a></p>
<a id="more"></a>

<h3 id="中英文之间需要增加空格"><a href="#中英文之间需要增加空格" class="headerlink" title="中英文之间需要增加空格"></a>中英文之间需要增加空格</h3><p>正确：</p>
<blockquote>
<p>在 LeanCloud 上，数据存储是围绕 <code>AVObject</code> 进行的。</p>
</blockquote>
<p>错误：</p>
<blockquote>
<p>在LeanCloud上，数据存储是围绕<code>AVObject</code>进行的。</p>
</blockquote>
<blockquote>
<p>在 LeanCloud上，数据存储是围绕<code>AVObject</code> 进行的。</p>
</blockquote>
<p>完整的正确用法：</p>
<blockquote>
<p>在 LeanCloud 上，数据存储是围绕 <code>AVObject</code> 进行的。每个 <code>AVObject</code> 都包含了与 JSON 兼容的 key-value 对应的数据。数据是 schema-free 的，你不需要在每个 <code>AVObject</code> 上提前指定存在哪些键，只要直接设定对应的 key-value 即可。</p>
</blockquote>
<p>例外：「豆瓣FM」等产品名词，按照官方所定义的格式书写。</p>
<h3 id="中文与数字之间需要增加空格"><a href="#中文与数字之间需要增加空格" class="headerlink" title="中文与数字之间需要增加空格"></a>中文与数字之间需要增加空格</h3><p>正确：</p>
<blockquote>
<p>今天出去买菜花了 5000 元。</p>
</blockquote>
<p>错误：</p>
<blockquote>
<p>今天出去买菜花了 5000元。</p>
</blockquote>
<blockquote>
<p>今天出去买菜花了5000元。</p>
</blockquote>
<h3 id="数字与单位之间需要增加空格"><a href="#数字与单位之间需要增加空格" class="headerlink" title="数字与单位之间需要增加空格"></a>数字与单位之间需要增加空格</h3><p>正确：</p>
<blockquote>
<p>我家的光纤入户宽带有 10 Gbps，SSD 一共有 20 TB。</p>
</blockquote>
<p>错误：</p>
<blockquote>
<p>我家的光纤入户宽带有 10Gbps，SSD 一共有 10TB。</p>
</blockquote>
<p>例外：度／百分比与数字之间不需要增加空格：</p>
<p>正确：</p>
<blockquote>
<p>今天是 233° 的高温。</p>
</blockquote>
<blockquote>
<p>新 MacBook Pro 有 15% 的 CPU 性能提升。</p>
</blockquote>
<p>错误：</p>
<blockquote>
<p>今天是 233 ° 的高温。</p>
</blockquote>
<blockquote>
<p>新 MacBook Pro 有 15 % 的 CPU 性能提升。</p>
</blockquote>
<h3 id="全角标点与其他字符之间不加空格"><a href="#全角标点与其他字符之间不加空格" class="headerlink" title="全角标点与其他字符之间不加空格"></a>全角标点与其他字符之间不加空格</h3><p>正确：</p>
<blockquote>
<p>刚刚买了一部 iPhone，好开心！</p>
</blockquote>
<p>错误：</p>
<blockquote>
<p>刚刚买了一部 iPhone ，好开心！</p>
</blockquote>
<h3 id="ms-text-autospace-to-the-rescue"><a href="#ms-text-autospace-to-the-rescue" class="headerlink" title="-ms-text-autospace to the rescue?"></a><code>-ms-text-autospace</code> to the rescue?</h3><p>Microsoft 有个 <a href="http://msdn.microsoft.com/en-us/library/ie/ms531164(v=vs.85).aspx" target="_blank" rel="noopener"><code>-ms-text-autospace</code></a> 的 CSS 属性可以实现自动为中英文之间增加空白。不过目前并未普及，另外在其他应用场景，例如 OS X、iOS 的用户界面目前并不存在这个特性，所以请继续保持随手加空格的习惯。</p>
<h2 id="标点符号"><a href="#标点符号" class="headerlink" title="标点符号"></a>标点符号</h2><h3 id="不重复使用标点符号"><a href="#不重复使用标点符号" class="headerlink" title="不重复使用标点符号"></a>不重复使用标点符号</h3><p>正确：</p>
<blockquote>
<p>德国队竟然战胜了巴西队！</p>
</blockquote>
<blockquote>
<p>她竟然对你说「喵」？！</p>
</blockquote>
<p>错误：</p>
<blockquote>
<p>德国队竟然战胜了巴西队！！</p>
</blockquote>
<blockquote>
<p>德国队竟然战胜了巴西队！！！！！！！！</p>
</blockquote>
<blockquote>
<p>她竟然对你说「喵」？？！！</p>
</blockquote>
<blockquote>
<p>她竟然对你说「喵」？！？！？？！！</p>
</blockquote>
<h2 id="全角和半角"><a href="#全角和半角" class="headerlink" title="全角和半角"></a>全角和半角</h2><p>不明白什么是全角（全形）与半角（半形）符号？请查看维基百科词条『<a href="http://zh.wikipedia.org/wiki/%E5%85%A8%E5%BD%A2%E5%92%8C%E5%8D%8A%E5%BD%A2" target="_blank" rel="noopener">全角和半角</a>』。</p>
<h3 id="使用全角中文标点"><a href="#使用全角中文标点" class="headerlink" title="使用全角中文标点"></a>使用全角中文标点</h3><p>正确：</p>
<blockquote>
<p>嗨！你知道嘛？今天前台的小妹跟我说「喵」了哎！</p>
</blockquote>
<blockquote>
<p>核磁共振成像（NMRI）是什么原理都不知道？JFGI！</p>
</blockquote>
<p>错误：</p>
<blockquote>
<p>嗨! 你知道嘛? 今天前台的小妹跟我说 “喵” 了哎!</p>
</blockquote>
<blockquote>
<p>嗨!你知道嘛?今天前台的小妹跟我说”喵”了哎!</p>
</blockquote>
<blockquote>
<p>核磁共振成像 (NMRI) 是什么原理都不知道? JFGI!</p>
</blockquote>
<blockquote>
<p>核磁共振成像(NMRI)是什么原理都不知道?JFGI!</p>
</blockquote>
<h3 id="数字使用半角字符"><a href="#数字使用半角字符" class="headerlink" title="数字使用半角字符"></a>数字使用半角字符</h3><p>正确：</p>
<blockquote>
<p>这件蛋糕只卖 1000 元。</p>
</blockquote>
<p>错误：</p>
<blockquote>
<p>这件蛋糕只卖 １０００ 元。</p>
</blockquote>
<p>例外：在设计稿、宣传海报中如出现极少量数字的情形时，为方便文字对齐，是可以使用全角数字的。</p>
<h3 id="遇到完整的英文整句、特殊名词，其內容使用半角标点"><a href="#遇到完整的英文整句、特殊名词，其內容使用半角标点" class="headerlink" title="遇到完整的英文整句、特殊名词，其內容使用半角标点"></a>遇到完整的英文整句、特殊名词，其內容使用半角标点</h3><p>正确：</p>
<blockquote>
<p>乔布斯那句话是怎么说的？「Stay hungry, stay foolish.」。</p>
</blockquote>
<blockquote>
<p>推荐你阅读『Hackers &amp; Painters: Big Ideas from the Computer Age』，非常的有趣。</p>
</blockquote>
<p>错误：</p>
<blockquote>
<p>乔布斯那句话是怎么说的？「Stay hungry，stay foolish。」。</p>
</blockquote>
<blockquote>
<p>推荐你阅读『Hackers＆Painters：Big Ideas from the Computer Age』，非常的有趣。</p>
</blockquote>
<h2 id="名词"><a href="#名词" class="headerlink" title="名词"></a>名词</h2><h3 id="专有名词使用正确的大小写"><a href="#专有名词使用正确的大小写" class="headerlink" title="专有名词使用正确的大小写"></a>专有名词使用正确的大小写</h3><p>大小写相关用法原属于英文书写范畴，不属于本 wiki 讨论內容，在这里只对部分易错用法进行简述。</p>
<p>正确：</p>
<blockquote>
<p>使用 GitHub 登录</p>
</blockquote>
<blockquote>
<p>我们的客户有 GitHub、Foursquare、Microsoft Corporation、Google、Facebook, Inc.。</p>
</blockquote>
<p>错误：</p>
<blockquote>
<p>使用 github 登录</p>
</blockquote>
<blockquote>
<p>使用 GITHUB 登录</p>
</blockquote>
<blockquote>
<p>使用 Github 登录</p>
</blockquote>
<blockquote>
<p>使用 gitHub 登录</p>
</blockquote>
<blockquote>
<p>使用 gｲんĤЦ8 登录</p>
</blockquote>
<blockquote>
<p>我们的客户有 github、foursquare、microsoft corporation、google、facebook, inc.。</p>
</blockquote>
<blockquote>
<p>我们的客户有 GITHUB、FOURSQUARE、MICROSOFT CORPORATION、GOOGLE、FACEBOOK, INC.。</p>
</blockquote>
<blockquote>
<p>我们的客户有 Github、FourSquare、MicroSoft Corporation、Google、FaceBook, Inc.。</p>
</blockquote>
<blockquote>
<p>我们的客户有 gitHub、fourSquare、microSoft Corporation、google、faceBook, Inc.。</p>
</blockquote>
<blockquote>
<p>我们的客户有 gｲんĤЦ8、ｷouЯƧquﾑгє、๓เςг๏ร๏Ŧt ς๏гק๏гคtเ๏ภn、900913、ƒ4ᄃëв๏๏к, IПᄃ.。</p>
</blockquote>
<p>注意：当网页中需要配合整体视觉风格而出现全部大写／小写的情形，HTML 中请使用标准的大小写规范进行书写；并通过 <code>text-transform: uppercase;</code>／<code>text-transform: lowercase;</code> 对表现形式进行定义。</p>
<h3 id="不要使用不地道的缩写"><a href="#不要使用不地道的缩写" class="headerlink" title="不要使用不地道的缩写"></a>不要使用不地道的缩写</h3><p>正确：</p>
<blockquote>
<p>我们需要一位熟悉 JavaScript、HTML5，至少理解一种框架（如 Backbone.js、AngularJS、React 等）的前端开发者。</p>
</blockquote>
<p>错误：</p>
<blockquote>
<p>我们需要一位熟悉 Js、h5，至少理解一种框架（如 backbone、angular、RJS 等）的 FED。</p>
</blockquote>
<h2 id="争议"><a href="#争议" class="headerlink" title="争议"></a>争议</h2><p>以下用法略带有个人色彩，既：无论是否遵循下述规则，从语法的角度来讲都是<strong>正确</strong>的。</p>
<h3 id="链接之间增加空格"><a href="#链接之间增加空格" class="headerlink" title="链接之间增加空格"></a>链接之间增加空格</h3><p>用法：</p>
<blockquote>
<p>请 <a href="#">提交一个 issue</a> 并分配给相关同事。</p>
</blockquote>
<blockquote>
<p>访问我们网站的最新动态，请 <a href="#">点击这里</a> 进行订阅！</p>
</blockquote>
<p>对比用法：</p>
<blockquote>
<p>请<a href="#">提交一个 issue</a> 并分配给相关同事。</p>
</blockquote>
<blockquote>
<p>访问我们网站的最新动态，请<a href="#">点击这里</a>进行订阅！</p>
</blockquote>
<h3 id="简体中文使用直角引号"><a href="#简体中文使用直角引号" class="headerlink" title="简体中文使用直角引号"></a>简体中文使用直角引号</h3><p>用法：</p>
<blockquote>
<p>「老师，『有条不紊』的『紊』是什么意思？」</p>
</blockquote>
<p>对比用法：</p>
<blockquote>
<p>“老师，‘有条不紊’的‘紊’是什么意思？”</p>
</blockquote>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><table>
<thead>
<tr>
<th>仓库</th>
<th>语言</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://github.com/vinta/paranoid-auto-spacing" target="_blank" rel="noopener">vinta/paranoid-auto-spacing</a></td>
<td>JavaScript</td>
</tr>
<tr>
<td><a href="https://github.com/huei90/pangu.node" target="_blank" rel="noopener">huei90/pangu.node</a></td>
<td>Node.js</td>
</tr>
<tr>
<td><a href="https://github.com/huacnlee/auto-correct" target="_blank" rel="noopener">huacnlee/auto-correct</a></td>
<td>Ruby</td>
</tr>
<tr>
<td><a href="https://github.com/sparanoid/space-lover" target="_blank" rel="noopener">sparanoid/space-lover</a></td>
<td>PHP (WordPress)</td>
</tr>
<tr>
<td><a href="https://github.com/NauxLiu/auto-correct" target="_blank" rel="noopener">nauxliu/auto-correct</a></td>
<td>PHP</td>
</tr>
<tr>
<td><a href="https://github.com/hotoo/pangu.vim" target="_blank" rel="noopener">hotoo/pangu.vim</a></td>
<td>Vim</td>
</tr>
<tr>
<td><a href="https://github.com/sparanoid/grunt-auto-spacing" target="_blank" rel="noopener">sparanoid/grunt-auto-spacing</a></td>
<td>Node.js (Grunt)</td>
</tr>
<tr>
<td><a href="https://github.com/hjiang/scripts/blob/master/add-space-between-latin-and-cjk" target="_blank" rel="noopener">hjiang/scripts/add-space-between-latin-and-cjk</a></td>
<td>Python</td>
</tr>
</tbody></table>
<h2 id="谁在这样做？"><a href="#谁在这样做？" class="headerlink" title="谁在这样做？"></a>谁在这样做？</h2><table>
<thead>
<tr>
<th>网站</th>
<th>文案</th>
<th>UGC</th>
</tr>
</thead>
<tbody><tr>
<td><a href="http://www.apple.com/cn/" target="_blank" rel="noopener">Apple 中国</a></td>
<td>Yes</td>
<td>N/A</td>
</tr>
<tr>
<td><a href="http://www.apple.com/hk/" target="_blank" rel="noopener">Apple 香港</a></td>
<td>Yes</td>
<td>N/A</td>
</tr>
<tr>
<td><a href="http://www.apple.com/tw/" target="_blank" rel="noopener">Apple 台湾</a></td>
<td>Yes</td>
<td>N/A</td>
</tr>
<tr>
<td><a href="http://www.microsoft.com/zh-cn/" target="_blank" rel="noopener">Microsoft 中国</a></td>
<td>Yes</td>
<td>N/A</td>
</tr>
<tr>
<td><a href="http://www.microsoft.com/zh-hk/" target="_blank" rel="noopener">Microsoft 香港</a></td>
<td>Yes</td>
<td>N/A</td>
</tr>
<tr>
<td><a href="http://www.microsoft.com/zh-tw/" target="_blank" rel="noopener">Microsoft 台湾</a></td>
<td>Yes</td>
<td>N/A</td>
</tr>
<tr>
<td><a href="http://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a></td>
<td>Yes</td>
<td>N/A</td>
</tr>
<tr>
<td><a href="http://www.zhihu.com/" target="_blank" rel="noopener">知乎</a></td>
<td>Yes</td>
<td>部分用户达成</td>
</tr>
<tr>
<td><a href="http://www.v2ex.com/" target="_blank" rel="noopener">V2EX</a></td>
<td>Yes</td>
<td>Yes</td>
</tr>
<tr>
<td><a href="http://segmentfault.com/" target="_blank" rel="noopener">SegmentFault</a></td>
<td>Yes</td>
<td>部分用户达成</td>
</tr>
<tr>
<td><a href="http://apple4us.com/" target="_blank" rel="noopener">Apple4us</a></td>
<td>Yes</td>
<td>N/A</td>
</tr>
<tr>
<td><a href="http://www.wandoujia.com/" target="_blank" rel="noopener">豌豆荚</a></td>
<td>Yes</td>
<td>N/A</td>
</tr>
<tr>
<td><a href="http://ruby-china.org/" target="_blank" rel="noopener">Ruby China</a></td>
<td>Yes</td>
<td>标题达成</td>
</tr>
<tr>
<td><a href="http://phphub.org/" target="_blank" rel="noopener">PHPHub</a></td>
<td>Yes</td>
<td>标题达成</td>
</tr>
</tbody></table>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://grammar.about.com/od/punctuationandmechanics/a/Guidelines-For-Using-Capital-Letters.htm" target="_blank" rel="noopener">Guidelines for Using Capital Letters</a></li>
<li><a href="http://en.wikipedia.org/wiki/Letter_case" target="_blank" rel="noopener">Letter case - Wikipedia</a></li>
<li><a href="http://www.oxforddictionaries.com/us/words/punctuation" target="_blank" rel="noopener">Punctuation - Oxford Dictionaries</a></li>
<li><a href="https://owl.english.purdue.edu/owl/section/1/6/" target="_blank" rel="noopener">Punctuation - The Purdue OWL</a></li>
<li><a href="http://www.wikihow.com/Use-English-Punctuation-Correctly" target="_blank" rel="noopener">How to Use English Punctuation Corrently - wikiHow</a></li>
<li><a href="https://zh.opensuse.org/index.php?title=Help:%E6%A0%BC%E5%BC%8F" target="_blank" rel="noopener">格式 - openSUSE</a></li>
<li><a href="http://zh.wikipedia.org/wiki/%E5%85%A8%E5%BD%A2%E5%92%8C%E5%8D%8A%E5%BD%A2" target="_blank" rel="noopener">全角和半角 - 维基百科</a></li>
<li><a href="http://zh.wikipedia.org/wiki/%E5%BC%95%E8%99%9F" target="_blank" rel="noopener">引号 - 维基百科</a></li>
<li><a href="http://zh.wikipedia.org/wiki/%E7%96%91%E5%95%8F%E9%A9%9A%E5%98%86%E8%99%9F" target="_blank" rel="noopener">疑问惊叹号 - 维基百科</a></li>
</ul>
]]></content>
      <categories>
        <category>设计</category>
      </categories>
      <tags>
        <tag>设计</tag>
        <tag>转载</tag>
      </tags>
  </entry>
  <entry>
    <title>【ruby】汉字数字排序</title>
    <url>/posts/64478/</url>
    <content><![CDATA[<p>在制作地址系统时，遇到需要将地址的丁目大小从小到大排序显示的问题。由于数据库地址中的丁目信息是按照汉字数字的形式进行储存，而系统并非根据汉字数字所代表的数字大小来进行排序，因此只能通过简单的手动排序来进行处理。</p>
<h3 id="通过hash进行转换"><a href="#通过hash进行转换" class="headerlink" title="通过hash进行转换"></a>通过hash进行转换</h3><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sort_by_number</span><span class="params">(array)</span></span></span><br><span class="line">  number_char = &#123;</span><br><span class="line">    <span class="string">"零"</span> =&gt; <span class="number">0</span>, <span class="string">"一"</span> =&gt; <span class="number">1</span>, <span class="string">"二"</span> =&gt; <span class="number">2</span>,</span><br><span class="line">    <span class="string">"三"</span> =&gt; <span class="number">3</span>, <span class="string">"四"</span> =&gt; <span class="number">4</span>, <span class="string">"五"</span> =&gt; <span class="number">5</span>,</span><br><span class="line">    <span class="string">"六"</span> =&gt; <span class="number">6</span>, <span class="string">"七"</span> =&gt; <span class="number">7</span>, <span class="string">"八"</span> =&gt; <span class="number">8</span>,</span><br><span class="line">    <span class="string">"九"</span> =&gt; <span class="number">9</span>, <span class="string">"十"</span> =&gt; <span class="number">10</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  array.sort <span class="keyword">do</span> <span class="params">|a, b|</span></span><br><span class="line">    number_char[a[<span class="number">0</span>]] &lt;=&gt; number_char[b[<span class="number">0</span>]]</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">array = <span class="string">%w(一丁目 四丁目 三丁目 二丁目)</span></span><br><span class="line"><span class="comment"># =&gt; ["一丁目", "四丁目", "三丁目", "二丁目"]</span></span><br><span class="line"></span><br><span class="line">array.sort&#123; <span class="params">|a, b|</span> a[<span class="number">0</span>] &lt;=&gt; b[<span class="number">0</span>] &#125;</span><br><span class="line"><span class="comment"># =&gt; ["一丁目", "三丁目", "二丁目", "四丁目"]</span></span><br><span class="line"></span><br><span class="line">sort_by_number array</span><br><span class="line"><span class="comment"># =&gt; ["一丁目", "二丁目", "三丁目", "四丁目"]</span></span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="使用Gem-ZenTol将汉字转化为数字后进行排序"><a href="#使用Gem-ZenTol将汉字转化为数字后进行排序" class="headerlink" title="使用Gem ZenTol将汉字转化为数字后进行排序"></a>使用Gem ZenTol将汉字转化为数字后进行排序</h3><p><a href="https://github.com/yoshitsugu/zen_to_i" target="_blank" rel="noopener">https://github.com/yoshitsugu/zen_to_i</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gem &#39;zen_to_i&#39;</span><br></pre></td></tr></table></figure>

<p>对上述代码进行简化</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'zen_to_i'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sort_by_number</span><span class="params">(array)</span></span></span><br><span class="line">  array.sort_by <span class="keyword">do</span> <span class="params">|str|</span></span><br><span class="line">    str.zen_to_i.to_i</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">array = <span class="string">%w(一丁目 四丁目 十丁目 十三丁目 二丁目)</span></span><br><span class="line"><span class="comment">#=&gt; ["一丁目", "四丁目", "十丁目", "十三丁目", "二丁目"]</span></span><br><span class="line">sort_by_number array</span><br><span class="line"><span class="comment">#=&gt; ["一丁目", "二丁目", "四丁目", "十丁目", "十三丁目"]</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序开发</category>
      </categories>
      <tags>
        <tag>Ruby</tag>
      </tags>
  </entry>
  <entry>
    <title>【Rails】使用Gem生成sitemap</title>
    <url>/posts/56481/</url>
    <content><![CDATA[<h3 id="安装Gem"><a href="#安装Gem" class="headerlink" title="安装Gem"></a>安装Gem</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gem &#39;sitemap_generator&#39;</span><br></pre></td></tr></table></figure>

<h3 id="生成config-sitemap-rb"><a href="#生成config-sitemap-rb" class="headerlink" title="生成config/sitemap.rb"></a>生成config/sitemap.rb</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bundle exec rake sitemap:install</span><br></pre></td></tr></table></figure>
<p>修改SitemapGenerator::Sitemap.default_host</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SitemapGenerator::Sitemap.default_host &#x3D; &#39;http:&#x2F;&#x2F;example.com&#39;</span><br></pre></td></tr></table></figure>

<h3 id="在public-下生成sitemap文件"><a href="#在public-下生成sitemap文件" class="headerlink" title="在public/下生成sitemap文件"></a>在public/下生成sitemap文件</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Development&#x2F;Test环境</span><br><span class="line">bundle exec rake sitemap:refresh:no_ping</span><br><span class="line"></span><br><span class="line"># Production环境</span><br><span class="line">bundle exec rake sitemap:refresh</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>结果如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rake sitemap:refresh:no_ping</span><br><span class="line">&gt; In &#x2F;app_path&#x2F;to&#x2F;public&#x2F;</span><br><span class="line">&gt; + sitemap1.xml.gz                                          1 links &gt; &#x2F;  340 Bytes</span><br><span class="line">&gt; + sitemap_index.xml.gz                                  1 sitemaps &gt; &#x2F;  241 Bytes</span><br><span class="line">&gt; Sitemap stats: 1 links &#x2F; 1 sitemaps &#x2F; 0m00s</span><br></pre></td></tr></table></figure>

<h3 id="修改Robots-txt"><a href="#修改Robots-txt" class="headerlink" title="修改Robots.txt"></a>修改Robots.txt</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Sitemap: http:&#x2F;&#x2F;www.example.com&#x2F;sitemap.xml.gz</span><br></pre></td></tr></table></figure>

<h3 id="Deployments-amp-Capistrano"><a href="#Deployments-amp-Capistrano" class="headerlink" title="Deployments &amp; Capistrano"></a>Deployments &amp; Capistrano</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">require &#39;capistrano&#x2F;sitemap_generator&#39;</span><br></pre></td></tr></table></figure>
<p>可使用的命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:sitemap:create   #Create sitemaps without pinging search engines</span><br><span class="line">deploy:sitemap:refresh  #Create sitemaps and ping search engines</span><br><span class="line">deploy:sitemap:clean    #Clean up sitemaps in the sitemap path</span><br></pre></td></tr></table></figure>

<h3 id="参考网站"><a href="#参考网站" class="headerlink" title="参考网站"></a>参考网站</h3><p><a href="http://morizyun.github.io/blog/meta-tags-sitemap-generator-rails-seo/" target="_blank" rel="noopener">http://morizyun.github.io/blog/meta-tags-sitemap-generator-rails-seo/</a></p>
<p><a href="https://github.com/kjvarga/sitemap_generator" target="_blank" rel="noopener">https://github.com/kjvarga/sitemap_generator</a></p>
]]></content>
      <categories>
        <category>程序开发</category>
      </categories>
      <tags>
        <tag>Ruby</tag>
        <tag>Rails</tag>
        <tag>SOE</tag>
        <tag>gem</tag>
      </tags>
  </entry>
  <entry>
    <title>【Rails】根据首字发音对字符串进行分组</title>
    <url>/posts/8426/</url>
    <content><![CDATA[<p>最近在做一个地址查询系统。在日本的系统中，经常可以见到系统根据选项的第一个字发音的所在行来对其进行分组。这样做的好处是让繁多的选项变得有序化，可以让用户更加快捷地找到自己所需的选项。</p>
<p>首先，我们需要在数据库中储存地址的カナ信息，例如：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">=&gt; ZipCode(<span class="symbol">code:</span> string, <span class="symbol">state_code:</span> integer, <span class="symbol">state:</span> string, <span class="symbol">state_kana:</span> string, <span class="symbol">city_code:</span> integer, <span class="symbol">city:</span> string, <span class="symbol">city_kana:</span> string, <span class="symbol">town_code:</span> integer, <span class="symbol">town:</span> string, <span class="symbol">town_kana:</span> string, <span class="symbol">special:</span> boolean, <span class="symbol">created_at:</span> datetime, <span class="symbol">updated_at:</span> datetime)</span><br></pre></td></tr></table></figure>

<a id="more"></a>


<p>在准备好数据后，我们根据数据中的カナ信息来对数据进行排序：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">group_by_kana</span><span class="params">(zip_codes, column)</span></span></span><br><span class="line">	<span class="keyword">return</span> zip_codes <span class="keyword">unless</span> zip_codes[<span class="number">0</span>].respond_to? column</span><br><span class="line">	key = <span class="string">%w(ア カ サ タ ナ ハ マ ヤ ラ ワ)</span></span><br><span class="line">	zip_codes.group_by <span class="keyword">do</span> <span class="params">|zip_code|</span></span><br><span class="line">		key[key.index&#123;<span class="params">|i|</span> i &gt; zip_code.send(column)[<span class="number">0</span>]&#125;.to_i - <span class="number">1</span>]</span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">zip_codes = ZipCode.where(<span class="symbol">state_code:</span> <span class="number">13</span>).group(<span class="symbol">:city_code</span>).limit(<span class="number">5</span>)</span><br><span class="line"><span class="comment">#=&gt; [#&lt;ZipCode code: "1000000", state_code: 13, state: "東京都", state_kana: "トウキョウト", city_code: 13101, city: "千代田区", city_kana: "チヨダク", town_code: 131010000, town: nil, town_kana: nil, special: true, created_at: "2016-01-15 08:50:43", updated_at: "2016-01-18 04:20:35"&gt;,</span></span><br><span class="line"> <span class="comment">#&lt;ZipCode code: "1030000", state_code: 13, state: "東京都", state_kana: "トウキョウト", city_code: 13102, city: "中央区", city_kana: "チュウオウク", town_code: 131020000, town: nil, town_kana: nil, special: true, created_at: "2016-01-15 08:50:47", updated_at: "2016-01-18 04:20:36"&gt;,</span></span><br><span class="line"> <span class="comment">#&lt;ZipCode code: "1050000", state_code: 13, state: "東京都", state_kana: "トウキョウト", city_code: 13103, city: "港区", city_kana: "ミナトク", town_code: 131030000, town: nil, town_kana: nil, special: true, created_at: "2016-01-15 08:50:50", updated_at: "2016-01-18 04:20:37"&gt;,</span></span><br><span class="line"> <span class="comment">#&lt;ZipCode code: "1600000", state_code: 13, state: "東京都", state_kana: "トウキョウト", city_code: 13104, city: "新宿区", city_kana: "シンジュクク", town_code: 131040000, town: nil, town_kana: nil, special: true, created_at: "2016-01-15 08:50:54", updated_at: "2016-01-18 04:20:40"&gt;,</span></span><br><span class="line"> <span class="comment">#&lt;ZipCode code: "1120000", state_code: 13, state: "東京都", state_kana: "トウキョウト", city_code: 13105, city: "文京区", city_kana: "ブンキョウク", town_code: 131050000, town: nil, town_kana: nil, special: true, created_at: "2016-01-15 08:50:58", updated_at: "2016-01-18 04:20:41"&gt;]</span></span><br><span class="line"></span><br><span class="line">group_by_kana(zip_codes, <span class="symbol">:city_kana</span>)</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">"タ"</span>=&gt;</span><br><span class="line">  [#&lt;ZipCode code: "1000000", state_code: 13, state: "東京都", state_kana: "トウキョウト", city_code: 13101, city: "千代田区", city_kana: "チヨダク", town_code: 131010000, town: nil, town_kana: nil, special: true, created_at: "2016-01-15 08:50:43", updated_at: "2016-01-18 04:20:35"&gt;,</span><br><span class="line">   <span class="comment">#&lt;ZipCode code: "1030000", state_code: 13, state: "東京都", state_kana: "トウキョウト", city_code: 13102, city: "中央区", city_kana: "チュウオウク", town_code: 131020000, town: nil, town_kana: nil, special: true, created_at: "2016-01-15 08:50:47", updated_at: "2016-01-18 04:20:36"&gt;],</span></span><br><span class="line"> <span class="string">"マ"</span>=&gt;</span><br><span class="line">  [#&lt;ZipCode code: "1050000", state_code: 13, state: "東京都", state_kana: "トウキョウト", city_code: 13103, city: "港区", city_kana: "ミナトク", town_code: 131030000, town: nil, town_kana: nil, special: true, created_at: "2016-01-15 08:50:50", updated_at: "2016-01-18 04:20:37"&gt;],</span><br><span class="line"> <span class="string">"サ"</span>=&gt;</span><br><span class="line">  [#&lt;ZipCode code: "1600000", state_code: 13, state: "東京都", state_kana: "トウキョウト", city_code: 13104, city: "新宿区", city_kana: "シンジュクク", town_code: 131040000, town: nil, town_kana: nil, special: true, created_at: "2016-01-15 08:50:54", updated_at: "2016-01-18 04:20:40"&gt;],</span><br><span class="line"> <span class="string">"ハ"</span>=&gt;</span><br><span class="line">  [#&lt;ZipCode code: "1120000", state_code: 13, state: "東京都", state_kana: "トウキョウト", city_code: 13105, city: "文京区", city_kana: "ブンキョウク", town_code: 131050000, town: nil, town_kana: nil, special: true, created_at: "2016-01-15 08:50:58", updated_at: "2016-01-18 04:20:41"&gt;]&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序开发</category>
      </categories>
      <tags>
        <tag>Ruby</tag>
        <tag>Rails</tag>
      </tags>
  </entry>
</search>
